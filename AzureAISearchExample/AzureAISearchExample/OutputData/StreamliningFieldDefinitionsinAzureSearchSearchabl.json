{
  "Id": "30",
  "Title": "\u0022Streamlining Field Definitions in Azure Search: SearchableField and SimpleField\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfFrLucene)]        [JsonPropertyName(\u0022Description_fr\u0022)]        public string DescriptionFr { get; set; }        [SearchableField(IsFilterable = true, IsSortable = true, IsFacetable = true)]        public string Category { get; set; }        [SearchableField(IsFilterable = true, IsFacetable = true)]        public string[] Tags { get; set; }        [SimpleField(IsFilterable = true, IsSortable = true, IsFacetable = true)]        public bool?\r\nParkingIncluded { get; set; }        [SimpleField(IsFilterable = true, IsSortable = true, IsFacetable = true)]In the Azure.\r\nSearch.Documents client library, you can use SearchableField andSimpleField to streamline field definitions.\r\nBoth are derivatives of aSearchField and can potentially simplify your code:SimpleField can be any data type, is always non-searchable (it\u0027s ignoredfor full text search queries), and is retrievable (it\u0027s not hidden). Otherattributes are off by default, but can be enabled. You might use aSimpleField for document IDs or fields used only in filters, facets, orscoring profiles.\r\nIf so, be sure to apply any attributes that are necessaryfor the scenario, such as IsKey = true for a document ID. For moreinformation, see SimpleFieldAttribute.cs in source code.SearchableField must be a string, and is always searchable andretrievable. Other attributes are off by default, but can be enabled.Because this field type is searchable, it supports synonyms and the fullcomplement of analyzer properties. For more information, see theSearchableFieldAttribute.cs in source code.Whether you use the basic SearchField API or either one of the helpermodels, you must explicitly enable filter, facet, and sort attributes. Forexample, IsFilterable, IsSortable, and IsFacetable must be explicitly attributed,as shown in the sample above.3.\n"
}