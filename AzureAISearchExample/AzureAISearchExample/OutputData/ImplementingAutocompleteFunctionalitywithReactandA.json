{
  "Id": "188",
  "Title": "\u0022Implementing Autocomplete Functionality with React and Azure Search API\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfparams}            variant=\u0022outlined\u0022            label=\u0022What are you looking for?\u0022            onKeyDown={(e) =\u003E {              if (e.code.toLowerCase() === \u0022enter\u0022 \u0026\u0026 e.target.value) {                onFormSubmit(e.target.value);              }            }}          /\u003E        )}      /\u003E      \u003CStyledButton        key=\u0022styledbutton\u0022        variant=\u0022contained\u0022        onClick={onFormSubmit}      \u003E        Search      \u003C/StyledButton\u003E    \u003C/StyledContainer\u003E  );}This React component uses the @mui/material/Autocomplete component to provide asearch textbox, which also supports displaying suggestions (using the renderInputfunction).\r\nAutocomplete starts after the first several characters are entered. As each newcharacter is entered, it\u0027s sent as a query to the search engine. The results are displayedas a short list of suggestions.This autocomplete functionality is a common feature but this specific implementationhas an additional use case. The customer can enter text and select from the suggestionsor submit their entered text. The input from the suggestion list as well as the input fromthe textbox must be tracked for changes, which impact how the form is rendered andwhat is sent to the search API when the form is submitted.\r\nIf your use case for search allows your user to select only from the suggestions, that willreduce the scope of complexity of the control but limit the user experience.The Lookup API takes an ID and returns the document object from the search index. JavaScriptAzure Function: Get specific documentconst { SearchClient, AzureKeyCredential } = require(\u0022@azure/search-documents\u0022);const { app } = require(\u0027@azure/functions\u0027);const { CONFIG } = require(\u0022../lib/config\u0022);// Create a SearchClient to send queriesconst client = new SearchClient(    \u0060https://\u0060 \u002B CONFIG.SearchServiceName \u002B \u0060.search.windows.net/\u0060,    CONFIG.SearchIndexName,    new AzureKeyCredential(CONFIG.SearchApiQueryKey));app.\n"
}