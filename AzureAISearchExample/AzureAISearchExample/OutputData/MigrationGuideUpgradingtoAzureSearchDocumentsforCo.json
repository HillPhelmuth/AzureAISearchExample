{
  "Id": "668",
  "Title": "\u0022Migration Guide: Upgrading to Azure.Search.Documents for Cognitive Search\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfSpatial.Examples of this technique are available for System.Text.Json andNewtonsoft.Json.Version 11.3 additions (change log details):KnowledgeStoreAdded support for Azure.Core.GeoJson types in SearchDocument, SearchFilter andFieldBuilder.Added EventSource based logging. Event source name is Azure-Search-Documents. Current set of events are focused on tuning batch sizes forSearchIndexingBufferedSender.Added CustomEntityLookupSkill and DocumentExtractionSkill. AddedDefaultCountryHint in LanguageDetectionSkill.Quickstarts, tutorials, and C# samples have been updated to use theAzure.Search.Documents package.\r\nWe recommend reviewing the samples andwalkthroughs to learn about the new APIs before embarking on a migrationexercise.How to use Azure.Search.Documents introduces the most commonly used APIs.Even knowledgeable users of Cognitive Search might want to review thisintroduction to the new library as a precursor to migration.The following steps get you started on a code migration by walking through the first setof required tasks, especially regarding client references.1. Install the Azure.Search.Documents package by right-clicking on your projectreferences and selecting \u0022Manage NuGet Packages...\u0022 in Visual Studio.2. Replace using directives for Microsoft.\r\nAzure.Search with the following usingstatements:C#3. For classes that require JSON serialization, replace using Newtonsoft.Json withusing System.Text.Json.Serialization.4. Revise client authentication code. In previous versions, you would use propertieson the client object to set the API key (for example, theSearchServiceClient.Credentials property). In the current version, use theAzureKeyCredential class to pass the key as a credential, so that if needed, you canupdate the API key without creating new client objects.Client properties have been streamlined to just Endpoint, ServiceName, andIndexName (where appropriate). The following example uses the system Uri class toprovide the endpoint and the Environment class to read in the key value:Before upgradingSteps to upgradeusing Azure;using Azure.Search.Documents;using Azure.Search.Documents.Indexes;using Azure.Search.Documents.Indexes.Models;using Azure.Search.Documents.Models;C#5. Add new client references for indexer-related objects.\n"
}