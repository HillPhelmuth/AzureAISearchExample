{
  "Id": "392",
  "Title": "\u0022Understanding Scoring and Full Text Search in Azure Cognitive Search\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfIt\u0027s important to know that the scoring function weightsquery term frequency against its inverse document frequency in all documents withinthe shard, not across all shards!This means a relevance score could be different for identical documents if they reside ondifferent shards. Fortunately, such differences tend to disappear as the number ofdocuments in the index grows due to more even term distribution. It\u2019s not possible toassume on which shard any given document will be placed. However, assuming adocument key doesn\u0027t change, it will always be assigned to the same shard.In general, document score isn\u0027t the best attribute for ordering documents if orderstability is important.\r\nFor example, given two documents with an identical score, there\u0027sno guarantee that one appears first in subsequent runs of the same query. Documentscore should only give a general sense of document relevance relative to otherdocuments in the results set.The success of commercial search engines has raised expectations for full text searchover private data. For almost any kind of search experience, we now expect the engineto understand our intent, even when terms are misspelled or incomplete. We might evenexpect matches based on near equivalent terms or synonyms that we never specified.\r\nFrom a technical standpoint, full text search is highly complex, requiring sophisticatedlinguistic analysis and a systematic approach to processing in ways that distill, expand,and transform query terms to deliver a relevant result. Given the inherent complexities,there are many factors that can affect the outcome of a query. For this reason, investingthe time to understand the mechanics of full text search offers tangible benefits whentrying to work through unexpected results.Scoring in a distributed indexConclusionThis article explored full text search in the context of Azure Cognitive Search. We hope itgives you sufficient background to recognize potential causes and resolutions foraddressing common query problems. Build the sample index, try out different queries and review results. Forinstructions, see Build and query an index in the portal.Try other query syntax from the Search Documents example section or from Simplequery syntax in Search explorer in the portal.Review scoring profiles if you want to tune ranking in your search application.Learn how to apply language-specific lexical analyzers.\n"
}