{
  "Id": "1482",
  "Title": "\u0022Managing Security Identifiers and Group Memberships in Azure Search\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfIf you\u0027re adding search to an established application, you might have existing user andgroup identifiers in Microsoft Entra ID. In this case, you can skip the next three steps.However, if you don\u0027t have existing users, you can use Microsoft Graph APIs to createthe security principals. The following code snippets demonstrate how to generateidentifiers, which become data values for the security field in your Azure AI Search index.Create users and groupsIn our hypothetical college admissions application, this would be the security identifiersfor admissions staff.User and group membership might be very fluid, especially in large organizations.\r\nCodethat builds user and group identities should run often enough to pick up changes inorganization membership. Likewise, your Azure AI Search index requires a similar updateschedule to reflect the current status of permitted users and resources.\r\nC#C#C#Step 1: Create Groupprivate static Dictionary\u003CGroup, List\u003CUser\u003E\u003E CreateGroupsWithUsers(string tenant){    Group group = new Group()    {        DisplayName = \u0022My First Prog Group\u0022,        SecurityEnabled = true,        MailEnabled = false,        MailNickname = \u0022group1\u0022    };Step 2: Create UserUser user1 = new User(){    GivenName = \u0022First User\u0022,    Surname = \u0022User1\u0022,    MailNickname = \u0022User1\u0022,    DisplayName = \u0022First User\u0022,    UserPrincipalName = String. Format(\u0022user1@{0}\u0022, tenant),    PasswordProfile = new PasswordProfile() { Password = \u0022********\u0022 },    AccountEnabled = true};Step 3: Associate user and groupList\u003CUser\u003E users = new List\u003CUser\u003E() { user1, user2 };Dictionary\u003CGroup, List\u003CUser\u003E\u003E groups = new Dictionary\u003CGroup, List\u003CUser\u003E\u003E() { { group, users } };Optionally, to reduce network latency, you can cache the user-group associations sothat when a search request is issued, groups are returned from the cache, saving aroundtrip to Microsoft Entra ID.\n"
}