{
  "Id": "266",
  "Title": "\u0022Managing Azure AI Search Resources: Best Practices and Examples\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfYou can also use Logical operators (and, or, not) and comparison operators (eq, ne, gt, lt,ge, le). String comparisons are case-sensitive. For more information and examples, seeCreate a simple query.\uFF17 NoteThe $filter parameter only works with metadata that were marked filterable atthe creation of your index.\r\nReset and rerunIn the early experimental stages of development, the most practical approach for designiteration is to delete the objects from Azure AI Search and allow your code to rebuildthem. Resource names are unique. Deleting an object lets you recreate it using the samename.You can use the portal to delete indexes, indexers, and data sources. Or use DELETE andprovide URLs to each object. The following command deletes an indexer.HTTPStatus code 204 is returned on successful deletion.When you\u0027re working in your own subscription, at the end of a project, it\u0027s a good ideato remove the resources that you no longer need.\r\nResources left running can cost youmoney. You can delete resources individually or delete the resource group to delete theentire set of resources.You can find and manage resources in the portal, using the All resources or Resourcegroups link in the left-navigation pane.Now that you\u0027re familiar with the basics of Azure Blob indexing, let\u0027s take a closer lookat indexer configuration for JSON blobs in Azure Storage.DELETE https://[YOUR-SERVICE-NAME].search.windows.net/indexers/clinical-trials-json-indexer?api-version=2020-06-30Clean up resourcesNext stepsConfigure JSON blob indexingTutorial: Index from multiple datasources using the . NET SDKArticle\u202211/15/2023Azure AI Search can import, analyze, and index data from multiple data sources into asingle consolidated search index.This tutorial uses C# and the Azure.Search.Documents client library in the Azure SDK for.NET to index sample hotel data from an Azure Cosmos DB instance, and merge thatwith hotel room details drawn from Azure Blob Storage documents. The result will be acombined hotel search index containing hotel documents, with rooms as a complexdata types.In this tutorial, you\u0027ll perform the following tasks:If you don\u0027t have an Azure subscription, create a free account before you begin.This tutorial uses Azure.Search.\n"
}