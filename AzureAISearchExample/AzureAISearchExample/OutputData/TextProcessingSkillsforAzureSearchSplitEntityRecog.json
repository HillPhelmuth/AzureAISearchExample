{
  "Id": "296",
  "Title": "\u0022Text Processing Skills for Azure Search: Split, Entity Recognition, Key Phrase Extraction\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfAdd(new OutputFieldMappingEntry(\u0022textItems\u0022)    {        TargetName = \u0022pages\u0022,    });    SplitSkill splitSkill = new SplitSkill(inputMappings, outputMappings)    {        Description = \u0022Split content into pages\u0022,        Context = \u0022/document\u0022,        TextSplitMode = TextSplitMode.Pages,        MaximumPageLength = 4000,        DefaultLanguageCode = SplitSkillLanguage.\r\nEn    };    return splitSkill;}Entity recognition skillprivate static EntityRecognitionSkill CreateEntityRecognitionSkill(){    List\u003CInputFieldMappingEntry\u003E inputMappings = new List\u003CInputFieldMappingEntry\u003E();    inputMappings.Add(new InputFieldMappingEntry(\u0022text\u0022)    {        Source = \u0022/document/pages/*\u0022    });    List\u003COutputFieldMappingEntry\u003E outputMappings = new List\u003COutputFieldMappingEntry\u003E();    outputMappings.Add(new OutputFieldMappingEntry(\u0022organizations\u0022)    {Like the EntityRecognitionSkill instance that was just created, theKeyPhraseExtractionSkill is called for each page of the document.\r\nC#        TargetName = \u0022organizations\u0022    });    EntityRecognitionSkill entityRecognitionSkill = new EntityRecognitionSkill(inputMappings, outputMappings)    {        Description = \u0022Recognize organizations\u0022,        Context = \u0022/document/pages/*\u0022,        DefaultLanguageCode = EntityRecognitionSkillLanguage.En    };    entityRecognitionSkill.Categories.Add(EntityCategory.\r\nOrganization);    return entityRecognitionSkill;}Key phrase extraction skillprivate static KeyPhraseExtractionSkill CreateKeyPhraseExtractionSkill(){    List\u003CInputFieldMappingEntry\u003E inputMappings = new List\u003CInputFieldMappingEntry\u003E();    inputMappings.Add(new InputFieldMappingEntry(\u0022text\u0022)    {        Source = \u0022/document/pages/*\u0022    });    inputMappings. Add(new InputFieldMappingEntry(\u0022languageCode\u0022)    {        Source = \u0022/document/languageCode\u0022    });    List\u003COutputFieldMappingEntry\u003E outputMappings = new List\u003COutputFieldMappingEntry\u003E();    outputMappings.\n"
}