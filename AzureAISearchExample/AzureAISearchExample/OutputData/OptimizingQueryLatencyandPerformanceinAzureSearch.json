{
  "Id": "1321",
  "Title": "\u0022Optimizing Query Latency and Performance in Azure Search\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfQuery latencyS3 PerformanceQueries per secondIn this case, we see that adding a second partition significantly increases the maximumQPS but adding a third partition provides diminishing marginal returns. The smallerimprovement is likely because all of the data is already being pulled into the S3\u0027s activememory with just two partitions.Query latency varies based on the load of the service and services under higher stresswill have a higher average query latency. The following table shows the 25th, 50th, 75th,90th, 95th, and 99th percentiles of query latency for three different usage levels.\r\nPercentage of max QPSAverage latency25%75%90%95%99%20%50 ms20 ms64 ms83 ms98 ms160 ms50%62 ms24 ms80 ms107 ms130 ms253 ms80%115 ms38 ms121 ms218 ms352 ms828 msDocument Count: 7.\r\n5 millionIndex Size: 22 GBIndex Schema: 23 fields; 8 searchable, 10 filterable/facetableQuery Types: keyword searches with facets and hit highlightingQuery latencyBenchmark 2: Document searchScenario DetailsThe following chart shows the highest query load a service could handle for an extendedperiod of time in terms of queries per second (QPS).Query latency varies based on the load of the service and services under higher stresswill have a higher average query latency. The following table shows the 25th, 50th, 75th,90th, 95th, and 99th percentiles of query latency for three different usage levels.Percentage of max QPSAverage latency25%75%90%95%99%20%67 ms44 ms77 ms103 ms126 ms216 ms50%93 ms59 ms110 ms150 ms184 ms304 ms80%150 ms96 ms184 ms248 ms297 ms424 msThe following chart shows the highest query load a service could handle for an extendedperiod of time in terms of queries per second (QPS).\n"
}