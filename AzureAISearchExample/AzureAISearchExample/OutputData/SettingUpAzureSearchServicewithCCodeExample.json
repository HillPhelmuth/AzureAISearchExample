{
  "Id": "44",
  "Title": "\u0022Setting Up Azure Search Service with C# Code Example\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfBecause the code builds out the URI for you, specify just the search servicename in the \u0022serviceName\u0022 property.C#Set up your environmentCreate a search clientusing Azure;using Azure.Search.Documents;using Azure.Search.Documents.Indexes;using Azure.Search.Documents.Indexes.Models;using Azure.Search.Documents.\r\nModels; static void Main(string[] args) {     string serviceName = \u0022\u003CYOUR-SEARCH-SERVICE-NAME\u003E\u0022;     string apiKey = \u0022\u003CYOUR-SEARCH-ADMIN-API-KEY\u003E\u0022;     string indexName = \u0022hotels-quickstart\u0022;     // Create a SearchIndexClient to send create/delete index commands     Uri serviceEndpoint = new Uri($\u0022https://{serviceName}.\r\nsearch.windows.net/\u0022);     AzureKeyCredential credential = new AzureKeyCredential(apiKey);Create or update an index schema to include SemanticConfiguration andSemanticSettings. If you\u0027re updating an existing index, this modification doesn\u0027trequire a reindexing because the structure of your documents is unchanged.\r\nC#     SearchIndexClient adminClient = new SearchIndexClient(serviceEndpoint, credential);     // Create a SearchClient to load and query documents     SearchClient srchclient = new SearchClient(serviceEndpoint, indexName, credential);     . . .  }Create an indexprivate static void CreateIndex(string indexName, SearchIndexClient adminClient){    FieldBuilder fieldBuilder = new FieldBuilder();    var searchFields = fieldBuilder.\r\nBuild(typeof(Hotel));    var definition = new SearchIndex(indexName, searchFields);    var suggester = new SearchSuggester(\u0022sg\u0022, new[] { \u0022HotelName\u0022, \u0022Category\u0022, \u0022Address/City\u0022, \u0022Address/StateProvince\u0022 });    definition.Suggesters.Add(suggester);    SemanticSettings semanticSettings = new SemanticSettings();    semanticSettings. Configurations.Add(new SemanticConfiguration        (            \u0022my-semantic-config\u0022,            new PrioritizedFields()            {                TitleField = new SemanticField { FieldName = \u0022HotelName\u0022 },                ContentFields = {                new SemanticField { FieldName = \u0022Description\u0022 },                new SemanticField { FieldName = \u0022Description_fr\u0022 }                },                KeywordFields = {                new SemanticField { FieldName = \u0022Tags\u0022 },                new SemanticField { FieldName = \u0022Category\u0022 }                }            })        );    definition.\n"
}