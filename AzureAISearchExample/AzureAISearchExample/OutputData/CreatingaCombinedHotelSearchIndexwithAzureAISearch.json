{
  "Id": "267",
  "Title": "\u0022Creating a Combined Hotel Search Index with Azure AI Search\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfNET SDKArticle\u202211/15/2023Azure AI Search can import, analyze, and index data from multiple data sources into asingle consolidated search index.This tutorial uses C# and the Azure.Search.Documents client library in the Azure SDK for.NET to index sample hotel data from an Azure Cosmos DB instance, and merge thatwith hotel room details drawn from Azure Blob Storage documents. The result will be acombined hotel search index containing hotel documents, with rooms as a complexdata types.In this tutorial, you\u0027ll perform the following tasks:If you don\u0027t have an Azure subscription, create a free account before you begin.This tutorial uses Azure.Search.\r\nDocuments to create and run multiple indexers. In thistutorial, you\u0027ll set up two Azure data sources so that you can configure an indexer thatpulls from both to populate a single search index. The two data sets must have a valuein common to support the merge. In this sample, that field is an ID.\r\nAs long as there\u0027s afield in common to support the mapping, an indexer can merge data from disparateresources: structured data from Azure SQL, unstructured data from Blob storage, or anycombination of supported data sources on Azure.A finished version of the code in this tutorial can be found in the following project:multiple-data-sources/v11 (GitHub)For an earlier version of the .\r\nNET SDK, see Microsoft.Azure.Search (version 10) codesample on GitHub.Upload sample data and create data sources\uFF02Identify the document key\uFF02Define and create the index\uFF02Index hotel data from Azure Cosmos DB\uFF02Merge hotel room data from blob storage\uFF02OverviewAzure Cosmos DBAzure StorageVisual StudioAzure AI Search (version 11. x) NuGet packageAzure AI SearchThis tutorial uses Azure AI Search for indexing and queries, Azure Cosmos DB for onedata set, and Azure Blob Storage for the second data set.If possible, create all services in the same region and resource group for proximity andmanageability. In practice, your services can be in any region.\n"
}