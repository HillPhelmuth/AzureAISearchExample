{
  "Id": "252",
  "Title": "\u0022Configuring and Running Azure SQL Indexer in C#\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfAzureSql,          configuration[\u0022AzureSQLConnectionString\u0022],          new SearchIndexerDataContainer(\u0022hotels\u0022)); indexerClient.CreateOrUpdateDataSourceConnection(dataSource); C#Indexer runs are usually scheduled, but during development you might want to run theindexer immediately using RunIndexerAsync.\r\nC#Console.WriteLine(\u0022Creating Azure SQL indexer...\u0022); var schedule = new IndexingSchedule(TimeSpan.FromDays(1)) {       StartTime = DateTimeOffset.Now }; var parameters = new IndexingParameters() {       BatchSize = 100,       MaxFailedItems = 0,       MaxFailedItemsPerBatch = 0 }; // Indexer declarations require a data source and search index.\r\n// Common optional properties include a schedule, parameters, and field mappings // The field mappings below are redundant due to how the Hotel class is defined, but  // we included them anyway to show the syntax  var indexer = new SearchIndexer(\u0022hotels-sql-idxr\u0022, dataSource.Name, searchIndex.\r\nName) {       Description = \u0022Data indexer\u0022,       Schedule = schedule,       Parameters = parameters,       FieldMappings =       {          new FieldMapping(\u0022_id\u0022) {TargetFieldName = \u0022HotelId\u0022},          new FieldMapping(\u0022Amenities\u0022) {TargetFieldName = \u0022Tags\u0022}       } }; await indexerClient.CreateOrUpdateIndexerAsync(indexer); Console.\r\nWriteLine(\u0022Running Azure SQL indexer...\u0022); try {       await indexerClient.RunIndexerAsync(indexer.Name); } catch (CloudException e) when (e.Response.StatusCode == (HttpStatusCode)429) {       Console.WriteLine(\u0022Failed to run indexer: {0}\u0022, e.Response.Content); } Press F5 to build and run the solution. The program executes in debug mode. A consolewindow reports the status of each operation.Your code runs locally in Visual Studio, connecting to your search service on Azure,which in turn connects to Azure SQL Database and retrieves the dataset. With this manyoperations, there are several potential points of failure. If you get an error, check thefollowing conditions first:Search service connection information that you provide is the full URL.\n"
}