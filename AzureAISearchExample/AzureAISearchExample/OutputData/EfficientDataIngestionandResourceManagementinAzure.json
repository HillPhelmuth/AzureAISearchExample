{
  "Id": "239",
  "Title": "\u0022Efficient Data Ingestion and Resource Management in Azure AI Search\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfIn the early experimental stages of development, the most practical approach for designiteration is to delete the objects from Azure AI Search and allow your code to rebuildthem. Resource names are unique. Deleting an object lets you recreate it using the samename.The sample code for this tutorial checks for existing indexes and deletes them so thatyou can rerun your code.You can also use the portal to delete indexes.When you\u0027re working in your own subscription, at the end of a project, it\u0027s a good ideato remove the resources that you no longer need. Resources left running can cost youmoney.\r\nYou can delete resources individually or delete the resource group to delete theentire set of resources.You can find and manage resources in the portal, using the All resources or Resourcegroups link in the left-navigation pane.Now that you\u0027re familiar with the concept of ingesting data efficiently, let\u0027s take a closerlook at Lucene query architecture and how full text search works in Azure AI Search.\r\nReset and rerunClean up resourcesNext stepsHow full text search works in Azure AI SearchTutorial: Index large data from ApacheSpark using SynapseML and CognitiveSearchArticle\u202207/18/2023In this Azure Cognitive Search tutorial, learn how to index and query large data loadedfrom a Spark cluster.\r\nYou\u0027ll set up a Jupyter Notebook that performs the followingactions:This tutorial takes a dependency on SynapseML, an open source library that supportsmassively parallel machine learning over big data. In SynapseML, search indexing andmachine learning are exposed through transformers that perform specialized tasks.Transformers tap into a wide range of AI capabilities. In this exercise, you\u0027ll use theAzureSearchWriter APIs for analysis and AI enrichment.Although Azure Cognitive Search has native AI enrichment, this tutorial shows you howto access AI capabilities outside of Cognitive Search. By using SynapseML instead ofindexers or skills, you\u0027re not subject to data limits or other constraints associated withthose objects.\nYou\u0027ll need the synapseml library and several Azure resources. If possible, use the samesubscription and region for your Azure resources and put everything into one resourcegroup for simple cleanup later. The following links are for portal installs. The sampledata is imported from a public site.\n"
}