{
  "Id": "212",
  "Title": "\u0022Efficient Search Interface with Real-time Suggestions and Results Display\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfpost( \u0027/api/search\u0027, body)      .then(response =\u003E {            console.log(JSON.stringify(response.data))            setResults(response.data.results);            setFacets(response.\r\ndata.facets);            setResultCount(response.data.count);            setIsLoading(false);        } )        .catch(error =\u003E {            console.\r\nlog(error);            setIsLoading(false);        });      }, [q, top, skip, filters, currentPage]);  // pushing the new search term to history when q is updated  // allows the back button to work as expected when coming back from the details page  useEffect(() =\u003E {    navigate(\u0027/search?q=\u0027 \u002B q);      setCurrentPage(1);    setFilters([]);    // eslint-disable-next-line react-hooks/exhaustive-deps  }, [q]);  let postSearchHandler = (searchTerm) =\u003E {    //console.\r\nlog(searchTerm);    setQ(searchTerm);  }  var body;  if (isLoading) {    body = (      \u003Cdiv className=\u0022col-md-9\u0022\u003E        \u003CCircularProgress /\u003E      \u003C/div\u003E);\r\n} else {    body = (      \u003Cdiv className=\u0022col-md-9\u0022\u003E        \u003CResults documents={results} top={top} skip={skip} count={resultCount}\u003E\u003C/Results\u003E        \u003CPager className=\u0022pager-style\u0022 currentPage={currentPage} resultCount={resultCount} resultsPerPage={resultsPerPage} setCurrentPage={setCurrentPage}\u003E\u003C/Pager\u003E      \u003C/div\u003E    )  } return (    \u003Cmain className=\u0022main main--search container-fluid\u0022\u003E            \u003Cdiv className=\u0022row\u0022\u003E        \u003Cdiv className=\u0022col-md-3\u0022\u003E          \u003Cdiv className=\u0022search-bar\u0022\u003E            \u003CSearchBar postSearchHandler={postSearchHandler} q={q}\u003E\u003C/SearchBar\u003E          \u003C/div\u003E          \u003CFacets facets={facets} filters={filters} setFilters={setFilters}\u003E\u003C/Facets\u003EThe Suggest API takes a search term while a user is typing and suggests search termssuch as book titles and authors across the documents in the search index,\n"
}