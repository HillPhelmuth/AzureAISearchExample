{
  "Id": "1738",
  "Title": "\u0022JSON Shaper Skill for Azure Cognitive Search Indexing\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfString\u0022, \u0022key\u0022:true, \u0022filterable\u0022:true  },    { \u0022name\u0022:\u0022analyzedText\u0022, \u0022type\u0022:\u0022Edm.ComplexType\u0022,       \u0022fields\u0022:[          {             \u0022name\u0022:\u0022text\u0022,             \u0022type\u0022:\u0022Edm.\r\nString\u0022,             \u0022facetable\u0022:false,             \u0022filterable\u0022:false,             \u0022searchable\u0022:true,             \u0022sortable\u0022:false  },          { An incoming JSON document providing usable input for this Shaper skill could be:JSONThe Shaper skill generates a new element called analyzedText with the combinedelements of text and sentiment. This output conforms to the index schema. It will beimported and indexed in an Azure Cognitive Search index.\r\nJSON            \u0022name\u0022:\u0022sentiment\u0022,             \u0022type\u0022:\u0022Edm.Double\u0022,             \u0022facetable\u0022:true,             \u0022filterable\u0022:true,             \u0022searchable\u0022:true,             \u0022sortable\u0022:true }       } Skill input{     \u0022values\u0022: [         {             \u0022recordId\u0022: \u00221\u0022,             \u0022data\u0022: {                 \u0022text\u0022: \u0022this movie is awesome\u0022,                 \u0022sentiment\u0022: 0.\r\n9             }         }     ] } Skill output{     \u0022values\u0022: [       {         \u0022recordId\u0022: \u00221\u0022,         \u0022data\u0022:            {             \u0022analyzedText\u0022:                {                 \u0022text\u0022: \u0022this movie is awesome\u0022 ,                 \u0022sentiment\u0022: 0. 9               }            }       } In another example, imagine that at different stages of pipeline processing, you haveextracted the title of a book, and chapter titles on different pages of the book. You couldnow create a single structure composed of these various inputs.The Shaper skill definition for this scenario might look like the following example:JSONIn this case, the Shaper flattens all chapter titles to create a single array.JSON    ] } Scenario 2: input consolidation{     \u0022@odata.type\u0022: \u0022#Microsoft.Skills.Util.\n"
}