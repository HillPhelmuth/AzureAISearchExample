{
  "Id": "1532",
  "Title": "\u0022Implementing Azure Cognitive Search with JavaScript: A Practical Guide\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfresults) {    // These results are the nearest neighbors to the query vector    console.log(result);  }}main();Querying with facetsconst { SearchClient, AzureKeyCredential } = require(\u0022@azure/search-documents\u0022);const client = new SearchClient(\u0022\u003Cendpoint\u003E\u0022, \u0022\u003CindexName\u003E\u0022, new AzureKeyCredential(\u0022\u003CapiKey\u003E\u0022));async function main() {  const searchResults = await client.\r\nsearch(\u0022WiFi\u0022, {    facets: [\u0022category,count:3,sort:count\u0022, \u0022rooms/baseRate,interval:100\u0022],  });  console.log(searchResults.facets);  // Output will look like:  // {  //   \u0027rooms/baseRate\u0027: [When retrieving results, a facets property will be available that will indicate the numberof results that fall into each facet bucket.\r\nThis can be used to drive refinement (e.g.issuing a follow-up search that filters on the Rating being greater than or equal to 3and less than 4.)Enabling logging may help uncover useful information about failures. In order to see alog of HTTP requests and responses, set the AZURE_LOG_LEVEL environment variable toinfo. Alternatively, logging can be enabled at runtime by calling setLogLevel in the@azure/logger:JavaScriptFor more detailed instructions on how to enable logs, you can look at the@azure/logger package docs.\r\nGo further with search-documents and our samplesWatch a demo or deep dive videoRead more about the Azure Cognitive Search service  //     { count: 16, value: 0 },  //     { count: 17, value: 100 },  //     { count: 17, value: 200 }  //   ],  //   category: [  //     { count: 5, value: \u0027Budget\u0027 },  //     { count: 5, value: \u0027Luxury\u0027 },  //     { count: 5, value: \u0027Resort and Spa\u0027 }  //   ]  // }}main();\n"
}