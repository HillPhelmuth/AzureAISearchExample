{
  "Id": "458",
  "Title": "\u0022Managing Storage and Vector Index Size in Azure AI Search\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfFor example, 1,000 documents withtwo 1,536-dimensional vector fields, consume 1000 docs x 2 fields x 1536 floats/doc x 4bytes/float = 12,288,000 bytes.Overhead from deleting or updating documents withinthe indexEstimating the total size for your data inmemoryTo obtain the vector index size, multiply this raw_size by the algorithm overhead anddeleted document ratio.\r\nIf your algorithm overhead for your chosen HNSW parametersis 10% and your deleted document ratio is 10%, then we get: 6.144 MB * (1 \u002B 0.10) *(1 \u002B 0.10) = 7.434 MB.Disk storage overhead of vector data is roughly three times the size of vector index size.The storage and vector index size quotas aren\u0027t separate quotas.\r\nVector indexescontribute to the storage quota for the search service as a whole. For example, if yourstorage quota is exhausted but there\u0027s remaining vector quota, you can\u0027t index anymore documents, regardless if they\u0027re vector documents, until you scale up in partitionsto increase storage quota or delete documents (either text or vector) to reduce storageusage.\r\nSimilarly, if vector quota is exhausted but there\u0027s remaining storage quota,further indexing attempts fail until vector quota is freed, either by deleting some vectordocuments or by scaling up in partitions.How vector fields affect disk storageStorage vs. vector index size quotasData import in Azure AI SearchArticle\u202211/15/2023In Azure AI Search, queries execute over user-owned content that\u0027s loaded into a searchindex. This article describes the two basic workflows for populating an index: push yourdata into the index programmatically, or pull in the data using a search indexer.With either approach, the objective is to load data from an external data source.Although you can create an empty index, it\u0027s not queryable until you add the content.\n"
}