{
  "Id": "989",
  "Title": "\u0022Optimizing Azure SQL Indexer Configuration for Improved Performance\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfSetting thisproperty to true results in the following behaviors:Uses the rowversion data type for the high water mark column in the indexer SQLquery. Using the correct data type improves indexer query performance.Subtracts one from the rowversion value before the indexer query runs. Views withone-to-many joins may have rows with duplicate rowversion values. Subtractingone ensures the indexer query doesn\u0027t miss these rows.\r\nTo enable this property, create or update the indexer with the following configuration:HTTPIf you encounter timeout errors, set the queryTimeout indexer configuration setting to avalue higher than the default 5-minute timeout. For example, to set the timeout to 10minutes, create or update the indexer with the following configuration:HTTPIf the source table doesn\u0027t have an index on the high water mark column, queriesused by the SQL indexer may time out.\r\nIn particular, the ORDER BY [High Water MarkColumn] clause requires an index to run efficiently when the table contains manyrows.convertHighWaterMarkToRowVersion    {      ... other indexer definition properties     \u0022parameters\u0022 : {            \u0022configuration\u0022 : { \u0022convertHighWaterMarkToRowVersion\u0022 : true } }    }queryTimeout    {      .\r\n.. other indexer definition properties     \u0022parameters\u0022 : {            \u0022configuration\u0022 : { \u0022queryTimeout\u0022 : \u002200:10:00\u0022 } }    }You can also disable the ORDER BY [High Water Mark Column] clause. However, this isn\u0027trecommended because if the indexer execution is interrupted by an error, the indexerhas to re-process all rows if it runs later, even if the indexer has already processedalmost all the rows at the time it was interrupted. To disable the ORDER BY clause, usethe disableOrderByHighWaterMarkColumn setting in the indexer definition:HTTPWhen rows are deleted from the source table, you probably want to delete those rowsfrom the search index as well.\nIf you use the SQL integrated change tracking policy, thisis taken care of for you. However, the high water mark change tracking policy doesn\u2019thelp you with deleted rows. What to do?If the rows are physically removed from the table, Azure AI Search has no way to inferthe presence of records that no longer exist.\n"
}