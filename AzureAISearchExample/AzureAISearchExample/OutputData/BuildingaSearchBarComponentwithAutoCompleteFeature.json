{
  "Id": "186",
  "Title": "\u0022Building a Search Bar Component with AutoComplete Feature\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfdiv\u0060  display: flex;  flex-flow: row wrap;  justify-content: space-evenly;  align-items: center;  gap: 1em;  margin-top: 1em;\u0060;const StyledAutoComplete = styled(Autocomplete)\u0060  width: 80%;\u0060;const StyledButton = styled(Button)\u0060  max-height: 40px;\u0060;export default function SearchBar({ navigateToSearchPage, defaultTerm = \u0022\u0022 }) {  const [q, setQ] = useState(defaultTerm);\r\nconst [suggestions, setSuggestions] = useState([]);  const top = 5;  const suggester = \u0022sg\u0022;  /* eslint-disable no-unused-vars */  const { data, isLoading, error } = useQuery({    queryKey: [\u0022suggest\u0022, q, top, suggester],    refetchOnMount: true,    enabled: q.\r\nlength \u003E 0,    queryFn: async () =\u003E {      if (q.length \u003E 0) {        return request(\u0022/api/suggest\u0022, \u0022POST\u0022, {          q,          top,          suggester,        }).then((response) =\u003E {          let i = 0;          const autoCompleteOptions = response.suggestions.map(            (suggestion) =\u003E ({ id: i\u002B\u002B, label: suggestion.\r\ntext })          );          setSuggestions(autoCompleteOptions);          return response;        });      }    },  });  const onFormSubmit = () =\u003E {    if (navigateToSearchPage) {      navigateToSearchPage(q);    }  };  function hasLabelValue (option){    return (      option !== undefined \u0026\u0026      option !== null \u0026\u0026      option. label !== undefined \u0026\u0026      option.label !== null    );  }  return (    \u003CStyledContainer onSubmit={onFormSubmit}\u003E      \u003CStyledAutoComplete        key=\u0022autocomplete\u0022        freeSolo // accepts both entered text or selected suggestion        autoSelect // text in box selected        autoFocus=\u0022autoFocus\u0022        filterOptions={(x) =\u003E x}        options={suggestions}        value={q}        noOptionsText=\u0022What are you looking for?\u0022        onChange={          (e, value, reason) =\u003E setQ(value?.\n"
}