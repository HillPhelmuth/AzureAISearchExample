{
  "Id": "995",
  "Title": "\u0022Configuring SQL Server for Encrypted Connections in Azure\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfThe FQDN is typically formatted as \u003Cyour-VM-name\u003E.\u003Cregion\u003E.cloudapp.azure.com2. Configure SQL Server to use the certificate using the Registry Editor (regedit).\uFF17 NoteAlways Encrypted columns are not currently supported by Azure AI Searchindexers.Enable encrypted connectionsAlthough SQL Server Configuration Manager is often used for this task, you can\u0027tuse it for this scenario.\r\nIt won\u0027t find the imported certificate because the FQDN ofthe VM on Azure doesn\u0027t match the FQDN as determined by the VM (it identifiesthe domain as either the local computer or the network domain to which it\u0027sjoined). When names don\u0027t match, use regedit to specify the certificate.a.\r\nIn regedit, browse to this registry key:HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Microsoft SQL Server\\[MSSQL13.MSSQLSERVER]\\MSSQLServer\\SuperSocketNetLib\\Certificate.The [MSSQL13.MSSQLSERVER] part varies based on version and instance name.b. Set the value of the Certificate key to the thumbprint (without spaces) of theTLS/SSL certificate you imported to the VM.\r\nThere are several ways to get the thumbprint, some better than others. If you copyit from the Certificates snap-in in MMC, you\u0027ll probably pick up an invisible leadingcharacter as described in this support article, which results in an error when youattempt a connection. Several workarounds exist for correcting this problem. Theeasiest is to backspace over and then retype the first character of the thumbprintto remove the leading character in the key value field in regedit. Alternatively, youcan use a different tool to copy the thumbprint.3. Grant permissions to the service account.Make sure the SQL Server service account is granted appropriate permission onthe private key of the TLS/SSL certificate.\n"
}