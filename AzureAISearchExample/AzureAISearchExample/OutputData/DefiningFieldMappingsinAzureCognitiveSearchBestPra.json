{
  "Id": "811",
  "Title": "\u0022Defining Field Mappings in Azure Cognitive Search: Best Practices\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfA fieldmapping consists of three parts.JSONPropertyDescriptionsourceFieldNameRequired. Represents a field in your data source.Define a field mapping\u0022fieldMappings\u0022: [   {     \u0022sourceFieldName\u0022: \u0022_city\u0022,     \u0022targetFieldName\u0022: \u0022city\u0022,     \u0022mappingFunction\u0022: null   } ], PropertyDescriptiontargetFieldNameOptional.\r\nRepresents a field in your search index. If omitted, the value of\u0022sourceFieldName\u0022 is assumed for the target. Target fields must be top-levelsimple fields or collections. It can\u0027t be a complex type or collection. If you\u0027rehandling a data type issue, a field\u0027s data type is specified in the indexdefinition.\r\nThe field mapping just needs to have the field\u0027s name.mappingFunctionOptional. Consists of predefined functions that transform data.Azure Cognitive Search uses case-insensitive comparison to resolve the field andfunction names in field mappings. This is convenient (you don\u0027t have to get all thecasing right), but it means that your data source or index can\u0027t have fields that differonly by case.\r\nYou can use the REST API or an Azure SDK to define field mappings.Use Create Indexer (REST) or Update Indexer (REST), any API version.This example handles a field name discrepancy.JSONThis example maps a single source field to multiple target fields (\u0022one-to-many\u0022mappings).\r\nYou can \u0022fork\u0022 a field, copying the same source field content to two\uFF17 NoteIf no field mappings are present, indexers assume data source fields should bemapped to index fields with the same name. Adding a field mapping overrides thedefault field mappings for the source and target field. Some indexers, such as theblob storage indexer, add default field mappings for the index key field. REST APIsPUT https://[service name].search.windows.net/indexers/myindexer?api-version=[api-version] Content-Type: application/json api-key: [admin key] {     \u0022dataSourceName\u0022 : \u0022mydatasource\u0022,     \u0022targetIndexName\u0022 : \u0022myindex\u0022,     \u0022fieldMappings\u0022 : [ { \u0022sourceFieldName\u0022 : \u0022_city\u0022, \u0022targetFieldName\u0022 : \u0022city\u0022 } ] } different index fields that will be analyzed or attributed differently in the index.\n"
}