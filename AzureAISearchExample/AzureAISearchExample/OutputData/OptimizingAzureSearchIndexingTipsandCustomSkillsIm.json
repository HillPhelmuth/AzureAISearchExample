{
  "Id": "1077",
  "Title": "\u0022Optimizing Azure Search: Indexing Tips and Custom Skills Implementation\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfAllindexers can use the same skillset and write into the same target search index, so yoursearch app doesn\u2019t need to be aware of this partitioning.Tip 7: Extend processing beyond maximum runtime (24-hour window)\uFF17 NoteIf an indexer is set to a certain schedule but repeatedly fails on the same documentover and over again each time it runs, the indexer will begin running on a lessfrequent interval (up to the maximum of at least once every 24 hours) until itsuccessfully makes progress again.\r\nIf you believe you have fixed whatever the issuethat was causing the indexer to be stuck at a certain point, you can perform an on-demand run of the indexer, and if that successfully makes progress, the indexer willreturn to its set schedule interval again.\r\nTip 8: Increase indexing throughputQuickstart: Create an AI enrichment pipeline in the portalTutorial: Learn AI enrichment REST APIsHow to configure blob indexersHow to define a skillsetHow to map enriched fields to an indexSee alsoAdd a custom skill to an Azure CognitiveSearch enrichment pipelineArticle\u202210/11/2023An AI enrichment pipeline can include both built-in skills and custom skills that youpersonally create and publish. Your custom code executes externally to the searchservice (for example, as an Azure function), but accepts inputs and sends outputs to theskillset just like any other skill. Custom skills might sound complex but can be simple and straightforward in terms ofimplementation. If you have existing packages that provide pattern matching orclassification models, the content you extract from blobs could be passed to thesemodels for processing. Since AI enrichment is Azure-based, your model should be onAzure also. Some common hosting methodologies include using Azure Functions orContainers.If you\u0027re building a custom skill, this article describes the interface you use to integratethe skill into the pipeline. The primary requirement is the ability to accept inputs andemit outputs in ways that are consumable within the skillset as a whole.\n"
}