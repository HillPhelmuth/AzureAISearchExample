{
  "Id": "647",
  "Title": "\u0022Getting Started with Azure SDK for .NET: A Practical Guide\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfIn order to use the SDK, you\u0027ll need thename of your service and one or more API keys. Create a service in the portal if youdon\u0027t have one.Download the Azure.Search.Documents package using Tools \u003E NuGet PackageManager \u003E Manage NuGet Packages for Solution in Visual Studio. Search for thepackage name Azure.Search.Documents.\r\nAzure SDK for .NET conforms to .NET Standard 2.0.This article \u0022teaches by example\u0022, relying on the DotNetHowTo code example onGitHub to illustrate fundamental concepts in Azure Cognitive Search - specifically, howto create, load, and query a search index.For the rest of this article, assume a new index named \u0022hotels\u0022, populated with a fewdocuments, with several queries that match on results.\r\nBelow is the main program, showing the overall flow:C#Upgrade to v11SDK requirementsExample application// This sample shows how to delete, create, upload documents and query an indexstatic void Main(string[] args){    IConfigurationBuilder builder = new ConfigurationBuilder().\r\nAddJsonFile(\u0022appsettings.json\u0022);    IConfigurationRoot configuration = builder.Build();Next is a partial screenshot of the output, assuming you run this application with a validservice name and API keys:The client library uses three client types for various operations: SearchIndexClient tocreate, update, or delete indexes, SearchClient to load or query an index, and    SearchIndexClient indexClient = CreateSearchIndexClient(configuration);    string indexName = configuration[\u0022SearchIndexName\u0022];    Console.WriteLine(\u0022{0}\u0022, \u0022Deleting index...\\n\u0022);    DeleteIndexIfExists(indexName, indexClient);    Console.WriteLine(\u0022{0}\u0022, \u0022Creating index. ..\\n\u0022);    CreateIndex(indexName, indexClient);    SearchClient searchClient = indexClient.GetSearchClient(indexName);    Console.WriteLine(\u0022{0}\u0022, \u0022Uploading documents...\\n\u0022);    UploadDocuments(searchClient);    SearchClient indexClientForQueries = CreateSearchClientForQueries(indexName, configuration);    Console.WriteLine(\u0022{0}\u0022, \u0022Run queries.\n"
}