{
  "Id": "97",
  "Title": "\u0022Advanced Search Techniques Using Azure REST API and OData\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfTo get the nextset of matching documents, append $top=100,\u0026$skip=50 to increase the result set to100 documents (default is 50, maximum is 1000), skipping the first 50 documents. Youcan check the document key (listingID) to identify a document.Recall that you need to provide search criteria, such as a query term or expression, toget ranked results.\r\nNotice that search scores decrease the deeper you reach into searchresults.HTTPResultsReturn next batch of resultssearch=seattle condo\u0026$select=listingId,beds,baths,description,street,city,price\u0026$count=true\u0026$top=100\u0026$skip=50Use the $filter parameter when you want to specify precise criteria rather than free textsearch. The field must be attributed as Filterable in the index.\r\nThis example searches forbedrooms greater than 3:HTTPResultsAdd $orderby to sort results by another field besides search score. The field must beattributed as Sortable in the index.\r\nAn example expression you can use to test this outis:HTTPResultsFilter expressions (greater than, less than, equalto)search=seattle condo\u0026$filter=beds gt 3\u0026$count=trueSorting resultssearch=seattle condo\u0026$select=listingId,beds,price\u0026$filter=beds gt 3\u0026$count=true\u0026$orderby=price ascBoth $filter and $orderby expressions are OData constructions. For more information,see Filter OData syntax.In this quickstart, you used Search explorer to query an index using the REST API. Results are returned as verbose JSON documents so that you can view documentconstruction and content, in entirety. The $select parameter in a query expressioncan limit which fields are returned.Search results are composed of all fields marked as Retrievable in the index. Toview field attributes in the portal, select realestate-us-sample in the Indexes list onthe search overview page, and then open the Fields tab.\n"
}