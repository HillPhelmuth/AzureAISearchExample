{
  "Id": "532",
  "Title": "\u0022Managing Index Projections and Document Synchronization in Azure Search\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfTo keep parent and child documents in separate indexes, you would just ensurethat the targetIndexName for your indexer definition is different from thetargetIndexName defined in your index projection selector.\r\nTo index parent and child documents into the same index, you need to make surethat the schema for the target index works with both your defined fieldMappingsand outputFieldMappings in your indexer definition and the mappings in your indexprojection selector. You would then just provide the same targetIndexName foryour indexer definition and your index projection selector.To ignore parent documents and only index child documents, you still need toprovide a targetIndexName in your indexer definition (you can just provide thesame one that you do for the index projection selector).\r\nThen define a separateparameters object next to your selectors definition with a projectionMode key setto skipIndexingParentDocuments, as shown here:JSONREST API version 2023-10-01-Preview can be used to create index projectionsthrough additions to a skillset.Create Skillset (api-version=2023-10-01-Preview)        }    ]}Handling parent documents\u0022indexProjections\u0022: {    \u0022selectors\u0022: [        .\r\n..    ],    \u0022parameters\u0022: {        \u0022projectionMode\u0022: \u0022skipIndexingParentDocuments\u0022    }}RESTCreate or Update Skillset (api-version=2023-10-01-Preview)If the indexer data source supports change tracking and deletion detection, the indexingprocess can synchronize the primary and secondary indexes to pick up those changes. Each time you run the indexer and skillset, the index projections are updated if theskillset or underlying source data has changed. Any changes picked up by the indexerare propagated through the enrichment process to the projections in the index,ensuring that your projected data is a current representation of content in theoriginating data source.Each index projection document contains a unique identifying key that the indexergenerates in order to ensure uniqueness and allow for change and deletion tracking towork correctly. This key contains the following segments:A random hash to guarantee uniqueness. This hash changes if the parentdocument is updated across indexer runs.\n"
}