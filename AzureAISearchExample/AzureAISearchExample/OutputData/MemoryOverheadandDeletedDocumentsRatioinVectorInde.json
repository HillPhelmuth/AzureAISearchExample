{
  "Id": "456",
  "Title": "\u0022Memory Overhead and Deleted Documents Ratio in Vector Indexing\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfThe storage size of one vector is determined by its dimensionality. Multiply the size ofone vector by the number of documents containing that vector field to obtain the rawsize:raw size = (number of documents) * (dimensions of vector field) * (size of datatype)For Edm.Single, the size of the data type is 4 bytes.\r\nEvery approximate nearest neighbor (ANN) algorithm generates extra data structures inmemory to enable efficient searching. These structures consume extra space withinmemory.For the HNSW algorithm, the memory overhead ranges between 1% and 20%.The memory overhead is lower for higher dimensions because the raw size of thevectors increases, while the extra data structures remain a fixed size since they storeinformation on the connectivity within the graph.\r\nConsequently, the contribution of theextra data structures constitutes a smaller portion of the overall size.The memory overhead is higher for larger values of the HNSW parameter m, whichdetermines the number of bi-directional links created for every new vector during indexconstruction.\r\nThis is because m contributes approximately 8 to 10 bytes per documentmultiplied by m.The following table summarizes the overhead percentages observed in internal tests:DimensionsHNSW Parameter (m)Overhead Percentage96420%20048%76842%153641%These results demonstrate the relationship between dimensions, HNSW parameter m,and memory overhead for the HNSW algorithm.Memory Overhead from the Selected AlgorithmWhen a document with a vector field is either deleted or updated (updates are internallyrepresented as a delete and insert operation), the underlying document is marked asdeleted and skipped during subsequent queries. As new documents are indexed and theinternal vector index grows, the system cleans up these deleted documents and reclaimsthe resources. This means you\u0027ll likely observe a lag between deleting documents andthe underlying resources being freed.We refer to this as the \u0022deleted documents ratio\u0022. Since the deleted documents ratiodepends on the indexing characteristics of your service, there\u0027s no universal heuristic toestimate this parameter, and there\u0027s no API or script that returns the ratio in effect foryour service. We observe that half of our customers have a deleted documents ratio lessthan 10%.\n"
}