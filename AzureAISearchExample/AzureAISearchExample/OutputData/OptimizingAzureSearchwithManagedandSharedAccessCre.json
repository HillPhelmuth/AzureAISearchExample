{
  "Id": "932",
  "Title": "\u0022Optimizing Azure Search with Managed and Shared Access Credentials\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfMake sure to select a full connection string and not just akey.Managed identity connection string{ \u0022connectionString\u0022 : \u0022ResourceId=/subscriptions/\u003Cyour subscriptionID\u003E/resourceGroups/\u003Cyour resource groupname\u003E/providers/Microsoft.\r\nStorage/storageAccounts/\u003Cyour storage account name\u003E/;\u0022 }     \u0022subtype\u0022: null,      \u0022credentials\u0022: {         \u0022connectionString\u0022: \u0022DefaultEndpointsProtocol=https;\r\nAccountName=\u003Caccount name\u003E\u0022      },      \u0022container\u0022: {         \u0022name\u0022: \u0022my-table-in-azure-storage\u0022,         \u0022query\u0022: \u0022\u0022      },      \u0022dataChangeDetectionPolicy\u0022: null,      \u0022dataDeletionDetectionPolicy\u0022: null,      \u0022encryptionKey\u0022: null,      \u0022identity\u0022: null  } Supported credentials and connection stringsManaged identity connection stringThis connection string doesn\u0027t require an account key, but you must have previously configured asearch service to connect using a managed identity.\r\nStorage account shared access signature** (SAS) connection string{ \u0022connectionString\u0022 : \u0022BlobEndpoint=https://\u003Cyouraccount\u003E.blob.core.windows.net/;SharedAccessSignature=?sv=2016-05-31\u0026sig=\u003Cthesignature\u003E\u0026spr=https\u0026se=\u003Cthe validity end time\u003E\u0026srt=co\u0026ss=b\u0026sp=rl;\u0022 }The SAS should have the list and read permissions on tables and entities.\r\nContainer shared access signature{ \u0022connectionString\u0022 : \u0022ContainerSharedAccessUri=https://\u003Cyour storageaccount\u003E.blob.core.windows.net/\u003Ccontainer name\u003E?sv=2016-05-31\u0026sr=c\u0026sig=\u003Cthe signature\u003E\u0026se=\u003Cthe validity end time\u003E\u0026sp=rl;\u0022 }The SAS should have the list and read permissions on the container. For more information, seeUsing Shared Access Signatures.By default, Azure Cognitive Search uses the following internal query filter to keep trackof which source entities have been updated since the last run: Timestamp \u003E=HighWaterMarkValue. Because Azure tables don\u2019t have a secondary index on theTimestamp field, this type of query requires a full table scan and is therefore slow forlarge tables.To avoid a full scan, you can use table partitions to narrow the scope of each indexerjob.If your data can naturally be partitioned into several partition ranges, create a datasource and a corresponding indexer for each partition range.\n"
}