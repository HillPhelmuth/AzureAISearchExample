{
  "Id": "336",
  "Title": "\u0022Managing Azure Search: Indexes, Skillsets, and Data Sources\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfYou can use the portal to delete indexes, indexers, data sources, and skillsets. When youdelete the indexer, you can optionally, selectively delete the index, skillset, and datasource at the same time.# Query the service for the index definitionr = requests.get(endpoint \u002B \u0022/indexes/\u0022 \u002B index_name,                 headers=headers, params=params)pprint(json.\r\ndumps(r.json(), indent=1))# Query the index to return the contents of organizationsr = requests.get(endpoint \u002B \u0022/indexes/\u0022 \u002B index_name \u002B                 \u0022/docs?\u0026search=*\u0026$select=organizations\u0022, headers=headers, params=params)pprint(json.dumps(r.json(), indent=1))\uEA80 TipA better search experience might be switching to Search Explorer in the Azureportal or creating a demo search app from the index you just created.\r\nReset and rerunYou can also delete them using a script. The following script deletes a skillset.PythonStatus code 204 is returned on successful deletion.This tutorial demonstrates the basic steps for building an enriched indexing pipelinethrough the creation of component parts: a data source, skillset, index, and indexer.\r\nBuilt-in skills were introduced, along with skillset definitions and a way to chain skillstogether through inputs and outputs. You also learned that outputFieldMappings in theindexer definition is required for routing enriched values from the pipeline into asearchable index on an Azure AI Search service.Finally, you learned how to test the results and reset the system for further iterations.You learned that issuing queries against the index returns the output created by theenriched indexing pipeline. In this release, there\u0027s a mechanism for viewing internalconstructs (enriched documents created by the system). You also learned how to checkthe indexer status and what objects must be deleted before rerunning a pipeline.# delete the skillsetr = requests.delete(endpoint \u002B \u0022/skillsets/\u0022 \u002B skillset_name,                    headers=headers, params=params)pprint(json.dumps(r.json(), indent=1))TakeawaysWhen you\u0027re working in your own subscription, at the end of a project, it\u0027s a good ideato remove the resources that you no longer need.\n"
}