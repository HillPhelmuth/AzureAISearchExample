{
  "Id": "1531",
  "Title": "\u0022Advanced Search Techniques Using Azure and JavaScript\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfconsole.log(result.document.hotelName);  }}main();Querying with OData filtersconst { SearchClient, AzureKeyCredential, odata } = require(\u0022@azure/search-documents\u0022);const client = new SearchClient(\u0022\u003Cendpoint\u003E\u0022, \u0022\u003CindexName\u003E\u0022, new AzureKeyCredential(\u0022\u003CapiKey\u003E\u0022));async function main() {  const baseRateMax = 200;  const ratingMin = 4;  const searchResults = await client.\r\nsearch(\u0022WiFi\u0022, {    filter: odata\u0060Rooms/any(room: room/BaseRate lt ${baseRateMax}) and Rating ge ${ratingMin}\u0060,    orderBy: [\u0022Rating desc\u0022],    select: [\u0022hotelId\u0022, \u0022hotelName\u0022, \u0022rating\u0022],  });  for await (const result of searchResults.\r\nresults) {    // Each result will have \u0022HotelId\u0022, \u0022HotelName\u0022, and \u0022Rating\u0022    // in addition to the standard search result property \u0022score\u0022    console.log(result);  }}main();Text embeddings can be queried using the vector search parameter.JavaScriptFacets are used to help a user of your application refine a search along pre-configureddimensions.\r\nFacet syntax provides the options to sort and bucket facet values.JavaScriptQuerying with vectorsconst { SearchClient, AzureKeyCredential, odata } = require(\u0022@azure/search-documents\u0022);const searchClient = new SearchClient(\u0022\u003Cendpoint\u003E\u0022, \u0022\u003CindexName\u003E\u0022, new AzureKeyCredential(\u0022\u003CapiKey\u003E\u0022));async function main() {  const queryVector = [...]  const searchResults = await searchClient.search(\u0022*\u0022, {    vector: {      fields: [\u0022descriptionVector\u0022],      kNearestNeighborsCount: 3,      value: queryVector,    },  });  for await (const result of searchResults. results) {    // These results are the nearest neighbors to the query vector    console.log(result);  }}main();Querying with facetsconst { SearchClient, AzureKeyCredential } = require(\u0022@azure/search-documents\u0022);const client = new SearchClient(\u0022\u003Cendpoint\u003E\u0022, \u0022\u003CindexName\u003E\u0022, new AzureKeyCredential(\u0022\u003CapiKey\u003E\u0022));async function main() {  const searchResults = await client.\n"
}