{
  "Id": "1612",
  "Title": "\u0022Sorting and Normalizing in Azure AI Search Syntax\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfIfthere are null values in the field, null values appear first if the sort is asc and last if thesort is desc.The sort criteria can either be the path of a sortable field or a call to either thegeo.distance or the search.score functions.Syntaxorder_by_clause ::= (field_path | sortable_function) (\u0027asc\u0027 | \u0027desc\u0027)?sortable_function ::= geo_distance_call | \u0027search.\r\nscore()\u0027OData syntax diagram for Azure AI Search\uFF17 NoteSee OData expression syntax reference for Azure AI Search for the completeEBNF.For string fields, the default ASCII sort order and default Unicode sort order will beused. By default, sorting is case sensitive but you can use a normalizer to preprocess thetext before sorting to change this behavior.\r\nYou can also use an asciifoldingnormalizer to convert non-ASCII characters to their ASCII equivalent, if one exists.If multiple documents have the same sort criteria and the search.score function isn\u0027tused (for example, if you sort by a numeric Rating field and three documents all have arating of 4), ties will be broken by document score in descending order.\r\nWhendocument scores are the same (for example, when there\u0027s no full-text search queryspecified in the request), then the relative ordering of the tied documents isindeterminate.You can specify multiple sort criteria. The order of expressions determines the final sortorder. For example, to sort descending by score, followed by Rating, the syntax wouldbe $orderby=search.score() desc,Rating desc.The syntax for geo.distance in $orderby is the same as it is in $filter. When usinggeo.distance in $orderby, the field to which it applies must be of typeEdm.GeographyPoint and it must also be sortable. The syntax for search.score in $orderby is search.score(). The function search.scoredoesn\u0027t take any parameters.Sort hotels ascending by base rate:odata-filter-exprSort hotels descending by rating, then ascending by base rate (remember thatascending is the default):odata-filter-exprSort hotels descending by rating, then ascending by distance from the givencoordinates:odata-filter-exprExamples    $orderby=BaseRate asc    $orderby=Rating desc,BaseRateSort hotels in descending order by search.score and rating, and then in ascending orderby distance from the given coordinates.\n"
}