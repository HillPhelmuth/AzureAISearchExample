{
  "Id": "733",
  "Title": "\u0022Implementing Multilingual Search with Azure AI Search: Best Practices\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfPOST /indexes/myxboxgames/docs/autocomplete?search\u0026api-version=2020-06-30 {   \u0022search\u0022: \u0022minecraf\u0022,   \u0022suggesterName\u0022: \u0022sg\u0022} Sample codeNext stepsAdd autocomplete and suggestions to client codeCreate an index for multiple languagesin Azure AI SearchArticle\u202211/15/2023A multilingual search application is one that provides a search experience in the user\u0027sown language.\r\nLanguage support is enabled through a language analyzer assigned tostring field. Azure AI Search supports Microsoft and Lucene analyzers. The languageanalyzer determines the linguistic rules by which content is tokenized. By default, thesearch engine uses Standard Lucene, which is language agnostic. If testing shows thatthe default analyzer is insufficient, replace it with a language analyzer.In Azure AI Search, the two patterns for supporting a multi-lingual audience include:Create language-specific indexes where all of the alphanumeric content is in thesame language, and all searchable string fields are attributed to use the samelanguage analyzer.\r\nCreate a blended index with language-specific versions of each field (for example,description_en, description_fr, description_ko), and then constrain full text searchto just those fields at query time. This approach is useful for scenarios wherelanguage variants are only needed on a few fields, like a description.This article focuses on best practices for defining and querying language specific fieldsin a blended index. The steps you\u0027ll implement include:Language analysis applies to fields of type Edm.String that are searchable, and thatcontain localized text. If you also need text translation, review the next section to see ifAI enrichment fits your scenario. Non-string fields and non-searchable string fields don\u0027t undergo lexical analysis andaren\u0027t tokenized. Instead, they are stored and returned verbatim.Define a string field for each language variant.\uFF02Set a language analyzer on each field.\uFF02On the query request, set the searchFields parameter to specific fields, and thenuse select to return just those fields that have compatible content.\uFF02PrerequisitesAdd text translationThis article assumes you have translated strings in place. If that\u0027s not the case, you canattach Azure AI services to an enrichment pipeline, invoking text translation during dataingestion.\n"
}