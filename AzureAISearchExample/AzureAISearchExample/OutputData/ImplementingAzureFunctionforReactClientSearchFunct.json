{
  "Id": "211",
  "Title": "\u0022Implementing Azure Function for React Client Search Functionality\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdf\u0022, status_code=200)Call the Azure Function in the React client with the following code.JavaScriptClient: Search from the catalogimport React, { useEffect, useState } from \u0027react\u0027;import axios from \u0027axios\u0027;import CircularProgress  from \u0027@mui/material/CircularProgress\u0027;import { useLocation, useNavigate } from \u0022react-router-dom\u0022;import Results from \u0027.\r\n./../components/Results/Results\u0027;import Pager from \u0027../../components/Pager/Pager\u0027;import Facets from \u0027../../components/Facets/Facets\u0027;import SearchBar from \u0027../../components/SearchBar/SearchBar\u0027;import \u0022./Search.\r\ncss\u0022;export default function Search() {    let location = useLocation();  const navigate = useNavigate();    const [ results, setResults ] = useState([]);  const [ resultCount, setResultCount ] = useState(0);  const [ currentPage, setCurrentPage ] = useState(1);  const [ q, setQ ] = useState(new URLSearchParams(location.search).get(\u0027q\u0027) ?? \u0022*\u0022);  const [ top ] = useState(new URLSearchParams(location.\r\nsearch).get(\u0027top\u0027) ?? 8);  const [ skip, setSkip ] = useState(new URLSearchParams(location.search).get(\u0027skip\u0027) ?? 0);  const [ filters, setFilters ] = useState([]);  const [ facets, setFacets ] = useState({});  const [ isLoading, setIsLoading ] = useState(true);  let resultsPerPage = top;    useEffect(() =\u003E {    setIsLoading(true);    setSkip((currentPage-1) * top);    const body = {      q: q,      top: top,      skip: skip,      filters: filters    };    axios. post( \u0027/api/search\u0027, body)      .then(response =\u003E {            console.log(JSON.stringify(response.data))            setResults(response.data.results);            setFacets(response.\ndata.facets);            setResultCount(response.data.count);            setIsLoading(false);        } )        .catch(error =\u003E {            console.\n"
}