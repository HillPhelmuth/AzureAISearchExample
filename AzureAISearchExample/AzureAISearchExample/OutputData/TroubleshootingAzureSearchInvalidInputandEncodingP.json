{
  "Id": "888",
  "Title": "\u0022Troubleshooting Azure Search: Invalid Input and Encoding Policies\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfFindsimilardetails inSkill Inputwas Invalidsection.Unabletoselect0 innon-array\u0022Unable to select 0 in non-array /document/pages.\u0022This couldhappen ifthe skillsoutputdoesn\u0027tproduce anarray andthe outputsource fieldname hasarray indexor * in itspath.Doublecheck thepathsprovided inthe outputsource fieldnames andthe fieldvalue fortheindicatedfield name.Find similardetails inSkill Inputwas Invalidsection.Data change detection policies have specific requirements for the columns they use todetect change. One of these requirements is that this column is updated every time thesource item is changed.\r\nAnother requirement is that the new value for this column isgreater than the previous value. Key columns don\u0027t fulfill this requirement because theydon\u0027t change on every update. To work around this issue, select a different column forthe change detection policy.The indexer parsing modes need to know how text is encoded before parsing it.\r\nThe twomost common ways of encoding text are UTF-16 and UTF-8. UTF-8 is a variable-lengthencoding where each character is between 1 byte and 4 bytes long. UTF-16 is a fixed-length encoding where each character is 2 bytes long. UTF-16 has two different variants,\u0022big endian\u0022 and \u0022little endian\u0022. Text encoding is determined by a \u0022byte order mark\u0022, aseries of bytes before the text. EncodingByte Order MarkUTF-16 Big Endian0xFE 0xFFUTF-16 Little Endian0xFF 0xFEUTF-80xEF 0xBB 0xBFIf no byte order mark is present, the text is assumed to be encoded as UTF-8.To work around this warning, determine what the text encoding for this blob is and addthe appropriate byte order mark.Collections with Lazy indexing policies can\u0027t be queried consistently, resulting in yourindexer missing data.\n"
}