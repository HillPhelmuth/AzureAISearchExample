{
  "Id": "1530",
  "Title": "\u0022Using Azure Search to Query and Filter Hotel Data\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdf: boolean | null;  lastRenovationDate?: Date | null;  rating?: number | null;  rooms?: Array\u003C{    beds?: number | null;    description?: string | null;  } | null\u003E;}const client = new SearchClient\u003CHotel\u003E(  \u0022\u003Cendpoint\u003E\u0022,  \u0022\u003CindexName\u003E\u0022,  new AzureKeyCredential(\u0022\u003CapiKey\u003E\u0022));async function main() {  const searchResults = await client.\r\nsearch(\u0022wifi -luxury\u0022, {    // Only fields in Hotel can be added to this array.    // TS will complain if one is misspelled.    select: [\u0022hotelId\u0022, \u0022hotelName\u0022, \u0022rooms/beds\u0022],  });  // These are other ways to declare the correct type for \u0060select\u0060.Using the filter query parameter allows you to query an index using the syntax of anOData $filter expression.\r\nJavaScript  const select = [\u0022hotelId\u0022, \u0022hotelName\u0022, \u0022rooms/beds\u0022] as const;  // This declaration lets you opt out of narrowing the TypeScript type of your documents,  // though the Cognitive Search service will still only return these fields.  const selectWide: SelectFields\u003CHotel\u003E[] = [\u0022hotelId\u0022, \u0022hotelName\u0022, \u0022rooms/beds\u0022];  // This is an invalid declaration.\r\nPassing this to \u0060select\u0060 will result in a compiler error  // unless you opt out of including the model in the client constructor.  const selectInvalid = [\u0022hotelId\u0022, \u0022hotelName\u0022, \u0022rooms/beds\u0022];  for await (const result of searchResults.results) {    // result.document has hotelId, hotelName, and rating.    // Trying to access result.document.description would emit a TS error. console.log(result.document.hotelName);  }}main();Querying with OData filtersconst { SearchClient, AzureKeyCredential, odata } = require(\u0022@azure/search-documents\u0022);const client = new SearchClient(\u0022\u003Cendpoint\u003E\u0022, \u0022\u003CindexName\u003E\u0022, new AzureKeyCredential(\u0022\u003CapiKey\u003E\u0022));async function main() {  const baseRateMax = 200;  const ratingMin = 4;  const searchResults = await client.\n"
}