{
  "Id": "229",
  "Title": "\u0022Optimizing Data Indexing with Azure AI Search: A Tutorial\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfYou can download and run thesample application. This article explains the key aspects of the application and factorsto consider when indexing data.This tutorial uses C# and the .NET SDK to perform the following tasks:If you don\u0027t have an Azure subscription, create a free account before you begin.The following services and tools are required for this tutorial.\r\nVisual Studio, any edition. Sample code and instructions were tested on the freeCommunity edition.Create an Azure AI Search service or find an existing service under your currentsubscription.Source code for this tutorial is in the optimize-data-indexing/v11 folder in the Azure-Samples/azure-search-dotnet-samples GitHub repository.\r\nCreate an index\uFF02Test various batch sizes to determine the most efficient size\uFF02Index batches asynchronously\uFF02Use multiple threads to increase indexing speeds\uFF02Use an exponential backoff retry strategy to retry failed documents\uFF02PrerequisitesDownload filesKey considerationsWhen pushing data into an index, there\u0027s several key considerations that impactindexing speeds. You can learn more about these factors in the index large data setsarticle.Six key factors to consider are:Service tier and number of partitions/replicas - Adding partitions and increasingyour tier will both increase indexing speeds.\r\nIndex Schema - Adding fields and adding additional properties to fields (such assearchable, facetable, or filterable) both reduce indexing speeds.Batch size - The optimal batch size varies based on your index schema anddataset.Number of threads/workers - a single thread won\u0027t take full advantage ofindexing speedsRetry strategy - An exponential backoff retry strategy should be used to optimizeindexing.Network data transfer speeds - Data transfer speeds can be a limiting factor.Index data from within your Azure environment to increase data transfer speeds.To complete this tutorial, you\u0027ll need an Azure AI Search service, which you can create inthe portal. We recommend using the same tier you plan to use in production so thatyou can accurately test and optimize indexing speeds.API calls require the service URL and an access key. A search service is created with both,so if you added Azure AI Search to your subscription, follow these steps to get thenecessary information:1.\n"
}