{
  "Id": "1076",
  "Title": "\u0022Optimizing Azure Search Indexing: Best Practices and Troubleshooting Tips\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfFor example, an output target name is \u0022People\u0022 but the index field name is lower-case \u0022people\u0022. The system could return 201 success messages for the entire pipeline soyou think indexing succeeded, when in fact a field is empty.Image analysis is computationally intensive for even simple cases, so when images areespecially large or complex, processing times can exceed the maximum time allowed.\r\nMaximum run time varies by tier: several minutes on the Free tier, 24-hour indexing onbillable tiers. If processing fails to complete within a 24-hour period for on-demandprocessing, switch to a schedule to have the indexer pick up processing where it left off.\r\nFor scheduled indexers, indexing resumes on schedule at the last known gooddocument. By using a recurring schedule, the indexer can work its way through theimage backlog over a series of hours or days, until all unprocessed images areprocessed. For more information on schedule syntax, see Schedule an indexer.\r\nFor portal-based indexing (as described in the quickstart), choosing the \u0022run once\u0022indexer option limits processing to 1 hour (\u0022maxRunTime\u0022: \u0022PT1H\u0022). You might want toextend the processing window to something longer.For parallel indexing, place your data into multiple containers or multiple virtual foldersinside the same container. Then create multiple data source and indexer pairs. Allindexers can use the same skillset and write into the same target search index, so yoursearch app doesn\u2019t need to be aware of this partitioning.Tip 7: Extend processing beyond maximum runtime (24-hour window)\uFF17 NoteIf an indexer is set to a certain schedule but repeatedly fails on the same documentover and over again each time it runs, the indexer will begin running on a lessfrequent interval (up to the maximum of at least once every 24 hours) until itsuccessfully makes progress again.\n"
}