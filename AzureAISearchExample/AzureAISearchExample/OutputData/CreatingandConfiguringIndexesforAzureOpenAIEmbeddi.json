{
  "Id": "693",
  "Title": "\u0022Creating and Configuring Indexes for Azure OpenAI Embeddings\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfFor more information, see Generate embeddings.You should know the dimensions limit of the model used to create theembeddings and how similarity is computed. In Azure OpenAI, for text-embedding-ada-002, the length of the numerical vector is 1536. Similarity iscomputed using cosine.You should be familiar with creating an index.\r\nThe schema must include a field forthe document key, other fields you want to search or filter, and otherconfigurations for behaviors needed during indexing and queries.Add one or more vector configurations to an index schema.\uFF02Add one or more vector fields.\uFF02Load the index with vector data as a separate step, or use integrated vectorization(preview) for data chunking and encoding during indexing.\r\n\uFF02\uFF17 NoteLooking for migration guidance from 2023-07-01-preview? See Upgrade RESTAPIs.PrerequisitesPrior to indexing, assemble a document payload that includes fields of vector and non-vector data. The document structure must conform to the index schema.Make sure your documents:1. Provide a field or a metadata property that uniquely identifies each document. Allsearch indexes require a document key. To satisfy document key requirements, asource document must have one field or property that can uniquely identify it inthe index. This source field must be mapped to an index field of type Edm.\r\nStringand key=true in the search index.2. Provide vector data (an array of single-precision floating point numbers) in sourcefields.Vector fields contain numeric data generated by embedding models, oneembedding per field. We recommend the embedding models in Azure OpenAI,such as text-embedding-ada-002 for text documents or the Image Retrieval RESTAPI for images.3. Provide other fields with human-readable alphanumeric content for the queryresponse, and for hybrid query scenarios that include full text search or semanticranking in the same request.Your search index should include fields and content for all of the query scenarios youwant to support. Suppose you want to search or filter over product names, versions,metadata, or addresses.\n"
}