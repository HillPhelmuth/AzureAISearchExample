{
  "Id": "661",
  "Title": "\u0022Using Azure Search to Query Hotel Data in C#\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfSearch\u003CHotel\u003E(\u0022hotel\u0022, options);    WriteDocuments(results);}private static void WriteDocuments(SearchResults\u003CHotel\u003E searchResults){    foreach (SearchResult\u003CHotel\u003E result in searchResults.GetResults())    {        Console.WriteLine(result.Document);    }    Console.WriteLine();}Call RunQueries in Main()SearchClient indexClientForQueries = CreateSearchClientForQueries(indexName, configuration);Console.\r\nWriteLine(\u0022{0}\u0022, \u0022Running queries...\\n\u0022);RunQueries(indexClientForQueries);Explore query constructsoptions = new SearchOptions();options.Select.Add(\u0022HotelName\u0022);results = searchClient.Search\u003CHotel\u003E(\u0022motel\u0022, options);In this case, we\u0027re searching the entire index for the word \u0022motel\u0022 in any searchable fieldand we only want to retrieve the hotel names, as specified by the Select option.\r\nHereare the results:OutputIn the second query, use a filter to select room with a nightly rate of less than $100.Return only the hotel ID and description in the results:C#The above query uses an OData $filter expression, Rooms/any(r: r/BaseRate lt 100),to filter the documents in the index.\r\nThis uses the any operator to apply the \u0027BaseRate lt100\u0027 to every item in the Rooms collection. For more information, see OData filtersyntax.In the third query, find the top two hotels that have been most recently renovated, andshow the hotel name and last renovation date. Here\u0027s the code:C#WriteDocuments(results);Name: Secret Point MotelName: Twin Dome Moteloptions = new SearchOptions(){    Filter = \u0022Rooms/any(r: r/BaseRate lt 100)\u0022};options.Select.Add(\u0022HotelId\u0022);options.Select.Add(\u0022Description\u0022);results = searchClient.Search\u003CHotel\u003E(\u0022*\u0022, options);options =    new SearchOptions()    {        Size = 2    };options.\n"
}