{
  "Id": "1157",
  "Title": "\u0022Multi-Modal Vector Search: Leveraging Multiple Vector Fields for Enhanced Results\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdf009154141,                0.018708462,                . . .                 -0.02178128,                -0.00086512347            ],            \u0022exhaustive\u0022: true,            \u0022fields\u0022: \u0022contentVector\u0022,            \u0022k\u0022: 5        }    ]}Multiple vector fieldsPOST https://{{search-service-name}}.search.windows.\r\nnet/indexes/{{index-name}}/docs/search?api-version=2023-11-01Content-Type: application/jsonapi-key: {{admin-api-key}}{    \u0022count\u0022: true,    \u0022select\u0022: \u0022title, content, category\u0022,    \u0022vectorQueries\u0022: [        {            \u0022kind\u0022: \u0022vector\u0022            \u0022vector\u0022: [                -0.009154141,                0.018708462,                . . .                 -0.02178128,                -0.\r\n00086512347            ],Multi-query vector search sends multiple queries across multiple vector fields in yoursearch index. A common example of this query request is when using models such asCLIP for a multi-modal vector search where the same model can vectorize image andnon-image content.The following query example looks for similarity in both myImageVector andmyTextVector, but sends in two different query embeddings respectively.\r\nThis scenario isideal for multi-modal use cases where you want to search over different embeddingspaces. This query produces a result that\u0027s scored using Reciprocal Rank Fusion (RRF).vectorQueries provides an array of vector queries.vector contains the image vectors and text vectors in the search index. Eachinstance is a separate query.fields specifies which vector field to target. k is the number of nearest neighbor matches to include in results.JSON            \u0022exhaustive\u0022: true,            \u0022fields\u0022: \u0022contentVector, titleVector\u0022,            \u0022k\u0022: 5        }    ]}Multiple vector queries{    \u0022count\u0022: true,    \u0022select\u0022: \u0022title, content, category\u0022,    \u0022vectorQueries\u0022: [        {            \u0022kind\u0022: \u0022vector\u0022            \u0022vector\u0022: [                -0.\n"
}