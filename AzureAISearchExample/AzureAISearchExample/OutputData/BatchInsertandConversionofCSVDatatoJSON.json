{
  "Id": "168",
  "Title": "\u0022Batch Insert and Conversion of CSV Data to JSON\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfratings_count ? 0 : parseInt(row.ratings_count),      work_ratings_count: !row.work_ratings_count        ? 0        : parseInt(row.work_ratings_count),      work_text_reviews_count: !row.work_text_reviews_count        ? 0        : parseInt(row.work_text_reviews_count),      ratings_1: !row.ratings_1 ? 0 : parseInt(row.ratings_1),      ratings_2: !row.\r\nratings_2 ? 0 : parseInt(row.ratings_2),      ratings_3: !row.ratings_3 ? 0 : parseInt(row.ratings_3),      ratings_4: !row.ratings_4 ? 0 : parseInt(row.ratings_4),      ratings_5: !row.ratings_5 ? 0 : parseInt(row.ratings_5),      image_url: row.image_url,      small_image_url: row.small_image_url    });    console.log(\u0060${i}\u0060);    // Insert batch into Index    if (batchArray.\r\nlength % BATCH_SIZE === 0) {      await client.uploadDocuments(batchArray);      console.log(\u0060BATCH SENT\u0060);      batchArray = [];    }2. Open an integrated terminal in Visual Studio for the project directory\u0027ssubdirectory, search-website-functions-v4/bulk-insert, and run the followingcommand to install the dependencies.\r\n}  // Insert any final batch into Index  if (batchArray.length \u003E 0) {    await client.uploadDocuments(batchArray);    console.log(\u0060FINAL BATCH SENT\u0060);    batchArray = [];  }};const bulkInsert = async () =\u003E {  // Download CSV Data file  const response = await fetch(BOOKS_URL, {    method: \u0027GET\u0027  });  if (response. ok) {    console.log(\u0060book list fetched\u0060);    const fileData = await response.text();    console.log(\u0060book list data received\u0060);    // convert CSV to JSON    const dataObj = Papa.parse(fileData, {      header: true,      encoding: \u0027utf8\u0027,      skipEmptyLines: true    });    console.\n"
}