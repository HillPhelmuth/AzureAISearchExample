{
  "Id": "1483",
  "Title": "\u0022Managing User and Group Associations in Microsoft Azure\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfFormat(\u0022user1@{0}\u0022, tenant),    PasswordProfile = new PasswordProfile() { Password = \u0022********\u0022 },    AccountEnabled = true};Step 3: Associate user and groupList\u003CUser\u003E users = new List\u003CUser\u003E() { user1, user2 };Dictionary\u003CGroup, List\u003CUser\u003E\u003E groups = new Dictionary\u003CGroup, List\u003CUser\u003E\u003E() { { group, users } };Optionally, to reduce network latency, you can cache the user-group associations sothat when a search request is issued, groups are returned from the cache, saving aroundtrip to Microsoft Entra ID.\r\nYou can use Microsoft Entra Batch API to send a singleHttp request with multiple users and build the cache.Microsoft Graph is designed to handle a high volume of requests.\r\nIf an overwhelmingnumber of requests occur, Microsoft Graph fails the request with HTTP status code 429.For more information, see Microsoft Graph throttling.Query operations in Azure AI Search are executed over an Azure AI Search index. In thisstep, an indexing operation imports searchable data into an index, including theidentifiers used as security filters.Azure AI Search doesn\u0027t authenticate user identities, or provide logic for establishingwhich content a user has permission to view. The use case for security trimmingassumes that you provide the association between a sensitive document and the groupidentifier having access to that document, imported intact into a search index. In the hypothetical example, the body of the PUT request on an Azure AI Search indexwould include an applicant\u0027s college essay or transcript along with the group identifierhaving permission to view that content.In the generic example used in the code sample for this walkthrough, the index actionmight look as follows:C#Step 4: Cache the groups identifiersIndex document with their permitted groupsprivate static void IndexDocuments(string indexName, List\u003Cstring\u003E groups){    IndexDocumentsBatch\u003CSecuredFiles\u003E batch = IndexDocumentsBatch.\n"
}