{
  "Id": "648",
  "Title": "\u0022Managing Azure Search Clients and Indexing Operations in C#\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdf..\\n\u0022);    CreateIndex(indexName, indexClient);    SearchClient searchClient = indexClient.GetSearchClient(indexName);    Console.WriteLine(\u0022{0}\u0022, \u0022Uploading documents...\\n\u0022);    UploadDocuments(searchClient);    SearchClient indexClientForQueries = CreateSearchClientForQueries(indexName, configuration);    Console.WriteLine(\u0022{0}\u0022, \u0022Run queries.\r\n..\\n\u0022);    RunQueries(indexClientForQueries);    Console.WriteLine(\u0022{0}\u0022, \u0022Complete.  Press any key to end application...\\n\u0022);    Console.ReadKey();}Client typesSearchIndexerClient to work with indexers and skillsets. This article focuses on the firsttwo.At a minimum, all of the clients require the service name or endpoint, and an API key.\r\nIt\u0027s common to provide this information in a configuration file, similar to what you findin the appsettings.json file of the DotNetHowTo sample application. To read fromthe configuration file, add using Microsoft.Extensions.Configuration; to your program.The following statement creates the index client used to create, update, or deleteindexes. It takes a service endpoint and admin API key.C#The next statement creates the search client used to load documents or run queries.SearchClient requires an index. You\u0027ll need an admin API key to load documents, butyou can use a query API key to run queries. C#private static SearchIndexClient CreateSearchIndexClient(IConfigurationRoot configuration){    string searchServiceEndPoint = configuration[\u0022SearchServiceEndPoint\u0022];    string adminApiKey = configuration[\u0022SearchServiceAdminApiKey\u0022];    SearchIndexClient indexClient = new SearchIndexClient(new Uri(searchServiceEndPoint), new AzureKeyCredential(adminApiKey));    return indexClient;}string indexName = configuration[\u0022SearchIndexName\u0022];private static SearchClient CreateSearchClientForQueries(string indexName, IConfigurationRoot configuration){    string searchServiceEndPoint = configuration[\u0022SearchServiceEndPoint\u0022];\n"
}