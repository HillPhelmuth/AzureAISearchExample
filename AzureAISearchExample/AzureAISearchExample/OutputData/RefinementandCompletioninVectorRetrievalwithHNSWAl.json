{
  "Id": "433",
  "Title": "\u0022Refinement and Completion in Vector Retrieval with HNSW Algorithm\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfRefinement: As the algorithm moves to lower, more granular levels, HNSWconsiders more neighbors near the query, which allows the candidate set ofvectors to be refined, improving accuracy.Retrieving vectors with the HNSW algorithm5. Completion: The search completes when the desired number of nearest neighborshave been identified, or when other stopping criteria are met. This desired numberof nearest neighbors is governed by the query-time parameter k.The algorithm finds candidate vectors to evaluate similarity. To perform this task, asimilarity metric calculation compares the candidate vector to the query vector andmeasures the similarity.\r\nThe algorithm keeps track of the ordered set of most similarvectors that its found, which forms the ranked result set when the algorithm has reachedcompletion.MetricDescriptioncosineThis metric measures the angle between two vectors, and isn\u0027t affected by differingvector lengths. Mathematically, it calculates the angle between two vectors.\r\nCosineis the similarity metric used by Azure OpenAI embedding models, so if you\u0027re usingAzure OpenAI, specify cosine in the vector configuration.dotProductThis metric measures both the length of each pair of two vectors, and the anglebetween them. Mathematically, it calculates the products of vectors\u0027 magnitudesand the angle between them.\r\nFor normalized vectors, this is identical to cosinesimilarity, but slightly more performant.euclidean(also known as l2 norm) This metric measures the length of the vector differencebetween two vectors. Mathematically, it calculates the Euclidean distance betweentwo vectors, which is the l2-norm of the difference of the two vectors. Whenever results are ranked, @search.score property contains the value used to orderthe results.Search methodParameterScoring metricRangevector search@search.scoreCosine0.333 - 1.00If you\u0027re using the cosine metric, it\u0027s important to note that the calculated@search.score isn\u0027t the cosine value between the query vector and the documentvectors.\n"
}