{
  "Id": "665",
  "Title": "\u0022Transitioning to Azure Search v11: Key Changes and Equivalents\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfSupport for thisAPI transitioned to generally available in v10, but was onlyavailable in the preview SDK)SearchResourceEncryptionKeyVersion 10Version 11 equivalentIndexSearchIndexFieldSearchFieldDataTypeSearchFieldDataTypeItemErrorSearchIndexerErrorAnalyzerLexicalAnalyzer (also, AnalyzerName to LexicalAnalyzerName)AnalyzeRequestAnalyzeTextOptionsStandardAnalyzerLuceneStandardAnalyzerStandardTokenizerLuceneStandardTokenizer (also, StandardTokenizerV2 toLuceneStandardTokenizerV2)TokenInfoAnalyzedTokenInfoTokenizerLexicalTokenizer (also, TokenizerName to LexicalTokenizerName)SynonymMap.\r\nFormatNone. Remove references to Format.Field definitions are streamlined: SearchableField, SimpleField, ComplexField are newAPIs for creating field definitions.\r\nAuthentication and encryptionIndexes, analyzers, synonym mapsIndexers, datasources, skillsetsVersion 10Version 11 equivalentIndexerSearchIndexerDataSourceSearchIndexerDataSourceConnectionSkillSearchIndexerSkillSkillsetSearchIndexerSkillsetDataSourceTypeSearchIndexerDataSourceTypeVersion 10Version 11 equivalentIndexActionIndexDocumentsActionIndexBatchIndexDocumentsBatchIndexBatchException.FindFailedActionsToRetry()SearchIndexingBufferedSenderVersion 10Version 11 equivalentDocumentsOperationsExtensions.SearchAsyncSearchClient.\r\nSearchAsyncDocumentSearchResultSearchResult or SearchResults, depending onwhether the result is a single document ormultiple.DocumentSuggestResultSuggestResultsSearchParametersSearchOptionsSuggestParametersSuggestOptionsSearchParameters.FilterSearchFilter (a new class for constructing ODatafilter expressions)By default, the Azure SDK uses System.Text. Json for JSON serialization, relying on thecapabilities of those APIs to handle text transformations previously implementedData importQuery requests and responsesJSON serializationthrough a native SerializePropertyNamesAsCamelCaseAttribute class, which has nocounterpart in the new library.To serialize property names into camelCase, you can use the JsonPropertyNameAttribute(similar to this example).\n"
}