{
  "Id": "195",
  "Title": "\u0022Creating and Configuring Azure Cognitive Search Service with Python\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfSearch/searchServices --output tableaz search service create --name my-cog-search-demo-svc --resource-group cognitive-search-demo-rg --sku free --partition-count 1 --replica-count 1az search query-key list --resource-group cognitive-search-demo-rg --service-name my-cog-search-demo-svcaz search admin-key show --resource-group cognitive-search-demo-rg --service-name my-cog-search-demo-svcPrepare the bulk import script for SearchThe script uses the Azure SDK for Cognitive Search:PYPI package azure-search-documentsReference Documentation1.\r\nIn Visual Studio Code, open the bulk_upload.py file in the subdirectory, search-website-functions-v4/bulk-upload, replace the following variables with your ownvalues to authenticate with the Azure Search SDK:YOUR-SEARCH-SERVICE-NAMEYOUR-SEARCH-SERVICE-ADMIN-API-KEYPythonimport sysimport jsonimport requestsimport pandas as pdfrom azure.core.credentials import AzureKeyCredentialfrom azure.search.documents import SearchClientfrom azure.search.documents.indexes import SearchIndexClientfrom azure.search.documents.indexes.models import SearchIndexfrom azure.search.documents.indexes.\r\nmodels import (    ComplexField,    CorsOptions,    SearchIndex,    ScoringProfile,    SearchFieldDataType,    SimpleField,    SearchableField,)# Get the service name (short name) and admin API key from the environmentservice_name = \u0022YOUR-SEARCH-SERVICE-NAME\u0022key = \u0022YOUR-SEARCH-SERVICE-ADMIN-API-KEY\u0022endpoint = \u0022https://{}.\r\nsearch.windows.net/\u0022.format(service_name)# Give your index a name# You can also supply this at runtime in __main__index_name = \u0022good-books\u0022# Search Index Schema definitionindex_schema = \u0022./good-books-index.json\u0022# Books catalogbooks_url = \u0022https://raw.githubusercontent. com/Azure-Samples/azure-search-sample-data/main/good-books/books.csv\u0022batch_size = 1000# Instantiate a clientclass CreateClient(object):    def __init__(self, endpoint, key, index_name):        self.endpoint = endpoint        self.index_name = index_name        self.key = key        self.credentials = AzureKeyCredential(key)    # Create a SearchClient    # Use this to upload docs to the Index    def create_search_client(self):        return SearchClient(            endpoint=self.endpoint,            index_name=self.index_name,            credential=self.\n"
}