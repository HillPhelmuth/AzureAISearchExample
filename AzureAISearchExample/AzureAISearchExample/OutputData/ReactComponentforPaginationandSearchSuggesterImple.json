{
  "Id": "183",
  "Title": "\u0022React Component for Pagination and Search Suggester Implementation\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdffield === key)}            /\u003E          );        })}      \u003C/StyledFacetList\u003E    \u003C/StyledFacetComponent\u003E  );}Client: Pagination from the catalogimport React from \u0022react\u0022;import TablePagination from \u0022@mui/material/TablePagination\u0022;import styled from \u0022@emotion/styled\u0022;const StyledTablePagination = styled(TablePagination)\u0060margin: auto;max-width: fit-content;border-bottom: 0;\u0060;export default function Pager(props) {  const pagesInResultSet = Math.\r\nround(props.resultCount / When the user changes the page, that value is sent to the parent Search.js page fromthe handleChangePage function. The function sends a new request to the search API forthe same query and the new page.\r\nThe API response updates the facets, results, andpager components.The Suggest API takes a search term while a user is typing and suggests search termssuch as book titles and authors across the documents in the search index, returning asmall list of matches.The search suggester, sg, is defined in the schema file used during bulk upload.JavaScriptprops.\r\nresultsPerPage);  const moreThanOnePage = pagesInResultSet \u003E 1;  if (!moreThanOnePage) return \u003C\u003E\u003C/\u003E;  const handleChangePage = (event, newPage) =\u003E {    props.setCurrentPage(newPage \u002B 1);  };  return (    \u003CStyledTablePagination      className=\u0022pager\u0022      align=\u0022center\u0022      component=\u0022div\u0022      count={props.resultCount}      page={props. currentPage - 1} // zero-based control from material ui      onPageChange={handleChangePage}      rowsPerPage={props.resultsPerPage}      rowsPerPageOptions={[props.resultsPerPage]} // don\u0027t display b/c there is a single value      showFirstButton={true}      showLastButton={true}      labelDisplayedRows={({ from, to, count }) =\u003E        \u0060${props.currentPage} of ${Math.round(          props.\n"
}