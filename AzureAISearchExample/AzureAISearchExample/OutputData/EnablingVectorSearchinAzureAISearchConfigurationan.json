{
  "Id": "24",
  "Title": "\u0022Enabling Vector Search in Azure AI Search: Configuration and Queries\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfDoes Azure AI Search support vector search?How does vector search work in Azure AISearch?Can Azure AI Search vectorize my content orqueries?Does my search service support vector search?Can I add vector search to an existing index?If your search service supports vector search, both existing and new indexes canaccommodate vector fields.We\u0027re rolling out improved vector index size limits worldwide for new search services,but we\u0027re still building out infrastructure capacity in certain regions.\r\nNew search servicescreated in supported regions will see increased vector index size limits. Unfortunately,we can\u0027t migrate existing services to the new limits.To enable vector search in an index, you should:Add one or more fields of type Collection(Edm.Single), with a \u0022dimensions\u0022property and an \u0022vectorSearchConfiguration\u0022 property.\r\nAdd a \u0022vectorSearch\u0022 section to the index schema specifying the configurationused by vector search fields, including the parameters of the Approximate NearestNeighbor algorithm used, like HNSW.Use the 2023-11-01 or an Azure SDK to create or update the index, loaddocuments, and issue queries.Queries execute over a single search index that\u0027s hosted on your search service.\r\nYoucan\u0027t join multiple indexes to search content in two or more indexes, but you can querysame-name indexes in multiple search services.Why do I see different vector index size limitsbetween my new search services and existingsearch services?How do I enable vector search on a searchindex?QueriesWhere does query execution occur?Why are there zero matches on terms I know tobe valid?The most common case isn\u0027t knowing that each query type supports different searchbehaviors and levels of linguistic analyses. Full text search, which is the predominantworkload, includes a language analysis phase that breaks down terms to root forms. Thisaspect of query parsing casts a broader net over possible matches, because thetokenized term matches a greater number of variants.Wildcard, fuzzy and regex queries, however, aren\u0027t analyzed like regular term or phrasequeries and can lead to poor recall if the query doesn\u0027t match the analyzed form of theword in the search index.\n"
}