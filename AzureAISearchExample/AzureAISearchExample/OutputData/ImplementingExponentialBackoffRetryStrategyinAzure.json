{
  "Id": "236",
  "Title": "\u0022Implementing Exponential Backoff Retry Strategy in Azure AI Search\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfAzure AI Search\u0027s .NET SDK automatically retries 503s and other failed requests butyou\u0027ll need to implement your own logic to retry 207s. Open-source tools such asPolly can also be used to implement a retry strategy.In this sample, we implement our own exponential backoff retry strategy. To implementthis strategy, we start by defining some variables including the maxRetryAttempts andthe initial delay for a failed request:C#The results of the indexing operation are stored in the variable IndexDocumentResultresult. This variable is important because it allows you to check if any documents in thebatch failed as shown below.\r\nIf there is a partial failure, a new batch is created based onthe failed documents\u0027 ID.RequestFailedException exceptions should also be caught as they indicate the requestfailed completely and should also be retried.C#Implement an exponential backoff retry strategy// Create batch of documents for indexingvar batch = IndexDocumentsBatch.\r\nUpload(hotels);// Create an object to hold the resultIndexDocumentsResult result = null;// Define parameters for exponential backoffint attempts = 0;TimeSpan delay = delay = TimeSpan.FromSeconds(2);int maxRetryAttempts = 5;// Implement exponential backoffdo{    try    {        attempts\u002B\u002B;        result = await searchClient.IndexDocumentsAsync(batch).\r\nConfigureAwait(false);        var failedDocuments = result.Results.Where(r =\u003E r.Succeeded != true).ToList();        // handle partial failure        if (failedDocuments.Count \u003E 0)        {            if (attempts == maxRetryAttempts)            {                Console.WriteLine(\u0022[MAX RETRIES HIT] - Giving up on the batch starting at {0}\u0022, id);                break;            }            else            {                Console. WriteLine(\u0022[Batch starting at doc {0} had partial failure]\u0022, id);                Console.WriteLine(\u0022[Retrying {0} failed documents] \\n\u0022, failedDocuments.Count);                // creating a batch of failed documents to retry                var failedDocumentKeys = failedDocuments.\n"
}