{
  "Id": "1546",
  "Title": "\u0022Mastering Vector Search and Indexing with Azure Cognitive Search\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfTo learn how to index vector fields and perform vector search, you can refer to thesample. This sample provides detailed guidance on indexing vector fields anddemonstrates how to perform vector search.Additionally, for more comprehensive information about Vector Search, including itsconcepts and usage, you can refer to the documentation. The documentation providesin-depth explanations and guidance on leveraging the power of Vector Search in AzureCognitive Search.The Azure.Search.Documents client library (v1) is a brand new offering for Pythondevelopers who want to use search technology in their applications. There is an older, fullyfeatured Microsoft.Azure.\r\nSearch client library (v10) with many similar looking APIs, soplease be careful to avoid confusion when exploring online resources.The following examples all use a simple Hotel data set that you can import into yourown index from the Azure portal. These are just a few of the basics - please check outour Samples for much more.\r\nExamplesQueryingCreating an indexAdding documents to your indexRetrieving a specific document from your indexAsync APIsLet\u0027s start by importing our namespaces.PythonWe\u0027ll then create a SearchClient to access our hotels search index.PythonLet\u0027s search for a \u0022luxury\u0022 hotel.PythonYou can use the SearchIndexClient to create a search index. Fields can be defined usingconvenient SimpleField, SearchableField, or ComplexField models. Indexes can alsoQueryingimport osfrom azure.core.credentials import AzureKeyCredentialfrom azure.search.documents import SearchClientindex_name = \u0022hotels\u0022# Get the service endpoint and API key from the environmentendpoint = os.environ[\u0022SEARCH_ENDPOINT\u0022]key = os.environ[\u0022SEARCH_API_KEY\u0022]# Create a clientcredential = AzureKeyCredential(key)client = SearchClient(endpoint=endpoint,                      index_name=index_name,                      credential=credential)results = client.search(search_text=\u0022luxury\u0022)for result in results:    print(\u0022{}: {})\u0022.\n"
}