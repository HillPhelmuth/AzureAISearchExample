{
  "Id": "1091",
  "Title": "\u0022Implementing Bing Entity Search API in C# with Azure\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfOutputRecordData();             using (var client = new HttpClient())             using (var request = new HttpRequestMessage {                 Method = HttpMethod.Get,                 RequestUri = new Uri(uri)             })             {                 request.Headers.\r\nAdd(\u0022Ocp-Apim-Subscription-Key\u0022, key);                 HttpResponseMessage response = await client.SendAsync(request);                 string responseBody = await response?.Content?.ReadAsStringAsync();                 BingResponse bingResult = JsonConvert.DeserializeObject\u003CBingResponse\u003E(responseBody);                 if (bingResult != null)                 {                     // In addition to the list of entities that could match the name, for simplicity let\u0027s return information                     // for the top match as additional metadata at the root object.                     return AddTopEntityMetadata(bingResult.Entities?.Value);                 }             }             return result;         }         private static OutputRecord.\r\nOutputRecordData AddTopEntityMetadata(BingEntity[] entities)         {             if (entities != null)             {                 foreach (BingEntity entity in entities.Where(                     entity =\u003E entity?.EntityPresentationInfo?.EntityTypeHints != null                         \u0026\u0026 (entity.EntityPresentationInfo.EntityTypeHints[0] == \u0022Person\u0022                             || entity.EntityPresentationInfo.EntityTypeHints[0] == \u0022Organization\u0022                             || entity.EntityPresentationInfo.EntityTypeHints[0] == \u0022Location\u0022)                         \u0026\u0026 !String.IsNullOrEmpty(entity.Description)))                 {                     var rootObject = new OutputRecord. OutputRecordData                     {                         Description = entity.Description,                         Name = entity.Name                     };                     if (entity.ContractualRules != null)                     {                         foreach (var rule in entity.ContractualRules)                         {                             switch (rule._type)                             { Make sure to enter your own key value in the key constant based on the key you gotwhen signing up for the Bing entity search API.This sample includes all necessary code in a single file for convenience. You can find aslightly more structured version of that same skill in the power skills repository.\n"
}