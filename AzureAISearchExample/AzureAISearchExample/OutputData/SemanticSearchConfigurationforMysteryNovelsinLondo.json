{
  "Id": "1160",
  "Title": "\u0022Semantic Search Configuration for Mystery Novels in London\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfapi-version=2023-10-01-previewContent-Type: application/jsonapi-key: {{admin-api-key}}{\u202F\u202F\u202F\u202F\u0022search\u0022:\u0022mystery novel set in London\u0022, \u202F\u202F\u202F\u202F\u0022searchFields\u0022:\u0022description, synopsis\u0022, \u202F\u202F\u202F\u202F\u0022semanticConfiguration\u0022:\u0022my-semantic-config\u0022, \u202F\u202F\u202F\u202F\u0022queryType\u0022:\u0022semantic\u0022,    \u0022select\u0022: \u0022title, author, synopsis\u0022,    \u0022filter\u0022: \u0022genre eq \u0027mystery\u0027\u0022,    \u0022vectorFilterMode\u0022: \u0022postFilter\u0022,    \u0022vectorQueries\u0022:\r\n[        {            \u0022kind\u0022: \u0022text\u0022            \u0022text\u0022: \u0022mystery novel set in London\u0022,            \u0022fields\u0022: \u0022descriptionVector, synopsisVector\u0022,            \u0022k\u0022: 5        },        {            \u0022kind\u0022: \u0022text\u0022            \u0022text\u0022: \u0022living english author\u0022,            \u0022fields\u0022: \u0022authorBioVector\u0022,            \u0022k\u0022: 5        }    ]}When you\u0027re setting up the vector query, think about the response structure.\r\nTheresponse is a flattened rowset. Parameters on the query determine which fields are ineach row and how many rows are in the response. The search engine ranks thematching documents and returns the most relevant results.Search results are composed of \u0022retrievable\u0022 fields from your search index. A result iseither:All \u0022retrievable\u0022 fields (a REST API default).\r\nFields explicitly listed in a \u0022select\u0022 parameter on the query.The examples in this article used a \u0022select\u0022 statement to specify text (non-vector) fieldsin the response.A query might match to any number of documents, as many as all of them if the searchcriteria are weak (for example \u0022search=*\u0022 for a null query). Because it\u0027s seldom practicalto return unbounded results, you should specify a maximum for the response:\u0022k\u0022: n results for vector-only queries\uFF17 NoteVectorizers are used during indexing and querying. If you don\u0027t need data chunkingand vectorization in the index, you can skip steps like creating an indexer, skillset,and data source.\n"
}