{
  "Id": "1078",
  "Title": "\u0022Implementing Custom Skills for AI Enrichment in Azure\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfCustom skills might sound complex but can be simple and straightforward in terms ofimplementation. If you have existing packages that provide pattern matching orclassification models, the content you extract from blobs could be passed to thesemodels for processing. Since AI enrichment is Azure-based, your model should be onAzure also. Some common hosting methodologies include using Azure Functions orContainers.If you\u0027re building a custom skill, this article describes the interface you use to integratethe skill into the pipeline. The primary requirement is the ability to accept inputs andemit outputs in ways that are consumable within the skillset as a whole.\r\nAs such, thefocus of this article is on the input and output formats that the enrichment pipelinerequires.Building a custom skill gives you a way to insert transformations unique to your content.A custom skill executes independently, applying whatever enrichment step you require.For example, you could build custom classification models to differentiate business andfinancial contracts and documents, or add a speech recognition skill to reach deeperinto audio files for relevant content. For a step-by-step example, see Example: Creating acustom skill for AI enrichment.The interface for a custom skill is specified through the Custom Web API skill.\r\nJSONBenefits of custom skillsSet the endpoint and timeout interval\u0022@odata.type\u0022: \u0022#Microsoft.Skills.Custom.WebApiSkill\u0022,\u0022description\u0022: \u0022This skill has a 230 second timeout\u0022,\u0022uri\u0022: \u0022https://[your custom skill uri goes here]\u0022,The URI is the HTTPS endpoint of your function or app. When setting the URI, make surethe URI is secure (HTTPS).\r\nIf your code is hosted in an Azure function app, the URIshould include an API key in the header or as a URI parameter to authorize the request.If instead your function or app uses Azure managed identities and Azure roles forauthentication and authorization, the custom skill can include an authentication tokenon the request. The following points describe the requirements for this approach:The search service, which sends the request on the indexer\u0027s behalf, must beconfigured to use a managed identity (either system or user-assigned) so that thecaller can be authenticated by Microsoft Entra ID.Your function or app must be configured for Microsoft Entra ID.\n"
}