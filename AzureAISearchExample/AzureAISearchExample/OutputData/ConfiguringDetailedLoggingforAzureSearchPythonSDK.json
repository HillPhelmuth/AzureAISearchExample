{
  "Id": "1550",
  "Title": "\u0022Configuring Detailed Logging for Azure Search Python SDK\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdf) is logged at INFO level.Detailed DEBUG level logging, including request/response bodies and unredactedheaders, can be enabled on a client with the logging_enable keyword argument:PythonAsync APIsfrom azure.core.credentials import AzureKeyCredentialfrom azure.search.documents.aio import SearchClientsearch_client = SearchClient(service_endpoint, index_name, AzureKeyCredential(key))async with search_client:    results = await search_client.search(search_text=\u0022spa\u0022)    print(\u0022Hotels containing \u0027spa\u0027 in the name (or other fields):\u0022)    async for result in results:        print(\u0022    Name: {} (rating {})\u0022.\r\nformat(result[\u0022hotelName\u0022], result[\u0022rating\u0022]))TroubleshootingGeneralLoggingimport sysimport loggingfrom azure.core.credentials import AzureKeyCredentialfrom azure.search.documents import SearchClient# Create a logger for the \u0027azure\u0027 SDKlogger = logging.getLogger(\u0027azure\u0027)logger.setLevel(logging.\r\nDEBUG)Similarly, logging_enable can enable detailed logging for a single operation, even whenit isn\u0027t enabled for the client:PythonGo further with Azure.Search.Documents and our https://github.com/Azure/azure-sdk-for-python/blob/azure-search-documents_11.4.0/sdk/search/azure-search-documents/samplesWatch a demo or deep dive videoRead more about the Azure Cognitive Search serviceSee our Search CONTRIBUTING. md for details on building, testing, and contributingto this library.This project welcomes contributions and suggestions. Most contributions require you toagree to a Contributor License Agreement (CLA) declaring that you have the right to,and actually do, grant us the rights to use your contribution. For details, visitcla.microsoft.com.This project has adopted the Microsoft Open Source Code of Conduct. For moreinformation see the Code of Conduct FAQ or contact opencode@microsoft.com withany additional questions or comments.# Configure a console outputhandler = logging.StreamHandler(stream=sys.stdout)logger.\n"
}