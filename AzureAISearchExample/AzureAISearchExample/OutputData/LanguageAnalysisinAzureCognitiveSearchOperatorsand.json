{
  "Id": "384",
  "Title": "\u0022Language Analysis in Azure Cognitive Search: Operators and Analyzers\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfUsers who are likely to include operators (commonLexical analyzers process term queries and phrase queries after the query tree isstructured. An analyzer accepts the text inputs given to it by the parser, processes thetext, and then sends back tokenized terms to be incorporated into the query tree.\r\nThe most common form of lexical analysis is *linguistic analysis that transforms queryterms based on rules specific to a given language:Reducing a query term to the root form of a wordRemoving non-essential words (stopwords, such as \u0022the\u0022 or \u0022and\u0022 in English)Breaking a composite word into component partsLower casing an upper case wordAll of these operations tend to erase differences between the text input provided by theuser and the terms stored in the index.\r\nSuch operations go beyond text processing andrequire in-depth knowledge of the language itself. To add this layer of linguisticawareness, Azure Cognitive Search supports a long list of language analyzers from bothLucene and Microsoft.\r\nIn our example, prior to analysis, the initial query tree has the term \u0022Spacious,\u0022 with anuppercase \u0022S\u0022 and a comma that the query parser interprets as a part of the query term(a comma isn\u0027t considered a query language operator).When the default analyzer processes the term, it will lowercase \u0022ocean view\u0022 and\u0022spacious\u0022, and remove the comma character. The modified query tree looks like:when searching document stores) might find results more intuitive if\u0022searchMode=all\u0022 informs boolean query constructs. For more about the interplaybetween \u0022searchMode\u0022 and operators, see Simple query syntax. Stage 2: Lexical analysis\uFF17 NoteAnalysis requirements can range from minimal to elaborate depending on yourscenario. You can control complexity of lexical analysis by the selecting one of thepredefined analyzers or by creating your own custom analyzer. Analyzers arescoped to searchable fields and are specified as part of a field definition. This allowsyou to vary lexical analysis on a per-field basis. Unspecified, the standard Luceneanalyzer is used.The behavior of an analyzer can be tested using the Analyze API. Provide the text youwant to analyze to see what terms given analyzer generates.\n"
}