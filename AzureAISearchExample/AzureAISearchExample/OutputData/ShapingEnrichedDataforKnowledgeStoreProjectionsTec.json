{
  "Id": "1112",
  "Title": "\u0022Shaping Enriched Data for Knowledge Store Projections: Techniques and Approaches\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfAs skills execute, the outputs are written to an enrichment tree in a hierarchy of nodes,and while you might want to view and consume the enrichment tree in its entirety, it\u0027smore likely that you\u0027ll want a finer grain, creating subsets of nodes for differentscenarios, such as placing the nodes related to translated text or extracted entities inspecific tables.\r\nBy itself, the enrichment tree doesn\u0027t include logic that would inform how its content isrepresented in a knowledge store. Data shapes fill this gap by providing the schema ofwhat goes into each table, object, and file projection. You can think of a data shape as acustom definition or view of the enriched data. You can create as many shapes as youneed, and then assign them to projections in a knowledge store definition.\r\nThere are two ways to shape enriched content to that it can be projected into aknowledge store:Use the Shaper skill to create nodes in an enrichment tree that are used expresslyfor projection. Most skills create new content. In contrast, a Shaper skill work withexisting nodes, usually to consolidate multiple nodes into a single complex object.This is useful for tables, where you want the output of multiple nodes to bephysically expressed as columns in the table.\r\nUse an inline shape within the projection definition itself.Using the Shaper skill externalizes the shape so that it can be used by multipleprojections or even other skills. It also ensures that all the mutations of the enrichmenttree are contained within the skill, and that the output is an object that can be reused. Incontrast, inline shaping allows you to create the shape you need, but is an anonymousobject and is only available to the projection for which it\u0027s defined. The approaches can be used together or separately. This article shows both: a Shaperskill for the table projections, and inline shaping with the key phrases table projection.Approaches for creating shapesShaper skills are usually placed at the end of a skillset, creating a view of the data thatyou want to pass to a projection.\nThis example creates a shape called \u0022tableprojection\u0022containing the following nodes: \u0022reviews_text\u0022, \u0022reviews_title\u0022,\u0022AzureSearch_DocumentKey\u0022, and sentiment scores and key phrases from pagedreviews.JSONUse a Shaper skill{     \u0022@odata.type\u0022: \u0022#Microsoft.Skills.Util.\n"
}