{
  "Id": "1087",
  "Title": "\u0022Creating an Azure Function for Bing Entity Search Service\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfPrerequisitesCreate an Azure FunctionCreate a function appVisual Studio creates a project and in it a class that contains boilerplate code for thechosen function type. The FunctionName attribute on the method sets the name of thefunction. The HttpTrigger attribute specifies that the function is triggered by an HTTPrequest.Now, replace all of the content of the file Function1.cs with the following code:C#Modify the code to call the Bing Entity Search Serviceusing System; using System.Collections.Generic;using System.IO; using System.Linq; using System.Net.Http; using System.Threading.Tasks; using Microsoft.AspNetCore.\r\nMvc; using Microsoft.Azure.WebJobs; using Microsoft.Azure.WebJobs.Extensions.Http; using Microsoft.AspNetCore.Http; using Microsoft.Extensions.Logging; using Newtonsoft.Json; namespace SampleSkills {     /// \u003Csummary\u003E     /// Sample custom skill that wraps the Bing entity search API to connect it with a      /// AI enrichment pipeline.     /// \u003C/summary\u003E     public static class BingEntitySearch     {         #region Credentials         // IMPORTANT: Make sure to enter your credential and to verify the API endpoint matches yours.         static readonly string bingApiEndpoint = \u0022https://api.bing.microsoft.com/v7.\r\n0/entities\u0022;         static readonly string key = \u0022\u003Center your api key here\u003E\u0022;           #endregion         #region Class used to deserialize the request         private class InputRecord         {             public class InputRecordData             {                 public string Name { get; set; }             }             public string RecordId { get; set; }             public InputRecordData Data { get; set; }         }         private class WebApiRequest         {             public List\u003CInputRecord\u003E Values { get; set; }         }         #endregion         #region Classes used to serialize the response         private class OutputRecord         {             public class OutputRecordData             {                 public string Name { get;\n"
}