{
  "Id": "388",
  "Title": "\u0022Understanding Query Execution and Matching in Azure Search\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfFor the description field, the index is as follows:TermDocument listair3and4beach1conditioned3comfortable3distance1island2kaua\u02BBi2located2north2ocean1, 2, 3of2on2quiet4rooms1, 3secluded4shore2spacious1TermDocument listthe1, 2to1view1, 2, 3walking1with3Matching query terms against indexed termsGiven the inverted indices above, let\u2019s return to the sample query and see how matchingdocuments are found for our example query.\r\nRecall that the final query tree looks likethis:During query execution, individual queries are executed against the searchable fieldsindependently.\r\nThe TermQuery, \u0022spacious\u0022, matches document 1 (Hotel Atman).The PrefixQuery, \u0022air-condition*\u0022, doesn\u0027t match any documents.This is a behavior that sometimes confuses developers. Although the term air-conditioned exists in the document, it\u0027s split into two terms by the default analyzer.\r\nRecall that prefix queries, which contain partial terms, aren\u0027t analyzed. Thereforeterms with prefix \u0022air-condition\u0022 are looked up in the inverted index and notfound.The PhraseQuery, \u0022ocean view\u0022, looks up the terms \u0022ocean\u0022 and \u0022view\u0022 and checksthe proximity of terms in the original document. Documents 1, 2 and 3 match thisquery in the description field. Notice document 4 has the term ocean in the titlebut isn\u2019t considered a match, as we\u0027re looking for the \u0022ocean view\u0022 phrase ratherthan individual words.\uFF17 NoteOn the whole, for the query in question, the documents that match are 1, 2, 3.Every document in a search result set is assigned a relevance score.\n"
}