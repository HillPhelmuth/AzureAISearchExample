{
  "Id": "1083",
  "Title": "\u0022Optimizing Azure Search Indexer Performance with Custom Skill Configuration\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfFor example, the number of times a skill is invoked per document and theexpected duration per invocation.On the custom skill set the following parameters.1. Set batchSize of the custom skill to configure the number of records sent to theskill in a single invocation of the skill.2. Set the degreeOfParallelism to calibrate the number of concurrent requests theindexer will make to your skill.3. Set timeoutto a value sufficient for the skill to respond with a valid response.4. In the indexer definition, set batchSize to the number of documents that shouldbe read from the data source and enriched concurrently.\r\nPrerequisitesSkillset configurationSkill settingsSetting these variables to optimize the indexers performance requires determining ifyour skill performs better with many concurrent small requests or fewer large requests.A few questions to consider are:What is the skill invocation cardinality? Does the skill execute once for eachdocument, for instance a document classification skill, or could the skill executemultiple times per document, a paragraph classification skill?On average how many documents are read from the data source to fill out a skillrequest based on the skill batch size? Ideally, this should be less than the indexerbatch size.\r\nWith batch sizes greater than 1 your skill can receive records frommultiple source documents. For example if the indexer batch count is 5 and theskill batch count is 50 and each document generates only five records, the indexerwill need to fill a custom skill request across multiple indexer batches.The average number of requests an indexer batch can generate should give you anoptimal setting for the degrees of parallelism. If your infrastructure hosting the skillcannot support that level of concurrency, consider dialing down the degrees ofparallelism. As a best practice, test your configuration with a few documents tovalidate your choices on the parameters. Testing with a smaller sample of documents, evaluate the execution time of yourskill to the overall time taken to process the subset of documents. Does yourindexer spend more time building a batch or waiting for a response from yourskill?Consider the upstream implications of parallelism. If the input to a custom skill isan output from a prior skill, are all the skills in the skillset scaled out effectively tominimize latency?Custom skills should return a success status code HTTP 200 when the skill completessuccessfully. If one or more records in a batch result in errors, consider returning multi-status code 207.\n"
}