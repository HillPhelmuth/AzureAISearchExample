{
  "Id": "808",
  "Title": "\u0022Understanding and Managing Azure Cognitive Search Indexer Scheduling Behavior\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfLet\u2019s consider an example to make this more concrete. Suppose we configure an indexerschedule with an interval of hourly and a start time of June 1, 2022 at 8:00:00 AM UTC.Here\u0027s what could happen when an indexer run takes longer than an hour:The first indexer execution starts at or around June 1, 2022 at 8:00 AM UTC.\r\nAssume this execution takes 20 minutes (or any amount of time that\u0027s less than 1hour).The second execution starts at or around June 1, 2022 9:00 AM UTC. Suppose thatthis execution takes 70 minutes - more than an hour \u2013 and it will not completeuntil 10:10 AM UTC.\r\nThe third execution is scheduled to start at 10:00 AM UTC, but at that time theprevious execution is still running. This scheduled execution is then skipped. Thenext execution of the indexer won\u0027t start until 11:00 AM UTC.\r\nScheduling behavior\uFF17 NoteIf an indexer is set to a certain schedule but repeatedly fails on the same documenteach time, the indexer will begin running on a less frequent interval (up to themaximum interval of at least once every 2 hours or 24 hours, depending ondifferent implementation factors) until it successfully makes progress again. If youbelieve you have fixed whatever the underlying issue, you can run the indexermanually, and if indexing succeeds, the indexer will return to its regular schedule. For indexers that run on a schedule, you can monitor operations by retrieving statusfrom the search service, or obtain detailed information by enabling resource logging.Monitor search indexer statusCollect and analyze log dataIndex large data setsNext stepsField mappings and transformationsusing Azure Cognitive Search indexersArticle\u202209/15/2022When an Azure Cognitive Search indexer loads a search index, it determines the datapath through source-to-destination field mappings. Implicit field mappings are internaland occur when field names and data types are compatible between the source anddestination.\n"
}