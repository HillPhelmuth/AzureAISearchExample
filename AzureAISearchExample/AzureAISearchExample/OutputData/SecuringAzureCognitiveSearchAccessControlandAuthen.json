{
  "Id": "1543",
  "Title": "\u0022Securing Azure Cognitive Search: Access Control and Authentication Best Practices\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfRestricting access and operations in client apps is essential tosafeguarding the search assets on your service. Always use a query key rather than anadmin key for any query originating from a client app.Note: The example Azure CLI snippet above retrieves an admin key so it\u0027s easier to getstarted exploring APIs, but it should be managed carefully.To instantiate the SearchClient, you\u0027ll need the endpoint, API key and index name:PythonYou can also create a SearchClient, SearchIndexClient, or SearchIndexerClient usingAzure Active Directory (AAD) authentication.\r\nYour user or service principal must beassigned the \u0022Search Index Data Reader\u0022 role. Using the DefaultAzureCredential youcan authenticate a service using Managed Identity or a service principal, authenticate asa developer working on an application, and more all without changing code. Please referthe documentation for instructions on how to connect to Azure Cognitive Search usingAzure role-based access control (Azure RBAC).Before you can use the DefaultAzureCredential, or any credential type fromAzure.Identity, you\u0027ll first need to install the Azure.Identity package.\r\nTo use DefaultAzureCredential with a client ID and secret, you\u0027ll need to set theAZURE_TENANT_ID, AZURE_CLIENT_ID, and AZURE_CLIENT_SECRET environment variables;az search admin-key show --service-name \u003Cmysearch\u003E --resource-group \u003Cmysearch-rg\u003ECreate a SearchClientfrom azure.core.credentials import AzureKeyCredentialfrom azure.search.documents import SearchClientservice_endpoint = os. environ[\u0022AZURE_SEARCH_SERVICE_ENDPOINT\u0022]index_name = os.environ[\u0022AZURE_SEARCH_INDEX_NAME\u0022]key = os.environ[\u0022AZURE_SEARCH_API_KEY\u0022]search_client = SearchClient(service_endpoint, index_name, AzureKeyCredential(key))Create a client using Azure Active Directory authenticationalternatively, you can pass those values to the ClientSecretCredential also inAzure.Identity.\n"
}