{
  "Id": "599",
  "Title": "\u0022Understanding Azure Search: Replicas, Partitions, and Search Units Explained\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfReplicas are copies of the search engine. Partitions are units ofstorage. Each new search service starts with one each, but you can adjust each unitindependently to accommodate fluctuating workloads. Adding either unit is billable.The physical characteristics of replicas and partitions, such as processing speed and diskIO, vary by service tier. If you provisioned on Standard, replicas and partitions will befaster and larger than those of Basic.Changing capacity isn\u0027t instantaneous. It can take up to an hour to commission ordecommission partitions, especially on services with large amounts of data.\r\nWhen scaling a search service, you can choose from the following tools and approaches:Azure portalAzure PowerShellAzure CLIManagement REST APICapacity is expressed in search units that can be allocated in combinations of partitionsand replicas, using an underlying sharding mechanism to support flexible configurations:ConceptDefinitionSearchunitA single increment of total available capacity (36 units). It\u0027s also the billing unit for anAzure Cognitive Search service. A minimum of one unit is required to run the service.ReplicaInstances of the search service, used primarily to load balance query operations. Eachreplica hosts one copy of an index.\r\nIf you allocate three replicas, you\u0027ll have threecopies of an index available for servicing query requests.Concepts: search units, replicas, partitions,shardsConceptDefinitionPartitionPhysical storage and I/O for read/write operations (for example, when rebuilding orrefreshing an index). Each partition has a slice of the total index.\r\nIf you allocate threepartitions, your index is divided into thirds.ShardA chunk of an index. Azure Cognitive Search divides each index into shards to makethe process of adding partitions faster (by moving shards to new search units).The following diagram shows the relationship between replicas, partitions, shards, andsearch units. It shows an example of how a single index is spanned across four searchunits in a service with two replicas and two partitions. Each of the four search unitsstores only half of the shards of the index. The search units in the left column store thefirst half of the shards, comprising the first partition, while those in the right columnstore the second half of the shards, comprising the second partition.\n"
}