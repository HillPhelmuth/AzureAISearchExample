{
  "Id": "1357",
  "Title": "\u0022Logging Search and Click Events for Azure Search Analysis\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfgetResponseHeader(\u0027x-ms-azs-searchid\u0027); Step 3: Log Search events\uFF17 NoteRequest the count of user generated queries by adding $count=true to your searchquery. For more information, see Search Documents (REST).var properties = new Dictionary \u003Cstring, string\u003E  {     {\u0022SearchServiceName\u0022, \u003Cservice name\u003E},     {\u0022SearchId\u0022, \u003Csearch Id\u003E},     {\u0022IndexName\u0022, \u003Cindex name\u003E},     {\u0022QueryTerms\u0022, \u003Csearch terms\u003E},     {\u0022ResultCount\u0022, \u003Cresults count\u003E},     {\u0022ScoringProfile\u0022, \u003Cscoring profile used\u003E} }; _telemetryClient.\r\nTrackEvent(\u0022Search\u0022, properties); appInsights.trackEvent(\u0022Search\u0022, {   SearchServiceName: \u003Cservice name\u003E, Every time that a user clicks on a document, that\u0027s a signal that must be logged forsearch analysis purposes.\r\nUse Application Insights custom events to log these eventswith the following schema:ServiceName: (string) search service nameSearchId: (guid) unique identifier of the related search queryDocId: (string) document identifierPosition: (int) rank of the document in the search results pageUse C#C#Use JavaScriptJavaScript  SearchId: \u003Csearch id\u003E,   IndexName: \u003Cindex name\u003E,   QueryTerms: \u003Csearch terms\u003E,   ResultCount: \u003Cresults count\u003E,   ScoringProfile: \u003Cscoring profile used\u003E });\r\nStep 4: Log Click events\uFF17 NotePosition refers to the cardinal order in your application.\r\nYou are free to set thisnumber, as long as it\u0027s always the same, to allow for comparison. var properties = new Dictionary \u003Cstring, string\u003E  {     {\u0022SearchServiceName\u0022, \u003Cservice name\u003E},     {\u0022SearchId\u0022, \u003Csearch id\u003E},     {\u0022ClickedDocId\u0022, \u003Cclicked document id\u003E},     {\u0022Rank\u0022, \u003Cclicked document position\u003E} }; _telemetryClient.TrackEvent(\u0022Click\u0022, properties); appInsights.\n"
}