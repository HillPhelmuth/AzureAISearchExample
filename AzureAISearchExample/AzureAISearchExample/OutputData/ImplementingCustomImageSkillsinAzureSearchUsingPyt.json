{
  "Id": "1065",
  "Title": "\u0022Implementing Custom Image Skills in Azure Search Using Python\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfX = normalized.X;         original.Y = normalized.Y;     } else if (angle == 90)     {         original.X = normalized.Y;         original.Y = (width - normalized.X);     } else if (angle == 180)     {         original.X = (width -  normalized.\r\nX); Images can also be passed into and returned from custom skills. A skillset base64-encodes the image being passed into the custom skill. To use the image within thecustom skill, set \u0022/document/normalized_images/*/data\u0022 as the input to the custom skill.Within your custom skill code, base64-decode the string before converting it to animage.\r\nTo return an image to the skillset, base64-encode the image before returning itto the skillset.The image is returned as an object with the following properties.JSONThe Azure Search Python samples repository has a complete sample implemented inPython of a custom skill that enriches images.\r\nFor scenarios where you require a custom skill to work on images, you can pass imagesto the custom skill, and have it return text or images. The Python sample image-processing demonstrates the workflow. The following skillset is from the sample.The following skillset takes the normalized image (obtained during document cracking),and outputs slices of the image.\r\noriginal.Y = (height - normalized.Y);     } else if (angle == 270)     {         original.X = height - normalized.Y;         original.Y = normalized.X;     }     double scalingFactor = (angle % 180 == 0) ? originalHeight / height : originalHeight / width;     original.X = (int) (original.X * scalingFactor);     original.Y = (int)(original. Y * scalingFactor);     return original; } Scenario: Custom image skills {    \u0022$type\u0022: \u0022file\u0022,    \u0022data\u0022: \u0022base64String\u0022   } Passing images to custom skillsJSONThe custom skill itself is external to the skillset. In this case, it is Python code that firstloops through the batch of request records in the custom skill format, then converts thebase64-encoded string to an image.\n"
}