{
  "Id": "1618",
  "Title": "\u0022Understanding OData Comparison Operators in Azure AI Search\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfInt64)Comparisons using eq, ne,lt, gt, le, or geCombining comparisonswith other sub-expressionsusing orCombining comparisonsexcept ne with other sub-expressions using andExpressions usingcombinations of and andComparisons using eq,ne, lt, gt, le, or geCombining comparisonswith other sub-expressions using andCombining comparisonsexcept eq with othersub-expressions using orExpressions usingcombinations of and androoms/all(room: room/amenities/any(a: a eq \u0027tv\u0027) and room/baseRate lt 100.\r\n0)LimitationsData typeFeatures allowed inlambda expressions withanyFeatures allowed inlambda expressionswith allor in Disjunctive NormalForm (DNF)or in ConjunctiveNormal Form (CNF)For more details on these limitations as well as examples, see Troubleshooting collectionfilters in Azure AI Search. For more in-depth information on why these limitations exist,see Understanding collection filters in Azure AI Search.\r\nFilters in Azure AI SearchOData expression language overview for Azure AI SearchOData expression syntax reference for Azure AI SearchSearch Documents (Azure AI Search REST API)Next stepsOData comparison operators in Azure AISearch - eq, ne, gt, lt, ge, and leArticle\u202211/15/2023The most basic operation in an OData filter expression in Azure AI Search is to comparea field to a given value.\r\nTwo types of comparison are possible -- equality comparison,and range comparison. You can use the following operators to compare a field to aconstant value:Equality operators:eq: Test whether a field is equal to a constant valuene: Test whether a field is not equal to a constant valueRange operators:gt: Test whether a field is greater than a constant valuelt: Test whether a field is less than a constant valuege: Test whether a field is greater than or equal to a constant valuele: Test whether a field is less than or equal to a constant valueYou can use the range operators in combination with the logical operators to testwhether a field is within a certain range of values.\n"
}