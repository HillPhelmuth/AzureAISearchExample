{
  "Id": "1072",
  "Title": "\u0022Optimizing Azure Search Indexer Performance with Incremental Enrichment and Cache Verification\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfTo verify whether the cache is operational, modify a skillset and run the indexer, thencompare before-and-after metrics for execution time and document counts.Skillsets that include image analysis and Optical Character Recognition (OCR) of scanneddocuments make good test cases. If you modify a downstream text skill or any skill thatis not image-related, the indexer can retrieve all of the previously processed image andOCR content from cache, updating and processing only the text-related changesindicated by your edits. You can expect to see fewer documents in the indexer executiondocument count, shorter execution times, and fewer charges on your bill.\r\nThe file set used in cog-search-demo tutorials is a useful test case because it contains14 files of various formats JPG, PNG, HTML, DOCX, PPTX, and other types. Change en toes or another language in the text translation skill for proof-of-concept testing ofincremental enrichment.\r\nThe following error occurs if you forget to specify a preview API version on the request:\u0022The request is invalid. Details: indexer : A resource without a type name wasfound, but no expected type was specified. To allow entries without typeinformation, the expected type must also be specified when the model is specified.\u0022POST https://[YOUR-SEARCH-SERVICE].search.windows.\r\nnet/indexers/[YOUR-INDEXER-NAME]/run?api-version=2020-06-30-Preview Content-Type: application/json api-key: [YOUR-ADMIN-KEY] \uFF17 NoteA reset and rerun of the indexer results in a full rebuild so that content can becached. All cognitive enrichments will be rerun on all documents. Reusing enrichedcontent from the cache begins after the cache is loaded. Check for cached outputCommon errorsA 400 Bad Request error will also occur if you are missing an indexer requirement. Theerror message will specify any missing dependencies.Incremental enrichment is applicable on indexers that contain skillsets, providingreusable content for both indexes and knowledge stores. The following links providemore information about caching and skillsets.\n"
}