{
  "Id": "474",
  "Title": "\u0022Optimizing Index Performance with Azure Cognitive Search Analyzers\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfNote that this operation will put your index offline for at least a few seconds,causing your indexing and query requests to fail. Performance and writeavailability of the index can be impaired for several minutes after the index isupdated, or longer for very large indexes.\u0022This section offers advice on how to work with analyzers.Azure Cognitive Search lets you specify different analyzers for indexing and searchthrough the \u0022indexAnalyzer\u0022 and \u0022searchAnalyzer\u0022 field properties. If unspecified, theanalyzer set with the analyzer property is used for both indexing and searching.\r\nIf theanalyzer is unspecified, the default Standard Lucene analyzer is used.Recommendations for working with analyzersOne analyzer for read-write unless you have specificrequirementsA general rule is to use the same analyzer for both indexing and querying, unlessspecific requirements dictate otherwise. Be sure to test thoroughly. When textprocessing differs at search and indexing time, you run the risk of mismatch betweenquery terms and indexed terms when the search and indexing analyzer configurationsaren\u0027t aligned.Overriding the standard analyzer requires an index rebuild. If possible, decide on whichanalyzers to use during active development, before rolling an index into production.\r\nIf a search fails to return expected results, the most likely scenario is token discrepanciesbetween term inputs on the query, and tokenized terms in the index. If the tokens aren\u0027tthe same, matches fail to materialize. To inspect tokenizer output, we recommend usingthe Analyze API as an investigation tool. The response consists of tokens, as generatedby a specific analyzer.The examples below show analyzer definitions for a few key scenarios.Custom analyzer exampleAssign analyzers to a field exampleMixing analyzers for indexing and searchLanguage analyzer exampleThis example illustrates an analyzer definition with custom options. Custom options forchar filters, tokenizers, and token filters are specified separately as named constructs,and then referenced in the analyzer definition. Predefined elements are used as-is andreferenced by name.Walking through this example:Analyzers are a property of the field class for a searchable field.A custom analyzer is part of an index definition.\n"
}