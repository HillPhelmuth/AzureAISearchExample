{
  "Id": "1388",
  "Title": "\u0022Configuring Azure Authentication and Authorization with Postman and Azure CLI\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfaz login az account show --query id -o tsv az group create -l westus -n MyResourceGroup az ad sp create-for-rbac --name mySecurityPrincipalName \\                          --role owner \\                          --scopes /subscriptions/mySubscriptionID/resourceGroups/myResourceGroupName The following steps are from this blog post if you need more detail.1. Start a new Postman collection and edit its properties.\r\nIn the Variables tab, createthe following variables:VariableDescriptionclientIdProvide the previously generated \u0022appID\u0022 that you created in Azure AD.clientSecretProvide the \u0022password\u0022 that was created for your client.tenantIdProvide the \u0022tenant\u0022 that was returned in the previous step.subscriptionIdProvide the subscription ID for your subscription.resourceEnter https://management.azure.com/. This Azure resource is used for allcontrol plane operations.bearerToken(leave blank; the token is generated programmatically)2. In the Authorization tab, select Bearer Token as the type.3. In the Token field, specify the variable placeholder {{bearerToken}}.\r\n4. In the Pre-request Script tab, paste in the following script:JavaScriptSet up Postmanpm.test(\u0022Check for collectionVariables\u0022, function () {     let vars = [\u0027clientId\u0027, \u0027clientSecret\u0027, \u0027tenantId\u0027, \u0027subscriptionId\u0027];     vars.forEach(function (item, index, array) {         console.log(item, index);        pm.expect(pm.\r\ncollectionVariables.get(item), item \u002B \u0022 variable not set\u0022).to.not.be.undefined;         pm.expect(pm.collectionVariables.get(item), item \u002B \u0022 variable not set\u0022).to.not.be.empty;      });     if (!pm.collectionVariables.get(\u0022bearerToken\u0022) || Date.now() \u003E new Date(pm.collectionVariables.get(\u0022bearerTokenExpiresOn\u0022) * 1000)) {         pm. sendRequest({             url: \u0027https://login.microsoftonline.com/\u0027 \u002B pm.collectionVariables.get(\u0022tenantId\u0022) \u002B \u0027/oauth2/token\u0027,             method: \u0027POST\u0027,             header: \u0027Content-Type: application/x-www-form-urlencoded\u0027,             body: {                 mode: \u0027urlencoded\u0027,                 urlencoded: [ 5. Save the collection.\n"
}