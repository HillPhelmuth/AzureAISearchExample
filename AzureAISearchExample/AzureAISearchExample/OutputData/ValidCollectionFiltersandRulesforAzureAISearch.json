{
  "Id": "1227",
  "Title": "\u0022Valid Collection Filters and Rules for Azure AI Search\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfThe body of an any can only test for equality while the body of an all can only test forinequality.It\u0027s also possible to combine multiple expressions via or in the body of an any, and viaand in the body of an all. Since the search.in function is equivalent to combiningequality checks with or, it\u0027s also allowed in the body of an any. Conversely, notsearch.in is allowed in the body of an all.For example, these expressions are allowed:tags/any(t: t eq \u0027books\u0027)tags/any(t: search.\r\nin(t, \u0027books, games, toys\u0027))tags/all(t: t ne \u0027books\u0027)tags/all(t: not (t eq \u0027books\u0027))How to write valid collection filtersRules for filtering string collections\uFF17 NoteAzure AI Search does not support the lt/le/gt/ge operators for strings, whetherinside or outside a lambda expression.tags/all(t: not search.\r\nin(t, \u0027books, games, toys\u0027))tags/any(t: t eq \u0027books\u0027 or t eq \u0027games\u0027)tags/all(t: t ne \u0027books\u0027 and not (t eq \u0027games\u0027))while these expressions aren\u0027t allowed:tags/any(t: t ne \u0027books\u0027)tags/any(t: not search.\r\nin(t, \u0027books, games, toys\u0027))tags/all(t: t eq \u0027books\u0027)tags/all(t: search.in(t, \u0027books, games, toys\u0027))tags/any(t: t eq \u0027books\u0027 and t ne \u0027games\u0027)tags/all(t: t ne \u0027books\u0027 or not (t eq \u0027games\u0027))The type Edm.Boolean supports only the eq and ne operators. As such, it doesn\u2019t makemuch sense to allow combining such clauses that check the same range variable withand/or since that would always lead to tautologies or contradictions.Here are some examples of filters on Boolean collections that are allowed:flags/any(f: f)flags/all(f: f)flags/any(f: f eq true)flags/any(f: f ne true)flags/all(f: not f)flags/all(f: not (f eq true))Unlike string collections, Boolean collections have no limits on which operator can beused in which type of lambda expression.\n"
}