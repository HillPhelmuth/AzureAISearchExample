{
  "Id": "163",
  "Title": "\u0022Setting Up and Deploying Azure Search with Static Web App\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfIf you intend to run itlocally, you need to install azure-functions-core-tools globally with thefollowing bash command:How is the sample organized?Set up your development environmentBashForking the sample repository is critical to be able to deploy the Static Web App. Thestatic web app determines the build actions and deployment content based on yourown GitHub fork location.\r\nCode execution in the Static Web App is remote, with thestatic web app reading from the code in your forked sample.1. On GitHub, fork the sample repository.Complete the fork process in your web browser with your GitHub account. Thistutorial uses your fork as part of the deployment to an Azure Static Web App.2.\r\nAt a bash terminal, download your forked sample application to your localcomputer.Replace YOUR-GITHUB-ALIAS with your GitHub alias.Bash3. At the same bash terminal, go into your forked repository for this website searchexample:Bash4. Use the Visual Studio Code command, code . to open your forked repository. Theremaining tasks are accomplished from Visual Studio Code, unless specified.\r\nBashnpm install -g azure-functions-core-tools@4Fork and clone the search sample with gitgit clone https://github.com/YOUR-GITHUB-ALIAS/azure-search-javascript-samplescd azure-search-javascript-samplescode .1. In Visual Studio Code, open the Activity bar, and select the Azure icon.2. Sign in to Azure, if you aren\u0027t already signed in.3. In the Resources section, select Add (\u002B), and then select Create Resource Group.4. Enter a resource group name, such as cognitive-search-demo-rg.5. Enter a region:For Node.js, select West US 2. This is the recommended region for the AzureFunction programming model (PM) v4 preview.\n"
}