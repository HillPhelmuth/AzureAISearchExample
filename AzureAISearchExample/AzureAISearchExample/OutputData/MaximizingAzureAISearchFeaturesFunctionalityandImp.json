{
  "Id": "4",
  "Title": "\u0022Maximizing Azure AI Search: Features, Functionality, and Implementation\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfInside a search serviceWhy use Azure AI Search?Transform large undifferentiated text or image files, or application files stored inAzure Blob Storage or Azure Cosmos DB, into searchable chunks. This is achievedduring indexing through cognitive skills that add external processing from AzureAI.Add linguistic or custom text analysis. If you have non-English content, Azure AISearch supports both Lucene analyzers and Microsoft\u0027s natural languageprocessors. You can also configure analyzers to achieve specialized processing ofraw content, such as filtering out diacritics, or recognizing and preserving patternsin strings.\r\nFor more information about specific functionality, see Features of Azure AI SearchFunctionality is exposed through the Azure portal, simple REST APIs, or Azure SDKs likethe Azure SDK for .NET. The Azure portal supports service administration and contentmanagement, with tools for prototyping and querying your indexes and skillsets.\r\nAn end-to-end exploration of core search features can be accomplished in four steps:1. Decide on a tier and region. One free search service is allowed per subscription. Allquickstarts can be completed on the free tier. For more capacity and capabilities,you\u0027ll need a billable tier.2. Create a search service in the Azure portal.3.\r\nStart with Import data wizard. Choose a built-in sample or a supported datasource to create, load, and query an index in minutes.4. Finish with Search Explorer, using a portal client to query the search index you justcreated.Alternatively, you can create, load, and query a search index in atomic steps:1. Create a search index using the portal, REST API, . NET SDK, or another SDK. Theindex schema defines the structure of searchable content.2. Upload content using the \u0022push\u0022 model to push JSON documents from anysource, or use the \u0022pull\u0022 model (indexers) if your source data is of a supportedtype.3. Query an index using Search explorer in the portal, REST API, .NET SDK, or anotherSDK.\n"
}