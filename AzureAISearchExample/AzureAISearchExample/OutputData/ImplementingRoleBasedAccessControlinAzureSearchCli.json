{
  "Id": "1410",
  "Title": "\u0022Implementing Role-Based Access Control in Azure Search Client Libraries\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdf0 token.Use the following client libraries for role-based access control:azure.search.documents (Azure SDK for .NET) version 11.4azure-search-documents (Azure SDK for Java) version 11.5.6azure/search-documents (Azure SDK for JavaScript) version 11.3.1azure.search.documents (Azure SDK for Python) version 11.3The following instructions reference an existing C# sample to demonstrate the codechanges.\r\n1. As a starting point, clone the source code for the C# section of Quickstart:Full text search using the Azure SDKs.The sample currently uses key-based authentication and theAzureKeyCredential to create the SearchClient and SearchIndexClient butyou can make a small change to switch over to role-based authentication.\r\n2. Update the Azure.Search.Documents Nuget package to version 11.4 or later.3. Import the Azure.Identity library to get access to other authenticationtechniques.4. Instead of using AzureKeyCredential in the beginning of Main() inProgram.\r\ncs, use DefaultAzureCredential like in the code snippet below:C#Set up Microsoft Entra authentication in yourclient\uFF17 NoteTo learn more about the OAuth 2.0 code grant flow used by Microsoft Entra ID, seeAuthorize access to Microsoft Entra web applications using the OAuth 2.0 codegrant flow..NET SDKUser-assigned managed identities work only in Azure environments.\r\nIf you run thiscode locally, DefaultAzureCredential will fall back to authenticating with yourcredentials. Make sure you\u0027ve also given yourself the required access to the searchservice if you plan to run the code locally.1. Verify your account has role assignments to run all of the operations in thequickstart sample. To both create and query an index, you\u0027ll need \u0022SearchIndex Data Reader\u0022 and \u0022Search Index Data Contributor\u0022.2. Go to Tools \u003E Options \u003E Azure Service Authentication to choose your Azuresign-on account.You should now be able to run the project from Visual Studio on your local system,using role-based access control for authorization.\n"
}