{
  "Id": "1505",
  "Title": "\u0022Advanced Azure Search Features and Batched Document Management in C#\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdftrue) { IsFilterable = true, IsFacetable = true },        new ComplexField(\u0022Address\u0022)        {            Fields =            {                new SearchableField(\u0022StreetAddress\u0022),                new SearchableField(\u0022City\u0022) { IsFilterable = true, IsSortable = true, IsFacetable = true },                new SearchableField(\u0022StateProvince\u0022) { IsFilterable = true,\r\nIsSortable = true, IsFacetable = true },                new SearchableField(\u0022Country\u0022) { IsFilterable = true, IsSortable = true, IsFacetable = true },                new SearchableField(\u0022PostalCode\u0022) { IsFilterable = true, IsSortable = true, IsFacetable = true }            }        }    },    Suggesters =    {        // Suggest query terms from the hotelName field.\r\nnew SearchSuggester(\u0022sg\u0022, \u0022HotelName\u0022)    }};You can Upload, Merge, MergeOrUpload, and Delete multiple documents from an indexin a single batched request. There are a few special rules for merging to be aware of.C#The request will succeed even if any of the individual actions fail and return anIndexDocumentsResult for inspection. There\u0027s also a ThrowOnAnyError option if you onlycare about success or failure of the whole batch.In addition to querying for documents using keywords and optional filters, you canretrieve a specific document from your index if you already know the key.\r\nYou could getthe key from a query, for example, and want to show more information about it ornavigate your customer to that document.C#All of the examples so far have been using synchronous APIs, but we provide fullsupport for async APIs as well. You\u0027ll generally just add an Async suffix to the name ofthe method and await it.C#client. CreateIndex(index);Adding documents to your indexIndexDocumentsBatch\u003CHotel\u003E batch = IndexDocumentsBatch.Create(    IndexDocumentsAction.Upload(new Hotel { Id = \u0022783\u0022, Name = \u0022Upload Inn\u0022 }),    IndexDocumentsAction.Merge(new Hotel { Id = \u002212\u0022, Name = \u0022Renovated Ranch\u0022 }));IndexDocumentsOptions options = new IndexDocumentsOptions { ThrowOnAnyError = true };client.\n"
}