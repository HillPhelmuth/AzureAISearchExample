{
  "Id": "270",
  "Title": "\u0022Setting Up Azure Search and Data Sources in Visual Studio\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfStart Visual Studio and in the Tools menu, select NuGet Package Manager andthen Manage NuGet Packages for Solution....2. In the Browse tab, find and then install Azure.Search.Documents (version 11.0 orlater).3. Search for the Microsoft.Extensions.Configuration andMicrosoft.Extensions.Configuration.Json NuGet packages and install them as well.4.\r\nOpen the solution file /v11/AzureSearchMultipleDataSources.sln.5. In Solution Explorer, edit the appsettings.json file to add connection information.JSONThe first two entries are the URL and admin keys of a search service. Use the fullendpoint, for example: https://mydemo.search.windows.net.\r\nThe next entries specify account names and connection string information for the AzureBlob Storage and Azure Cosmos DB data sources.Merging content requires that both data streams are targeting the same documents inthe search index.In Azure AI Search, the key field uniquely identifies each document. Every search indexmust have exactly one key field of type Edm.String.\r\nThat key field must be present foreach document in a data source that is added to the index. (In fact, it\u0027s the only requiredfield.\r\n)2 - Set up your environment{  \u0022SearchServiceUri\u0022: \u0022\u003CYourSearchServiceURL\u003E\u0022,  \u0022SearchServiceAdminApiKey\u0022: \u0022\u003CYourSearchServiceAdminApiKey\u003E\u0022,  \u0022BlobStorageAccountName\u0022: \u0022\u003CYourBlobStorageAccountName\u003E\u0022,  \u0022BlobStorageConnectionString\u0022: \u0022\u003CYourBlobStorageConnectionString\u003E\u0022,  \u0022CosmosDBConnectionString\u0022:\r\n\u0022\u003CYourCosmosDBConnectionString\u003E\u0022,  \u0022CosmosDBDatabaseName\u0022: \u0022hotel-rooms-db\u0022}3 - Map key fieldsWhen indexing data from multiple data sources, make sure each incoming row ordocument contains a common document key to merge data from two physically distinctsource documents into a new search document in the combined index. It often requires some up-front planning to identify a meaningful document key for yourindex, and make sure it exists in both data sources. In this demo, the HotelId key foreach hotel in Azure Cosmos DB is also present in the rooms JSON blobs in Blob storage.Azure AI Search indexers can use field mappings to rename and even reformat datafields during the indexing process, so that source data can be directed to the correctindex field. For example, in Azure Cosmos DB, the hotel identifier is called HotelId. Butin the JSON blob files for the hotel rooms, the hotel identifier is named Id.\n"
}