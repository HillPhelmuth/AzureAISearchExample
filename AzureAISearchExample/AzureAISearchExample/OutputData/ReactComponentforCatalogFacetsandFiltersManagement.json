{
  "Id": "181",
  "Title": "\u0022React Component for Catalog Facets and Filters Management\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfresults}                top={top}                skip={skip}                count={data.count}              \u003E\u003C/Results\u003E              \u003CStyledPager                className=\u0022pager-style\u0022                currentPage={currentPage}                resultCount={data.count}                resultsPerPage={resultsPerPage}                setCurrentPage={changeCurrentPage}              \u003E\u003C/StyledPager\u003E            \u003C/Grid\u003E          )}        \u003C/RightColumn\u003E      \u003C/StyledContainer\u003E    \u003C/\u003E  );}Client: Facets from the catalogimport React, { useEffect, useState } from \u0022react\u0022;import { List, Chip } from \u0022@mui/material\u0022;import CheckboxFacet from \u0022.\r\n/CheckboxFacet\u0022;import styled from \u0022@emotion/styled\u0022;const StyledFacetComponent = styled.div\u0060  border-right: \u00221px solid #f0f0f0\u0022;  height: \u0022100%\u0022;\u0060;const StyledSelectedFacets = styled.div\u0060\u0060;const StyledFacetList = styled(List)\u0060  margin: \u00220.\r\n25em\u0022;  margin-top: \u002232px !important\u0022;  padding-left: \u002236px !important\u0022;\u0060;export default function Facets(props) {  const [filters, setFilters] = useState([]);  const [facets, setFacets] = useState({});  useEffect(() =\u003E {    setFilters(props.\r\nfilters);    setFacets(props.facets);  }, [props.filters, props.facets]);  // Change facet name to be more readable  // e.g. \u0022author\u0022 -\u003E \u0022Author\u0022  // e.g. \u0022publication_year\u0022 -\u003E \u0022Publication Year\u0022  function mapFacetName(facetName) {    facetName =      \u0060${facetName[0]. toUpperCase()}${facetName.substring(1)}\u0060.replace(        \u0022_\u0022,        \u0022 \u0022      ) || \u0060\u0060;    return facetName;  }  function addFilter(name, value) {    const newFilters = filters.concat({ field: name, value: value });    props.setFilters(newFilters);  }  function removeFilter(filter) {    const newFilters = filters.\n"
}