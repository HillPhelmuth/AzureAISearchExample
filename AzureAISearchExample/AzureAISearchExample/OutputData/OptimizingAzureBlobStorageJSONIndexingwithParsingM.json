{
  "Id": "833",
  "Title": "\u0022Optimizing Azure Blob Storage JSON Indexing with Parsing Modes\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfJSON blobs in Azure Blob Storage or Azure File Storage commonlyassume any of these forms:A single JSON documentA JSON document containing an array of well-formed JSON elementsA JSON document containing multiple entities, separated by a newlineThe blob indexer provides a \u0022parsingMode\u0022 parameter to optimize the output of thesearch document based on the structure. Parsing modes consist of the followingoptions:parsingModeJSONdocumentDescriptionjsonOne perblob(default) Parses JSON blobs as a single chunk of text.\r\nEach JSONblob becomes a single search document.jsonArrayMultipleper blobParses a JSON array in the blob, where each element of the arraybecomes a separate search document.jsonLinesMultipleper blobParses a blob that contains multiple JSON entities (also an array),with individual elements separated by a newline. The indexer startsa new search document after each new line.\r\nFor both jsonArray and jsonLines, you should review Indexing one blob to producemany search documents to understand how the blob indexer handles disambiguation ofthe document key for multiple search documents produced from the same blob.Within the indexer definition, you can optionally set field mappings to choose whichproperties of the source JSON document are used to populate your target search index.For example, when using the jsonArray parsing mode, if the array exists as a lower-levelproperty, you can set a \u0022documentRoot\u0022 property indicating where the array is placedwithin the blob.The following sections describe each mode in more detail.\r\nIf you\u0027re unfamiliar withindexer clients and concepts, see Create a search indexer. You should also be familiarwith the details of basic blob indexer configuration, which isn\u0027t repeated here.By default, blob indexers parse JSON blobs as a single chunk of text, one searchdocument for each blob in a container. If the JSON is structured, the search documentcan reflect that structure, with individual elements represented as individual fields. Forexample, assume you have the following JSON document in Azure Blob Storage:HTTPThe blob indexer parses the JSON document into a single search document, loading anindex by matching \u0022text\u0022, \u0022datePublished\u0022, and \u0022tags\u0022 from the source against identicallynamed and typed target index fields.\n"
}