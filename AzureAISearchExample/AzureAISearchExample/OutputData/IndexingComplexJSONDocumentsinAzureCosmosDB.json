{
  "Id": "1044",
  "Title": "\u0022Indexing Complex JSON Documents in Azure Cosmos DB\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfNext, it uses the samesource document to illustrate the retrieval and flattening of individual nodes into stringcollections.Here\u0027s an example of a document in Azure Cosmos DB with nested JSON:JSONIf you wanted to fully index the above source document, you\u0027d create an index definitionwhere the field names, levels, and types are reflected as a complex type.\r\nBecause fieldFlatten complex structures into a stringcollection{    \u0022palette\u0022:\u0022primary colors\u0022,    \u0022colors\u0022:[       {          \u0022name\u0022:\u0022blue\u0022,          \u0022medium\u0022:[             \u0022acrylic\u0022,             \u0022oil\u0022,             \u0022pastel\u0022          ]       },       {          \u0022name\u0022:\u0022red\u0022,          \u0022medium\u0022:\r\n[             \u0022acrylic\u0022,             \u0022pastel\u0022,             \u0022watercolor\u0022          ]       },       {          \u0022name\u0022:\u0022yellow\u0022,          \u0022medium\u0022:[             \u0022acrylic\u0022,             \u0022watercolor\u0022          ]       }    ] } mappings aren\u0027t supported for complex types in the search index, your index definitionmust mirror the source document.\r\nJSONHere\u0027s a sample indexer definition that executes the import (notice there are no fieldmappings and no skillset).JSONThe result is the following sample search document, similar to the original in AzureCosmos DB.{   \u0022name\u0022: \u0022my-test-index\u0022,   \u0022defaultScoringProfile\u0022: \u0022\u0022,   \u0022fields\u0022: [     { \u0022name\u0022: \u0022id\u0022, \u0022type\u0022: \u0022Edm. String\u0022, \u0022searchable\u0022: false, \u0022retrievable\u0022: true, \u0022key\u0022: true},     { \u0022name\u0022: \u0022palette\u0022, \u0022type\u0022: \u0022Edm.String\u0022, \u0022searchable\u0022: true, \u0022retrievable\u0022: true },     { \u0022name\u0022: \u0022colors\u0022, \u0022type\u0022: \u0022Collection(Edm.ComplexType)\u0022,       \u0022fields\u0022: [         {           \u0022name\u0022: \u0022name\u0022,           \u0022type\u0022: \u0022Edm.String\u0022,           \u0022searchable\u0022: true,           \u0022retrievable\u0022: true         },         {           \u0022name\u0022: \u0022medium\u0022,           \u0022type\u0022: \u0022Collection(Edm.\n"
}