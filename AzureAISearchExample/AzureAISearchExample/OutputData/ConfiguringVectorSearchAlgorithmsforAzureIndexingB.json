{
  "Id": "695",
  "Title": "\u0022Configuring Vector Search Algorithms for Azure Indexing: Best Practices\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfAdd a vectorSearch section in the index that specifies the search algorithmsused to create the embedding space.\r\nJSON2023-11-01 \u0022vectorSearch\u0022: {     \u0022algorithms\u0022: [         {             \u0022name\u0022: \u0022my-hnsw-config-1\u0022,             \u0022kind\u0022: \u0022hnsw\u0022,             \u0022hnswParameters\u0022: {                 \u0022m\u0022: 4,                 \u0022efConstruction\u0022: 400,                 \u0022efSearch\u0022: 500,                 \u0022metric\u0022: \u0022cosine\u0022             }         },         {             \u0022name\u0022:\r\n\u0022my-hnsw-config-2\u0022,             \u0022kind\u0022: \u0022hnsw\u0022,             \u0022hnswParameters\u0022: {                 \u0022m\u0022: 8,                 \u0022efConstruction\u0022: 800,                 \u0022efSearch\u0022: 800,                 \u0022metric\u0022: \u0022cosine\u0022             }         },         {             \u0022name\u0022: \u0022my-eknn-config\u0022,Key points:Name of the configuration.\r\nThe name must be unique within the index.profiles add a layer of abstraction for accommodating richerdefinitions. A profile is defined in vectorSearch, and then referenced byname on each vector field.\u0022hnsw\u0022 and \u0022exhaustiveKnn\u0022 are the Approximate Nearest Neighbors(ANN) algorithms used to organize vector content during indexing.\r\n\u0022m\u0022 (bi-directional link count) default is 4. The range is 4 to 10. Lowervalues should return less noise in the results.\u0022efConstruction\u0022 default is 400. The range is 100 to 1,000. It\u0027s thenumber of nearest neighbors used during indexing.\u0022efSearch\u0022 default is 500. The range is 100 to 1,000. It\u0027s the number ofnearest neighbors used during search.\u0022metric\u0022 should be \u0022cosine\u0022 if you\u0027re using Azure OpenAI, otherwise usethe similarity metric associated with the embedding model you\u0027re using.Supported values are cosine, dotProduct, euclidean.The fields collection must include a field for the document key, vector fields, and anyother fields that you need for hybrid search scenarios.Vector fields are of type Collection(Edm.Single) and single-precision floating-pointvalues. A field of this type also has a dimensions property and specifies a vectorconfiguration.\n"
}