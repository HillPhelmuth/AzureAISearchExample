{
  "Id": "785",
  "Title": "\u0022Implementing Synonyms in Azure AI Search: A Step-by-Step Guide\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfThis example covers essential steps for adding and usingsynonyms with an existing index.In this example, you will learn how to:You can query a synonym-enabled field as you would normally. There is no additionalquery syntax required to access synonyms.You can create multiple synonym maps, post them as a service-wide resource availableto any index, and then reference which one to use at the field level.\r\nAt query time, inaddition to searching an index, Azure AI Search does a lookup in a synonym map, if oneis specified on fields used in the query.Tutorial requirements include the following:Visual StudioAzure AI Search serviceAzure.Search.Documents packageIf you are unfamiliar with the .NET client library, see How to use Azure AI Search in .\r\nNET.Create a synonym map using the SynonymMap class.\uFF02Set the SynonymMapsName property on fields that should support queryexpansion via synonyms.\uFF02\uFF17 NoteSynonyms can be created programmatically, but not in the portal.PrerequisitesYou can find the full source code of the sample application used in this example onGitHub.\r\nBefore-and-after queries are used to demonstrate the value of synonyms. In thisexample, a sample application executes queries and returns results on a sample \u0022hotels\u0022index populated with two documents. First, the application executes search queriesusing terms and phrases that do not appear in the index. Second, the code enables thesynonyms feature, then re-issues the same queries, this time returning results based onmatches in the synonym map.The code below demonstrates the overall flow.C#Sample codeOverviewstatic void Main(string[] args){   SearchIndexClient indexClient = CreateSearchIndexClient();   Console.WriteLine(\u0022Cleaning up resources... \\n\u0022);   CleanupResources(indexClient);   Console.WriteLine(\u0022Creating index...\\n\u0022);   CreateHotelsIndex(indexClient);   SearchClient searchClient = indexClient.GetSearchClient(\u0022hotels\u0022);   Console.WriteLine(\u0022Uploading documents...\n"
}