{
  "Id": "166",
  "Title": "\u0022Creating and Managing Azure Search Services with Bulk Import\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfSearch/searchServices --output tableaz search service create --name my-cog-search-demo-svc --resource-group cognitive-search-demo-rg --sku free --partition-count 1 --replica-count 1az search query-key list --resource-group cognitive-search-demo-rg --service-name my-cog-search-demo-svcaz search admin-key show --resource-group cognitive-search-demo-rg --service-name my-cog-search-demo-svcPrepare the bulk import script for SearchThe ESM script uses the Azure SDK for Azure AI Search:npm package @azure/search-documentsReference Documentation1.\r\nIn Visual Studio Code, open the bulk_insert_books.js file in the subdirectory,search-website-functions-v4/bulk-insert, replace the following variables withyour own values to authenticate with the Azure Search SDK:YOUR-SEARCH-RESOURCE-NAMEYOUR-SEARCH-ADMIN-KEYJavaScriptimport fetch from \u0027node-fetch\u0027;import Papa from \u0027papaparse\u0027;import {  SearchClient,  SearchIndexClient,  AzureKeyCredential} from \u0027@azure/search-documents\u0027;// Azure AI Search resource settingsconst SEARCH_ENDPOINT = \u0027https://YOUR-RESOURCE-NAME.\r\nsearch.windows.net\u0027;const SEARCH_ADMIN_KEY = \u0027YOUR-RESOURCE-ADMIN-KEY\u0027;// Azure AI Search index settingsconst SEARCH_INDEX_NAME = \u0027good-books\u0027;import SEARCH_INDEX_SCHEMA from \u0027./good-books-index.json\u0027 assert { type: \u0027json\u0027 };// Data settingsconst BOOKS_URL =  \u0027https://raw.githubusercontent.com/Azure-Samples/azure-search-sample-data/main/good-books/books. csv\u0027;const BATCH_SIZE = 1000;// Create Search service client// used to upload docs into Indexconst client = new SearchClient(  SEARCH_ENDPOINT,  SEARCH_INDEX_NAME,  new AzureKeyCredential(SEARCH_ADMIN_KEY));// Create Search service Index client// used to create new Indexconst clientIndex = new SearchIndexClient(  SEARCH_ENDPOINT,  new AzureKeyCredential(SEARCH_ADMIN_KEY));// Insert docs into Search Index// in batchconst insertData = async (data) =\u003E {  let batch = 0;  let batchArray = [];  for (let i = 0; i \u003C data.\n"
}