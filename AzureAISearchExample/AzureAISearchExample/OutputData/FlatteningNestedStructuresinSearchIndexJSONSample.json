{
  "Id": "1045",
  "Title": "\u0022Flattening Nested Structures in Search Index: JSON Sample\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfString\u0022, \u0022searchable\u0022: false, \u0022retrievable\u0022: true, \u0022key\u0022: true},     { \u0022name\u0022: \u0022palette\u0022, \u0022type\u0022: \u0022Edm.String\u0022, \u0022searchable\u0022: true, \u0022retrievable\u0022: true },     { \u0022name\u0022: \u0022colors\u0022, \u0022type\u0022: \u0022Collection(Edm.ComplexType)\u0022,       \u0022fields\u0022: [         {           \u0022name\u0022: \u0022name\u0022,           \u0022type\u0022: \u0022Edm.String\u0022,           \u0022searchable\u0022: true,           \u0022retrievable\u0022: true         },         {           \u0022name\u0022: \u0022medium\u0022,           \u0022type\u0022: \u0022Collection(Edm.\r\nString)\u0022,           \u0022searchable\u0022: true,           \u0022retrievable\u0022: true,         }       ]     }   ] } {   \u0022name\u0022: \u0022my-test-indexer\u0022,   \u0022dataSourceName\u0022: \u0022my-test-ds\u0022,   \u0022skillsetName\u0022: null,  \u0022targetIndexName\u0022: \u0022my-test-index\u0022,   \u0022fieldMappings\u0022: [],   \u0022outputFieldMappings\u0022: [] } JSONAn alternative rendering in a search index is to flatten individual nodes in the source\u0027snested structure into a string collection in a search index.\r\nTo accomplish this task, you\u0027ll need an outputFieldMapping that maps an in-memorynode to a string collection in the index. Although output field mappings primarily applyto skill outputs, you can also use them to address nodes after \u0022document cracking\u0022where the indexer opens a source document and reads it into memory.Below is a sample index definition in Cognitive Search, using string collections to receiveflattened output:JSON{   \u0022value\u0022: [     {       \u0022@search. score\u0022: 1,       \u0022id\u0022: \u0022240a98f5-90c9-406b-a8c8-f50ff86f116c\u0022,       \u0022palette\u0022: \u0022primary colors\u0022,       \u0022colors\u0022: [         {           \u0022name\u0022: \u0022blue\u0022,           \u0022medium\u0022: [             \u0022acrylic\u0022,             \u0022oil\u0022,             \u0022pastel\u0022           ]         },         {           \u0022name\u0022: \u0022red\u0022,           \u0022medium\u0022:\n"
}