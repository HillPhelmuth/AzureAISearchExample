{
  "Id": "679",
  "Title": "\u0022Upgrade and Migration Guide for Azure Search API 2019-05-06\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfUpgrade to 2019-05-06Breaking changesIndexer for Azure Cosmos DB - datasource is now \u0022type\u0022:\u0022cosmosdb\u0022Indexer execution result errors no longer have statusIndexer data source API no longer returns connection stringsNamed Entity Recognition cognitive skill is now discontinuedIf you called the Name Entity Recognition skill in your code, the call fails. Replacementfunctionality is Entity Recognition Skill (V3).\r\nFollow the recommendations in Deprecatedskills to migrate to a supported skill.API version 2019-05-06 added formal support for complex types. If your codeimplemented previous recommendations for complex type equivalency in 2017-11-11-Preview or 2016-09-01-Preview, there are some new and changed limits starting inversion 2019-05-06 of which you need to be aware:The limits on the depth of subfields and the number of complex collections perindex have been lowered.\r\nIf you created indexes that exceed these limits using thepreview api-versions, any attempt to update or recreate them using API version2019-05-06 will fail. If you find yourself in this situation, you need to redesign yourschema to fit within the new limits and then rebuild your index.There\u0027s a new limit starting in api-version 2019-05-06 on the number of elementsof complex collections per document. If you created indexes with documents thatexceed these limits using the preview api-versions, any attempt to reindex thatdata using api-version 2019-05-06 will fail. If you find yourself in this situation, youneed to reduce the number of complex collection elements per document beforereindexing your data.For more information, see Service limits for Azure AI Search.If your code is using complex types with one of the older preview API versions, youmight be using an index definition format that looks like this:JSONUpgrading complex typesHow to upgrade an old complex type structure{  \u0022name\u0022: \u0022hotels\u0022,    \u0022fields\u0022: [    { \u0022name\u0022: \u0022HotelId\u0022, \u0022type\u0022: \u0022Edm.\n"
}