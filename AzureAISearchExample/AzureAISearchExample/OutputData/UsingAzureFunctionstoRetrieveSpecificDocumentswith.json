{
  "Id": "156",
  "Title": "\u0022Using Azure Functions to Retrieve Specific Documents with Azure Search\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfq}                        onBlur={() =\u003E setShowSuggestions(false)}                        onClick={() =\u003E setShowSuggestions(true)}\u003E                    \u003C/input\u003E                    {suggestionDiv}                \u003C/div\u003E                \u003Cdiv className=\u0022input-group-btn\u0022\u003E                    \u003Cbutton className=\u0022btn btn-primary rounded-0\u0022 type=\u0022submit\u0022 onClick={onSearchHandler}\u003E                        Search                    \u003C/button\u003E                \u003C/div\u003E            \u003C/div\u003E        \u003C/div\u003E    );};Azure Function: Get specific documentusing Azure;using Azure.\r\nCore.Serialization;using Azure.Search.Documents;using Azure.Search.Documents.Models;using Microsoft.Azure.Functions.Worker;using Microsoft.Azure.Functions.Worker.Http;using Microsoft.Extensions.Logging;using System.Net;using System.\r\nText.Json;using WebSearch.Models;namespace WebSearch.Function{    public class Lookup    {        private static string searchApiKey = Environment.GetEnvironmentVariable(\u0022SearchApiKey\u0022, EnvironmentVariableTarget.Process);        private static string searchServiceName = Environment.GetEnvironmentVariable(\u0022SearchServiceName\u0022, EnvironmentVariableTarget.Process);        private static string searchIndexName = Environment.\r\nGetEnvironmentVariable(\u0022SearchIndexName\u0022, EnvironmentVariableTarget.Process) ?? \u0022good-books\u0022;        private readonly ILogger\u003CLookup\u003E _logger;        public Lookup(ILogger\u003CLookup\u003E logger)        {            _logger = logger;        }        [Function(\u0022lookup\u0022)]        public async Task\u003CHttpResponseData\u003E RunAsync(            [HttpTrigger(AuthorizationLevel. Anonymous, \u0022get\u0022, \u0022post\u0022)] HttpRequestData req,             FunctionContext executionContext)        {            // Get Document Id            var query = System.Web.HttpUtility.ParseQueryString(req.Url.Query);            string documentId = query[\u0022id\u0022].ToString();            // Azure AI Search             Uri serviceEndpoint = new($\u0022https://{searchServiceName}.search.windows.net/\u0022);            SearchClient searchClient = new(                serviceEndpoint,                searchIndexName,                new AzureKeyCredential(searchApiKey)            );            var getDocumentResponse = await searchClient.\n"
}