{
  "Id": "1675",
  "Title": "\u0022Custom Entity Definition and Parsing Modes in Azure Search\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfJSON file (UTF-8 encoded)Inline within the skill definitionIf the definition file is in a .CSV or .JSON file, provide the full path in the\u0022entitiesDefinitionUri\u0022 parameter. The file is downloaded at the start of each indexer run.It must remain accessible until the indexer stops.If you\u0027re using an inline definition, specify it under the \u0022inlineEntitiesDefinition\u0022 skillparameter.\r\nCustom entity definition format\uFF17 NoteIndexers support specialized parsing modes for JSON and CSV files. When usingthe custom entity lookup skill, keep \u0022parsingMode\u0022 set to \u0022default\u0022. The skillexpects JSON and CSV in an unparsed state.You can provide the definition of the custom entities to look for in a Comma-SeparatedValue (CSV) file by providing the path to the file and setting it in the\u0022entitiesDefinitionUri\u0022 skill parameter.\r\nThe path should be at an https location. Thedefinition file can be up to 10 MB in size.The CSV format is simple. Each line represents a unique entity, as shown below:In this case, there are three entities that can be returned (Bill Gates, Satya Nadella,Microsoft).\r\nAliases follow after the main entity. A match on an alias is bundled under theprimary entity. For example, if the string \u0022William H. Gates\u0022 is found in a document, amatch for the \u0022Bill Gates\u0022 entity will be returned.You can provide the definition of the custom entities to look for in a JSON file as well. The JSON format gives you a bit more flexibility since it allows you to define matchingrules per term. For instance, you can specify the fuzzy matching distance (Damerau-Levenshtein distance) for each term or whether the matching should be case-sensitiveor not.Just like with CSV files, you need to provide the path to the JSON file and set it in the\u0022entitiesDefinitionUri\u0022 skill parameter.\n"
}