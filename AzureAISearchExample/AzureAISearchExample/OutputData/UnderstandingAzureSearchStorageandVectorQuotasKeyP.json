{
  "Id": "454",
  "Title": "\u0022Understanding Azure Search Storage and Vector Quotas: Key Points\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfTierPartitionsStorage(GB)Vector quota per partition(GB)Vector quota per service(GB)Basic1211S11225336S21210012144S31220036432L1121,00012144Key points about vector size limitsTierPartitionsStorage(GB)Vector quota per partition(GB)Vector quota per service(GB)L2122,00036432Key points:Storage quota is the physical storage available to the search service for all searchdata.\r\nBasic has one partition sized at 2 GB that must accommodate all of the dataon the service. S1 can have up to 12 partitions, sized at 25 GB each, for a maximumlimit of 300 GB for all search data.Vector quotas for are the vector indexes created for each vector field, and they\u0027reenforced at the partition level.\r\nOn Basic, the sum total of all vector fields can\u0027t bemore than 1 GB because Basic only has one partition. On S1, which can have up to12 partitions, the quota for vector data is 3 GB if you allocate just one partition, orup to 36 GB if you allocate all 12 partitions. For more information about partitionsand replicas, see Estimate and manage capacity.\r\nUse the REST APIs to return vector index size:GET Index Statistics returns usage for a given index.GET Service Statistics returns quota and usage for the search service all-up.For a visual, here\u0027s the sample response for a Basic search service that has the quickstartvector search index.\r\nstorageSize and vectorIndexSize are reported in bytes.JSONReturn service statistics to compare usage against available quota at the service level:JSONHow to get vector index size{    \u0022@odata.context\u0022: \u0022https://my-demo.search.windows.net/$metadata#Microsoft.Azure.Search.V2023_11_01. IndexStatistics\u0022,    \u0022documentCount\u0022: 108,    \u0022storageSize\u0022: 5853396,    \u0022vectorIndexSize\u0022: 1342756}There are three major components that affect the size of your internal vector index:Raw size of the dataOverhead from the selected algorithmOverhead from deleting or updating documents within the indexEach vector is an array of single-precision floating-point numbers, in a field of typeCollection(Edm.Single).\n"
}