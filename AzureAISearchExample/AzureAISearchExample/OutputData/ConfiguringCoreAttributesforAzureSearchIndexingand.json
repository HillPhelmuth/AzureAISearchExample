{
  "Id": "468",
  "Title": "\u0022Configuring Core Attributes for Azure Search Indexing and Retrieval\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfCore attributes likeIndex schema configuration in the wizardSearchable and Retrievable have a negligible impact on storage. Enabling filtersand using suggesters increase storage requirements.Searchable enables full-text search. Every field used in free form queries or inquery expressions must have this attribute. Inverted indexes are created foreach field that you mark as Searchable.Retrievable returns the field in search results. Every field that providescontent to search results must have this attribute. Setting this field doesn\u0027tappreciably affect index size.Filterable allows the field to be referenced in filter expressions.\r\nEvery fieldused in a $filter expression must have this attribute. Filter expressions are forexact matches. Because text strings remain intact, more storage is required toaccommodate the verbatim content.Facetable enables the field for faceted navigation. Only fields also marked asFilterable can be marked as Facetable.Sortable allows the field to be used in a sort. Every field used in an $Orderbyexpression must have this attribute.5. Do you need lexical analysis? For Edm.string fields that are Searchable, you can setan Analyzer if you want language-enhanced indexing and querying.\r\nThe default is Standard Lucene but you could choose Microsoft English if youwanted to use Microsoft\u0027s analyzer for advanced lexical processing, such asresolving irregular noun and verb forms. Only language analyzers can be specifiedin the portal. Using a custom analyzer or a non-language analyzer like Keyword,Pattern, and so forth, must be done programmatically. For more information aboutanalyzers, see Add language analyzers.6. Do you need typeahead functionality in the form of autocomplete or suggestedresults? Select the Suggester the checkbox to enable typeahead query suggestionsand autocomplete on selected fields. Suggesters add to the number of tokenizedterms in your index, and thus consume more storage.\n"
}