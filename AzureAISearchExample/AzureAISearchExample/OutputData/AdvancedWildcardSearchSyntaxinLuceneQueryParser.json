{
  "Id": "1657",
  "Title": "\u0022Advanced Wildcard Search Syntax in Lucene Query Parser\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdf* allow you to match any series of characters so /be.*/ would matchany term that starts with be such as better.You can use generally recognized syntax for multiple (*) or single (?) character wildcardsearches. Full Lucene syntax supports prefix, infix, and suffix matching.Note the Lucene query parser supports the use of these symbols with a single term, andnot a phrase.\r\nAffixtypeDescription and examplesprefixTerm fragment comes before * or ?. For example, a query expression of search=alpha*returns alphanumeric or alphabetical. Prefix matching is supported in both simple andfull syntax.suffixTerm fragment comes after * or ?, with a forward slash to delimit the construct.\r\nForexample, search=/.*numeric/ returns alphanumeric.infixTerm fragments enclose * or ?. For example, search=non*al returns non-numerical andnonsensical.You can combine operators in one expression. For example, 980?2* matches on 98072-1222 and 98052-1234, where ? matches on a single (required) character, and * matcheson characters of an arbitrary length that follow.\r\nSuffix matching requires the regular expression forward slash / delimiters. Generally,you can\u2019t use a * or ? symbol as the first character of a term, without the /. It\u0027s alsoimportant to note that the * behaves differently when used outside of regex queries. Outside of the regex forward slash / delimiter, the * is a wildcard character andmatches any series of characters much like .* in regex. As an example,search=/non.*al/ produces the same result set as search=non*al.Wildcard search\uFF17 NoteAs a rule, pattern matching is slow so you might want to explore alternativemethods, such as edge n-gram tokenization that creates tokens for sequences ofcharacters in a term.\n"
}