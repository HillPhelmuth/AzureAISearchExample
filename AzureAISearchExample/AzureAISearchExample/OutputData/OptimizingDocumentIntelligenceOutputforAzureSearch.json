{
  "Id": "243",
  "Title": "\u0022Optimizing Document Intelligence Output for AzureSearchWriter Integration\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfread.format(\u0022binaryFile\u0022)    .load(\u0022wasbs://ignite2021@mmlsparkdemo.blob.core.windows.net/form_subset/*\u0022)    .select(\u0022path\u0022)    .limit(10)    .select(udf(blob_to_url, StringType())(\u0022path\u0022).alias(\u0022url\u0022))    .cache())    display(df2)4 - Add document intelligenceThe output from this step should look similar to the next screenshot.\r\nNotice how theforms analysis is packed into a densely structured column, which is difficult to work with.The next transformation resolves this issue by parsing the column into rows andcolumns.Paste the following code into the fourth cell and run it. No modifications are required.\r\nThis code loads FormOntologyLearner, a transformer that analyzes the output ofDocument Intelligence transformers and infers a tabular data structure. The output ofAnalyzeInvoices is dynamic and varies based on the features detected in your content.Furthermore, the transformer consolidates output into a single column.\r\nBecause theoutput is dynamic and consolidated, it\u0027s difficult to use in downstream transformationsthat require more structure.FormOntologyLearner extends the utility of the AnalyzeInvoices transformer by lookingfor patterns that can be used to create a tabular data structure. Organizing the outputfrom synapse.ml.cognitive import AnalyzeInvoicesanalyzed_df = (AnalyzeInvoices()    .\r\nsetSubscriptionKey(cognitive_services_key)    .setLocation(cognitive_services_region)    .setImageUrlCol(\u0022url\u0022)    .setOutputCol(\u0022invoices\u0022)    .setErrorCol(\u0022errors\u0022)    .setConcurrency(5)    .transform(df2)    .cache())display(analyzed_df)5 - Restructure document intelligence outputinto multiple columns and rows makes the content consumable in other transformers,like AzureSearchWriter. PythonNotice how this transformation recasts the nested fields into a table, which enables thenext two transformations. This screenshot is trimmed for brevity. If you\u0027re followingalong in your own notebook, you\u0027ll have 19 columns and 26 rows.Paste the following code into the fifth cell.\nNo modifications are required, so run thecode when you\u0027re ready.This code loads Translate, a transformer that calls the Azure AI Translator service inAzure AI services. The original text, which is in English in the \u0022Description\u0022 column, ismachine-translated into various languages. All of the output is consolidated into\u0022output.\n"
}