{
  "Id": "151",
  "Title": "\u0022Implementing Azure Search with React: Suggest API and Pagination\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfget(\u0027skip\u0027) ?? 0);  const [ filters, setFilters ] = useState([]);  const [ facets, setFacets ] = useState({});  const [ isLoading, setIsLoading ] = useState(true);  let resultsPerPage = top;    useEffect(() =\u003E {    setIsLoading(true);    setSkip((currentPage-1) * top);    const body = {      q: q,      top: top,      skip: skip,      filters: filters    };    axios.\r\npost( \u0027/api/search\u0027, body)      .then(response =\u003E {            console.log(JSON.stringify(response.data))            setResults(response.data.results);            setFacets(response.data.facets);            setResultCount(response.data.count);            setIsLoading(false);        } )        .catch(error =\u003E {            console.\r\nlog(error);            setIsLoading(false);        });      }, [q, top, skip, filters, currentPage]);  // pushing the new search term to history when q is updated  // allows the back button to work as expected when coming back from the details page  useEffect(() =\u003E {    navigate(\u0027/search?\r\nq=\u0027 \u002B q);      setCurrentPage(1);    setFilters([]);    // eslint-disable-next-line react-hooks/exhaustive-deps  }, [q]);The Suggest API takes a search term while a user is typing and suggests search termssuch as book titles and authors across the documents in the search index, returning asmall list of matches.\r\nThe search suggester, sg, is defined in the schema file used during bulk upload.C#  let postSearchHandler = (searchTerm) =\u003E {    //console. log(searchTerm);    setQ(searchTerm);  }  var body;  if (isLoading) {    body = (      \u003Cdiv className=\u0022col-md-9\u0022\u003E        \u003CCircularProgress /\u003E      \u003C/div\u003E);\n} else {    body = (      \u003Cdiv className=\u0022col-md-9\u0022\u003E        \u003CResults documents={results} top={top} skip={skip} count={resultCount}\u003E\u003C/Results\u003E        \u003CPager className=\u0022pager-style\u0022 currentPage={currentPage} resultCount={resultCount} resultsPerPage={resultsPerPage} setCurrentPage={setCurrentPage}\u003E\u003C/Pager\u003E      \u003C/div\u003E    )  }\n"
}