{
  "Id": "1658",
  "Title": "\u0022Optimizing Pattern Matching and Wildcard Search in Azure Cognitive Search\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfOutside of the regex forward slash / delimiter, the * is a wildcard character andmatches any series of characters much like .* in regex. As an example,search=/non.*al/ produces the same result set as search=non*al.Wildcard search\uFF17 NoteAs a rule, pattern matching is slow so you might want to explore alternativemethods, such as edge n-gram tokenization that creates tokens for sequences ofcharacters in a term.\r\nWith n-gram tokenization, the index will be larger, but queriesmight execute faster, depending on the pattern construction and the length ofDuring query parsing, queries that are formulated as prefix, suffix, wildcard, or regularexpressions are passed as-is to the query tree, bypassing lexical analysis.\r\nMatches willonly be found if the index contains the strings in the format your query specifies. Inmost cases, you need an analyzer during indexing that preserves string integrity so thatpartial term and pattern matching succeeds. For more information, see Partial termsearch in Azure Cognitive Search queries.\r\nConsider a situation where you may want the search query terminal* to return resultsthat contain terms such as terminate, termination, and terminates.If you were to use the en.lucene (English Lucene) analyzer, it would apply aggressivestemming of each term. For example, terminate, termination, terminates will all betokenized down to the token termi in your index.\r\nOn the other side, terms in queriesusing wildcards or fuzzy search aren\u0027t analyzed at all, so there would be no results thatwould match the terminat* query.On the other side, the Microsoft analyzers (in this case, the en.microsoft analyzer) are abit more advanced and use lemmatization instead of stemming. This means that allgenerated tokens should be valid English words. For example, terminate, terminates,and termination will mostly stay whole in the index, and would be a preferable choicefor scenarios that depend a lot on wildcards and fuzzy search.Azure Cognitive Search uses frequency-based scoring (BM25) for text queries.\n"
}