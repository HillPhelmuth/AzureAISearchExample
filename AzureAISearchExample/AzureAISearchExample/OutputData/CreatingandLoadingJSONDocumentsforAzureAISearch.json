{
  "Id": "32",
  "Title": "\u0022Creating and Loading JSON Documents for Azure AI Search\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfC#         public string StreetAddress { get; set; }         [SearchableField(IsFilterable = true, IsSortable = true, IsFacetable = true)]         public string City { get; set; }         [SearchableField(IsFilterable = true, IsSortable = true, IsFacetable = true)]         public string StateProvince { get; set; }         [SearchableField(IsFilterable = true, IsSortable = true, IsFacetable = true)]         public string PostalCode { get;\r\nset; }         [SearchableField(IsFilterable = true, IsSortable = true, IsFacetable = true)]         public string Country { get; set; }     } } // Create hotels-quickstart index private static void CreateIndex(string indexName, SearchIndexClient adminClient) {     FieldBuilder fieldBuilder = new FieldBuilder();     var searchFields = fieldBuilder.\r\nBuild(typeof(Hotel));     var definition = new SearchIndex(indexName, searchFields);     var suggester = new SearchSuggester(\u0022sg\u0022, new[] { \u0022HotelName\u0022, \u0022Category\u0022, \u0022Address/City\u0022, \u0022Address/StateProvince\u0022 });     definition.Suggesters.Add(suggester);     adminClient.CreateOrUpdateIndex(definition); }Load documentsAzure AI Search searches over content stored in the service. In this step, you\u0027ll loadJSON documents that conform to the hotel index you just created.In Azure AI Search, search documents are data structures that are both inputs toindexing and outputs from queries. As obtained from an external data source,document inputs might be rows in a database, blobs in Blob storage, or JSONdocuments on disk. In this example, we\u0027re taking a shortcut and embedding JSONdocuments for four hotels in the code itself.When uploading documents, you must use an IndexDocumentsBatch object.\n"
}