{
  "Id": "741",
  "Title": "\u0022Managing Complex Fields in Azure Search: Best Practices and Limitations\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfAll of the reindexing rules that apply to fields in general still apply to complex fields.Restating a few of the main rules here, adding a field to a complex type doesn\u0027t requirean index rebuild, but most modifications do.You can add new sub-fields to a complex field at any time without the need for an indexrebuild. For example, adding \u0022ZipCode\u0022 to Address or \u0022Amenities\u0022 to Rooms is allowed,just like adding a top-level field to an index. Existing documents have a null value fornew fields until you explicitly populate those fields by updating your data.\r\nCreate complex fieldsAzure portalUpdate complex fieldsStructural updates to the definitionNotice that within a complex type, each sub-field has a type and may have attributes,just as top-level fields doUpdating existing documents in an index with the upload action works the same way forcomplex and simple fields -- all fields are replaced. However, merge (or mergeOrUploadwhen applied to an existing document) doesn\u0027t work the same across all fields.\r\nSpecifically, merge doesn\u0027t support merging elements within a collection. This limitationexists for collections of primitive types and complex collections. To update a collection,you\u0027ll need to retrieve the full collection value, make changes, and then include the newcollection in the Index API request.Free-form search expressions work as expected with complex types.\r\nIf any searchablefield or sub-field anywhere in a document matches, then the document itself is a match.Queries get more nuanced when you have multiple terms and operators, and someterms have field names specified, as is possible with the Lucene syntax. For example, thisquery attempts to match two terms, \u0022Portland\u0022 and \u0022OR\u0022, against two sub-fields of theAddress field:search=Address/City:Portland AND Address/State:ORQueries like this are uncorrelated for full-text search, unlike filters. In filters, queries oversub-fields of a complex collection are correlated using range variables in any or all. TheLucene query above returns documents containing both \u0022Portland, Maine\u0022 and\u0022Portland, Oregon\u0022, along with other cities in Oregon.\n"
}