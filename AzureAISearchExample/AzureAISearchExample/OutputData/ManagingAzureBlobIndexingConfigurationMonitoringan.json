{
  "Id": "906",
  "Title": "\u0022Managing Azure Blob Indexing: Configuration, Monitoring, and Troubleshooting\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfIn blob indexing, you can often omit field mappings because the indexer has built-in support for mapping the \u0022content\u0022 and metadata properties to similarly namedand typed fields in an index. For metadata properties, the indexer will automaticallyreplace hyphens - with underscores in the search index.7. See Create an indexer for more information about other properties. For the full listof parameter descriptions, see Blob configuration parameters in the REST API.An indexer runs automatically when it\u0027s created. You can prevent this by setting\u0022disabled\u0022 to true. To control indexer execution, run an indexer on demand or put it on aschedule.\r\nTo monitor the indexer status and execution history, send a Get Indexer Status request:HTTPThe response includes status and the number of items processed. It should look similarto the following example:JSONCheck indexer statusGET https://myservice.search.windows.\r\nnet/indexers/myindexer/status?api-version=2020-06-30   Content-Type: application/json     api-key: [admin key]     {         \u0022status\u0022:\u0022running\u0022,         \u0022lastResult\u0022: {             \u0022status\u0022:\u0022success\u0022,             \u0022errorMessage\u0022:null,             \u0022startTime\u0022:\u00222022-02-21T00:23:24.957Z\u0022,             \u0022endTime\u0022:\u00222022-02-21T00:36:47. 752Z\u0022,             \u0022errors\u0022:[],             \u0022itemsProcessed\u0022:1599501, Execution history contains up to 50 of the most recently completed executions, whichare sorted in the reverse chronological order so that the latest execution comes first.Errors that commonly occur during indexing include unsupported content types, missingcontent, or oversized blobs.By default, the blob indexer stops as soon as it encounters a blob with an unsupportedcontent type (for example, an audio file). You could use the\u0022excludedFileNameExtensions\u0022 parameter to skip certain content types. However, youmight want to indexing to proceed even if errors occur, and then debug individualdocuments later.\n"
}