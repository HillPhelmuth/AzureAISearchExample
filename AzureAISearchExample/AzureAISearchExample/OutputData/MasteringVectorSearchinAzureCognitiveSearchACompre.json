{
  "Id": "1501",
  "Title": "\u0022Mastering Vector Search in Azure Cognitive Search: A Comprehensive Guide\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfTo learn how to index vector fields and perform vector search, you can refer to thesample. This sample provides detailed guidance on indexing vector fields anddemonstrates how to perform vector search.Semantic SearchVector SearchAdditionally, for more comprehensive information about Vector Search, including itsconcepts and usage, you can refer to the documentation. The documentation providesin-depth explanations and guidance on leveraging the power of Vector Search in AzureCognitive Search.The Azure.Search.Documents client library (v11) is a brand new offering for .NETdevelopers who want to use search technology in their applications.\r\nThere is an older, fullyfeatured Microsoft.Azure.Search client library (v10) with many similar looking APIs, soplease be careful to avoid confusion when exploring online resources. A good rule ofthumb is to check for the namespace using Azure.Search.Documents; when you\u0027re lookingfor us.We guarantee that all client instance methods are thread-safe and independent of eachother (guideline).\r\nThis ensures that the recommendation of reusing client instances isalways safe, even across threads.Client options | Accessing the response | Long-running operations | Handlingfailures | Diagnostics | Mocking | Client lifetimeThe following examples all use a simple Hotel data set that you can import into yourown index from the Azure portal.\r\nThese are just a few of the basics - please check outour Samples for much more.QueryingUse C# types for search resultsUse SearchDocument like a dictionary for search resultsSearchOptionsCreating an indexAdding documents to your indexRetrieving a specific document from your indexAsync APIsThread safetyAdditional conceptsExamplesAdvanced authenticationCreate a client that can authenticate in a national cloudLet\u0027s start by importing our namespaces.C#We\u0027ll then create a SearchClient to access our hotels search index.C#There are two ways to interact with the data returned from a search query. Let\u0027s explorethem with a search for a \u0022luxury\u0022 hotel.We can decorate our own C# types with attributes from System.Text.Json:C#Queryingusing Azure.Search.Documents;using Azure.Search.Documents.Indexes;using Azure.Core.GeoJson;// Get the service endpoint and API key from the environmentUri endpoint = new Uri(Environment.GetEnvironmentVariable(\u0022SEARCH_ENDPOINT\u0022));string key = Environment.\n"
}