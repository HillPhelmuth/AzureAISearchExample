{
  "Id": "965",
  "Title": "\u0022Configuring Azure Cosmos DB Indexer for Azure AI Search\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfString\u0022,         \u0022searchable\u0022: true,         \u0022filterable\u0022: false,         \u0022retrievable\u0022: true,         \u0022sortable\u0022: false,         \u0022facetable\u0022: false,         \u0022key\u0022: false,         \u0022indexAnalyzer\u0022: null,         \u0022searchAnalyzer\u0022: null,         \u0022analyzer\u0022: \u0022standard.lucene\u0022,         \u0022synonymMaps\u0022: []2. Create a document key field (\u0022key\u0022: true).\r\nFor partitioned collections, the defaultdocument key is the Azure Cosmos DB _rid property, which Azure AI Searchautomatically renames to rid because field names can\u2019t start with an underscorecharacter. Also, Azure Cosmos DB _rid values contain characters that are invalid inAzure AI Search keys. For this reason, the _rid values are Base64 encoded.3.\r\nCreate additional fields for more searchable content. See Create an index fordetails.JSON data typeAzure AI Search field typesBoolEdm.Boolean, Edm.StringNumbers that look like integersEdm.Int32, Edm.Int64,Edm.StringNumbers that look like floating-pointsEdm.Double, Edm.StringStringEdm.StringArrays of primitive types such as [\u0022a\u0022, \u0022b\u0022, \u0022c\u0022]Collection(Edm.\r\nString)Strings that look like datesEdm.DateTimeOffset,Edm.StringGeoJSON objects such as { \u0022type\u0022: \u0022Point\u0022, \u0022coordinates\u0022: [long,lat] }Edm.GeographyPointOther JSON objectsN/AOnce the index and data source have been created, you\u0027re ready to create the indexer.Indexer configuration specifies the inputs, parameters, and properties controlling runtime behaviors.1. Create or update an indexer by giving it a name and referencing the data sourceand target index:    }]  }Mapping data typesConfigure and run the Azure Cosmos DBindexerHTTP2. Specify field mappings if there are differences in field name or type, or if you needmultiple versions of a source field in the search index.3. See Create an indexer for more information about other properties.An indexer runs automatically when it\u0027s created. You can prevent this by setting\u0022disabled\u0022 to true. To control indexer execution, run an indexer on demand or put it on aschedule.To monitor the indexer status and execution history, send a Get Indexer Status request:HTTPThe response includes status and the number of items processed. It should look similarto the following example:JSONPOST https://[service name].search.windows.\n"
}