{
  "Id": "1316",
  "Title": "\u0022Analyzing Azure Search Service Performance: Insights and Optimization Strategies\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfFrom this insight, we can see that it took about 3 minutes for the search service tobecome busy enough for indexing to affect query latency. We can also see that afterindexing completed, it took another 3 minutes for the search service to complete all thework from the newly indexed content, and for query latency to resolve.\r\nKustolet intervalsize = 1m; let _startTime = datetime(\u00272021-02-23 17:40\u0027);let _endTime = datetime(\u00272021-02-23 18:00\u0027);AzureDiagnostics| where TimeGenerated between([\u0027_startTime\u0027] .. [\u0027_endTime\u0027]) // Time range filtering| summarize QueriesPerMinute=bin(countif(OperationName in (\u0022Query.Search\u0022, \u0022Query.Suggest\u0022, \u0022Query.Lookup\u0022, \u0022Query.\r\nAutocomplete\u0022))/(intervalsize/1m), 0.01)  by bin(TimeGenerated, intervalsize)| render timechartIndexing Operations Per Minute (OPM)It isn\u0027t unusual to see periodic spikes in query or indexing latency. Spikes might occur inresponse to indexing or high query rates, but could also occur during merge operations.Search indexes are stored in chunks - or shards.\r\nPeriodically, the system merges smallershards into large shards, which can help optimize service performance. This mergeprocess also cleans up documents that have previously been marked for deletion fromthe index, resulting in the recovery of storage space.Merging shards is fast, but also resource intensive and thus has the potential to degradeservice performance. If you notice short bursts of query latency, and those burstscoincide with recent changes to indexed content, you can assume the latency is due toshard merge operations.Review these articles related to analyzing service performance. Performance tipsChoose a service tierlet intervalsize = 1m; let _startTime = datetime(\u00272021-02-23 17:40\u0027);let _endTime = datetime(\u00272021-02-23 18:00\u0027);AzureDiagnostics| where TimeGenerated between([\u0027_startTime\u0027] .. [\u0027_endTime\u0027]) // Time range filtering| summarize IndexingOperationsPerSecond=bin(countif(OperationName == \u0022Indexing.Index\u0022)/ (intervalsize/1m), 0.\n"
}