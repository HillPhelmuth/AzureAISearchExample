{
  "Id": "157",
  "Title": "\u0022Implementing Azure AI Search in React App: A Detailed Guide\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfAnonymous, \u0022get\u0022, \u0022post\u0022)] HttpRequestData req,             FunctionContext executionContext)        {            // Get Document Id            var query = System.Web.HttpUtility.ParseQueryString(req.Url.Query);            string documentId = query[\u0022id\u0022].ToString();            // Azure AI Search             Uri serviceEndpoint = new($\u0022https://{searchServiceName}.search.windows.net/\u0022);            SearchClient searchClient = new(                serviceEndpoint,                searchIndexName,                new AzureKeyCredential(searchApiKey)            );            var getDocumentResponse = await searchClient.\r\nGetDocumentAsync\u003CSearchDocument\u003E(documentId);            // Data to return             var output = new LookupOutput            {                Document = getDocumentResponse.Value            };            var response = req.CreateResponse(HttpStatusCode.Found);            response.Headers.Add(\u0022Content-Type\u0022, \u0022application/json; This function API is called in the React app at \\client\\src\\pages\\Details\\Detail.js aspart of component initialization:JavaScriptcharset=utf-8\u0022);            // Serialize data            var serializer = new JsonObjectSerializer(                new JsonSerializerOptions(JsonSerializerDefaults.Web));            await response.\r\nWriteAsJsonAsync(output, serializer);            return response;        }    }}Client: Get specific documentimport React, { useState, useEffect } from \u0022react\u0022;import { useParams } from \u0027react-router-dom\u0027;import Rating from \u0027@mui/material/Rating\u0027;import CircularProgress from \u0027@mui/material/CircularProgress\u0027;import axios from \u0027axios\u0027;import \u0022.\r\n/Details.css\u0022;export default function Details() {  let { id } = useParams();  const [document, setDocument] = useState({});  const [selectedTab, setTab] = useState(0);  const [isLoading, setIsLoading] = useState(true);  useEffect(() =\u003E {    setIsLoading(true);    // console.log(id);    axios. get(\u0027/api/lookup?id=\u0027 \u002B id)      .then(response =\u003E {        console.log(JSON.stringify(response.data))        const doc = response.data.document;        setDocument(doc);        setIsLoading(false);      })      .catch(error =\u003E {        console.\n"
}