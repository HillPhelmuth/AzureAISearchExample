{
  "Id": "1276",
  "Title": "\u0022Implementing Custom Analyzers and Field Definitions in Azure Search\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfJSON{ \u0022fields\u0022: [   {   \u0022name\u0022: \u0022accountNumber\u0022,   \u0022analyzer\u0022:\u0022myCustomAnalyzer\u0022,   \u0022type\u0022: \u0022Edm.String\u0022,  \u0022searchable\u0022: true,   \u0022filterable\u0022: true,   \u0022retrievable\u0022: true,   \u0022sortable\u0022: false,   \u0022facetable\u0022: false   } ], \u0022analyzers\u0022: [   {   \u0022@odata.type\u0022:\u0022#Microsoft.Azure.Search.\r\nCustomAnalyzer\u0022,   \u0022name\u0022:\u0022myCustomAnalyzer\u0022,   \u0022charFilters\u0022:[],   \u0022tokenizer\u0022:\u0022keyword_v2\u0022,   \u0022tokenFilters\u0022:[\u0022lowercase\u0022]   } ], \u0022tokenizers\u0022:[], \u0022charFilters\u0022: [], \u0022tokenFilters\u0022: [] } \uFF17 NoteThe keyword_v2 tokenizer and lowercase token filter are known to the system andusing their default configurations, which is why you can reference them by namewithout having to define them first.\r\nOnce you\u0027ve defined an index with analyzers and field definitions that support yourscenario, load documents that have representative strings so that you can test partialstring queries.The previous sections explained the logic. This section steps through each API youshould call when testing your solution.\r\nAs previously noted, if you use an interactive webtest tool such as Postman, you can step through these tasks quickly.Delete Index removes an existing index of the same name so that you can recreateit.Create Index creates the index structure on your search service, including analyzerdefinitions and fields with an analyzer specification.Load Documents imports documents having the same structure as your index, aswell as searchable content. After this step, your index is ready to query or test.Test Analyzer was introduced in Set an analyzer. Test some of the strings in yourindex using various analyzers to understand how terms are tokenized. Search Documents explains how to construct a query request, using either simplesyntax or full Lucene syntax for wildcard and regular expressions.For partial term queries, such as querying \u00223-6214\u0022 to find a match on \u0022\u002B1 (425)703-6214\u0022, you can use the simple syntax: search=3-6214\u0026queryType=simple.\n"
}