{
  "Id": "28",
  "Title": "\u0022Creating and Querying Search Index with Azure Search Documents\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfDocuments client library tocreate, load, and query a search index. Alternatively, you can download the sourcecode to start with a finished project or follow these steps to create your own.1. Start Visual Studio and create a new project for a console app.2. In Tools \u003E NuGet Package Manager, select Manage NuGet Packages forSolution....3. Select Browse.4.\r\nSearch for Azure.Search.Documents package and select version 11.0 or later.5. Select Install on the right to add the assembly to your project and solution.Create, load, and query an index.NETSet up your environmentCreate a search client1. In Program.cs, change the namespace to AzureSearch.SDK.Quickstart.v11 andthen add the following using directives.C#2.\r\nCreate two clients: SearchIndexClient creates the index, and SearchClient loadsand queries an existing index. Both need the service endpoint and an adminAPI key for authentication with create/delete rights.Because the code builds out the URI for you, specify just the search servicename in the \u0022serviceName\u0022 property.\r\nC#This quickstart builds a Hotels index that you\u0027ll load with hotel data and executequeries against. In this step, define the fields in the index. Each field definitionincludes a name, data type, and attributes that determine how the field is used.using Azure;using Azure.Search.Documents;using Azure.Search.Documents.Indexes;using Azure.Search.Documents.Indexes.\r\nModels;using Azure.Search.Documents.Models; static void Main(string[] args) {     string serviceName = \u0022\u003Cyour-search-service-name\u003E\u0022;     string apiKey = \u0022\u003Cyour-search-service-admin-api-key\u003E\u0022;     string indexName = \u0022hotels-quickstart\u0022;     // Create a SearchIndexClient to send create/delete index commands     Uri serviceEndpoint = new Uri($\u0022https://{serviceName}. search.windows.net/\u0022);     AzureKeyCredential credential = new AzureKeyCredential(apiKey);     SearchIndexClient adminClient = new SearchIndexClient(serviceEndpoint, credential);     // Create a SearchClient to load and query documents     SearchClient srchclient = new SearchClient(serviceEndpoint, indexName, credential);     .\n"
}