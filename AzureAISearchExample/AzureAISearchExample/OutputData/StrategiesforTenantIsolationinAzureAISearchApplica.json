{
  "Id": "626",
  "Title": "\u0022Strategies for Tenant Isolation in Azure AI Search Applications\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfThis articlediscusses tenant isolation strategies for multitenant applications built with Azure AISearch.As a search-as-a-service solution, Azure AI Search allows developers to add rich searchexperiences to applications without managing any infrastructure or becoming an expertin information retrieval. Data is uploaded to the service and then stored in the cloud.Using simple requests to the Azure AI Search API, the data can then be modified andsearched.Before discussing design patterns, it\u0027s important to understand a few basic concepts.When using Azure AI Search, one subscribes to a search service.\r\nAs data is uploaded toAzure AI Search, it\u0027s stored in an index within the search service. There can be a numberof indexes within a single service. To use the familiar concepts of databases, the searchservice can be likened to a database while the indexes within a service can be likened totables within a database.Each index within a search service has its own schema, which is defined by a number ofcustomizable fields. Data is added to an Azure AI Search index in the form of individualdocuments. Each document must be uploaded to a particular index and must fit thatindex\u0027s schema.\r\nWhen searching data using Azure AI Search, the full-text search queriesare issued against a particular index. To compare these concepts to those of a database,fields can be likened to columns in a table and documents can be likened to rows.Any Azure AI Search service in the Standard pricing tier can scale in two dimensions:storage and availability. Azure AI Search conceptsSearch services, indexes, fields, and documentsScalabilityPartitions can be added to increase the storage of a search service.Replicas can be added to a service to increase the throughput of requests that asearch service can handle.Adding and removing partitions and replicas at will allow the capacity of the searchservice to grow with the amount of data and traffic the application demands.\n"
}