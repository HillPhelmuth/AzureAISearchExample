{
  "Id": "999",
  "Title": "\u0022Limitations and Considerations for Azure Search Document Indexing\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfDOCX/DOC/DOCM, XLSX/XLS/XLSM, PPTX/PPT/PPTM, MSG (Outlook emails), XML (both 2003 and 2006WORD XML)Open Document formats: ODT, ODS, ODPPDFPlain text files (see also Indexing plain text)RTFXMLZIPHere are the limitations of this feature:Indexing SharePoint Lists isn\u0027t supported.\r\nIndexing SharePoint .ASPX site content isn\u0027t supported.\uFF09 ImportantSharePoint indexer support is in public preview. It\u0027s offered \u0022as-is\u0022, under Supplemental Terms of Use. Preview features aren\u0027trecommended for production workloads and aren\u0027t guaranteed to become generally available.Be sure to visit the known limitations section before you start.To use this preview, request access. Access is automatically approved after the form is submitted.\r\nAfter access is enabled, use apreview REST API (2023-10-01-Preview or later) to index your content.FunctionalityPrerequisitesSupported document formatsLimitations and considerationsOneNote notebook files aren\u0027t supported.Private endpoint isn\u0027t supported.Renaming a SharePoint folder doesn\u0027t trigger incremental indexing. A renamed folder is treated as new content.\r\nSharePoint supports a granular authorization model that determines per-user access at the document level. The indexer doesn\u0027t pullthese permissions into the index, and Azure AI Search doesn\u0027t support document-level authorization. When a document is indexedfrom SharePoint into a search service, the content is available to anyone who has read access to the index. If you require document-level permissions, you should consider security filters to trim results and automate copying the permissions at a file level to a field inthe index.(Known issue) Support for delegated permissions is currently broken. For now, use app-based permissions as a workaround. However,once user-delegated permissions do become operational, a new behavior enforces token expiration every 75 minutes, per the librariesused to implement delegated permissions. An expired token requires manual indexing using Run Indexer (preview). For this reason,you might want app-based permissions as a permanent solution.\n"
}