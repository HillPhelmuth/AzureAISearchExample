{
  "Id": "301",
  "Title": "\u0022Creating and Managing Field Mappings in Azure Search Indexer\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfSo far you have created a data source, a skillset, and an index. These three componentsbecome part of an indexer that pulls each piece together into a single multi-phasedoperation. To tie these together in an indexer, you must define field mappings.The fieldMappings are processed before the skillset, mapping source fields fromthe data source to target fields in an index.\r\nIf field names and types are the sameat both ends, no mapping is required.The outputFieldMappings are processed after the skillset, referencingsourceFieldNames that don\u0027t exist until document cracking or enrichment createsthem. The targetFieldName is a field in an index.In addition to hooking up inputs to outputs, you can also use field mappings to flattendata structures. For more information, see How to map enriched fields to a searchableindex.C#using Index = Azure.Search.Documents.Indexes.\r\nModels;Step 4: Create and run an indexerprivate static SearchIndexer CreateDemoIndexer(SearchIndexerClient indexerClient, SearchIndexerDataSourceConnection dataSource, SearchIndexerSkillset skillSet, SearchIndex index){    IndexingParameters indexingParameters = new IndexingParameters()    {        MaxFailedItems = -1,        MaxFailedItemsPerBatch = -1,    };    indexingParameters.Configuration.\r\nAdd(\u0022dataToExtract\u0022, \u0022contentAndMetadata\u0022);    indexingParameters.Configuration.Add(\u0022imageAction\u0022, \u0022generateNormalizedImages\u0022);    SearchIndexer indexer = new SearchIndexer(\u0022demoindexer\u0022, dataSource.Name, index.Name)    {        Description = \u0022Demo Indexer\u0022,        SkillsetName = skillSet.Name,        Parameters = indexingParameters    };    FieldMappingFunction mappingFunction = new FieldMappingFunction(\u0022base64Encode\u0022);    mappingFunction. Parameters.Add(\u0022useHttpServerUtilityUrlTokenEncode\u0022, true);    indexer.FieldMappings.Add(new FieldMapping(\u0022metadata_storage_path\u0022)    {        TargetFieldName = \u0022id\u0022,        MappingFunction = mappingFunction    });    indexer.FieldMappings.Add(new FieldMapping(\u0022content\u0022)    {        TargetFieldName = \u0022content\u0022    });    indexer.\n"
}