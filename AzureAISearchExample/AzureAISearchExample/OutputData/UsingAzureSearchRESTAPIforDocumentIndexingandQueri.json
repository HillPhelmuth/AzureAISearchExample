{
  "Id": "106",
  "Title": "\u0022Using Azure Search REST API for Document Indexing and Queries\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdf60,    \u0022Address\u0022:         {        \u0022StreetAddress\u0022: \u00227400 San Pedro Ave\u0022,        \u0022City\u0022: \u0022San Antonio\u0022,        \u0022StateProvince\u0022: \u0022TX\u0022,        \u0022PostalCode\u0022: \u002278216\u0022,        \u0022Country\u0022: \u0022USA\u0022        }    }  ]}\uEA80 TipFor selected data sources, you can create an indexer, which simplifies and reducesthe amount of code required for indexing.\r\nNow that an index and document set are loaded, you can issue queries against themusing Search Documents REST API.The URL is extended to include a query expression, specified using the search operator.1. Set the verb to GET.2. Copy in this URL https://{{service-name}}.search.windows.\r\nnet/indexes/hotels-quickstart/docs?search=*\u0026$count=true\u0026api-version=2020-06-30.3. Select Send.This query is an empty and returns a count of the documents in the search results. Therequest and response should look similar to the following screenshot for Postman afteryou select Send. The status code should be 200.\r\nTry a few other query examples to get a feel for the syntax. You can do a string search,verbatim $filter queries, limit the results set, scope the search to specific fields, andmore.3 - Search an index# Query example 1 - Search on restaurant and wifi# Return only the HotelName, Description, and Tags fieldshttps://{{service-name}}. search.windows.net/indexes/hotels-quickstart/docs?search=restaurant wifi\u0026$count=true\u0026$select=HotelName,Description,Tags\u0026api-version=2020-06-30# Query example 2 - Apply a filter to the index to find hotels rated 4 or highter# Returns the HotelName and Rating. Two documents matchhttps://{service-name}}.search.windows.\n"
}