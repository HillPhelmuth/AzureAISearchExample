{
  "Id": "529",
  "Title": "\u0022Mastering Index Projections in Azure AI Search: A Comprehensive Guide\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfThecomposition of your projection is determined through shapes.5. If you\u0027re adding projections to an existing skillset, update the skillset and run theindexer.6. Check your results in Azure Storage. On subsequent runs, avoid naming collisionsby deleting objects in Azure Storage or changing project names in the skillset.7. If you are using Table projections check Understanding the Table Service datamodel and Scalability and performance targets for Table storage to make sure yourdata requirements are within Table storage documented limits.Checklist for getting startedReview syntax and examples for each projection type.\r\nNext stepsDefine projections in a knowledge storeIndex projections in Azure AI SearchArticle\u202211/15/2023Index projections are a component of a skillset definition that defines the shape of asecondary index, supporting a one-to-many index pattern, where content from anenrichment pipeline can target multiple indexes.Index projections take AI-enriched content generated by an enrichment pipeline andindex it into a secondary index (different from the one that an indexer targets bydefault) on your search service.\r\nIndex projections also allow you to reshape the databefore indexing it, in a way that uniquely allows you to separate an array of enricheditems into multiple search documents in the target index, otherwise known as \u0022one-to-many\u0022 indexing. \u0022One-to-many\u0022 indexing is useful for data chunking scenarios, whereyou might want a primary index for unchunked content and a secondary index forchunked.\r\nIf you\u0027ve used cognitive skills in the past, you already know that skillsets create enrichedcontent. Skillsets move a document through a sequence of enrichments that invokeatomic transformations, such as recognizing entities or translating text. By default, onedocument processed within a skillset maps to a single document in the search index. This means that if you perform chunking of an input text and then perform enrichmentson each chunk, the result in the index when mapped via outputFieldMappings is anarray of the generated enrichments. With index projections, you define a context atwhich to map each chunk of enriched data to its own search document. This allows youto apply a one-to-many mapping of a document\u0027s enriched data to the search index.\n"
}