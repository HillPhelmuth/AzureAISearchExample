{
  "Id": "1646",
  "Title": "\u0022Advanced Search Syntax and Operators for Efficient Querying\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfCharacterExampleUsage*lingui* will match on\u0022linguistic\u0022 or \u0022linguini\u0022The asterisk (*) represents one or more characters ofarbitrary length, ignoring case.Similar to filters, a prefix query looks for an exact match. As such, there\u0027s no relevancescoring (all results receive a search score of 1.0). Be aware that prefix queries can beslow, especially if the index is large and the prefix consists of a small number ofcharacters.\r\nAn alternative methodology, such as edge n-gram tokenization, mightperform faster. Terms using prefix search can\u0027t be longer than 1000 characters.Simple syntax supports prefix matching only. For suffix or infix matching against the endor middle of a term, use the full Lucene syntax for wildcard search.\r\nIn the simple syntax, search operators include these characters: \u002B | \u0022 ( ) \u0027 \\If any of these characters are part of a token in the index, escape it by prefixing it with asingle backslash (\\) in the query. For example, suppose you used a custom analyzer forwhole term tokenization, and your index contains the string \u0022Luxury\u002BHotel\u0022.\r\nTo get anexact match on this token, insert an escape character:\u00A0search=luxury\\\u002Bhotel.To make things simple for the more typical cases, there are two exceptions to this rulewhere escaping isn\u0027t needed:The NOT operator - only needs to be escaped if it\u0027s the first character after awhitespace. If the - appears in the middle (for example, in 3352CDD0-EF30-4A2E-A512-3B30AF40F3FD), you can skip escaping.The suffix operator * only needs to be escaped if it\u0027s the last character before awhitespace. If the * appears in the middle (for example, in 4*4=16), no escaping isneeded.\n"
}