{
  "Id": "1647",
  "Title": "\u0022Managing Special Characters and Search Operators in Azure Search\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfIf the - appears in the middle (for example, in 3352CDD0-EF30-4A2E-A512-3B30AF40F3FD), you can skip escaping.The suffix operator * only needs to be escaped if it\u0027s the last character before awhitespace. If the * appears in the middle (for example, in 4*4=16), no escaping isneeded.\r\nEscaping search operators\uFF17 NoteBy default, the standard analyzer will delete and break words on hyphens,whitespace, ampersands, and other characters during lexical analysis. If you requirespecial characters to remain in the query string, you might need an analyzer thatpreserves them in the index. Some choices include Microsoft natural languageEnsure all unsafe and reserved characters are encoded in a URL.\r\nFor example, \u0027#\u0027 is anunsafe character because it\u0027s a fragment/anchor identifier in a URL. The character mustbe encoded to %23 if used in a URL. \u0027\u0026\u0027 and \u0027=\u0027 are examples of reserved characters asthey delimit parameters and specify values in Azure Cognitive Search. For moreinformation, see RFC1738: Uniform Resource Locators (URL).\r\nUnsafe characters are \u0022 \u0060 \u003C \u003E # % { } | \\ ^ ~ [ ]. Reserved characters are ; / ? : @= \u002B \u0026.Special characters can range from currency symbols like \u0027$\u0027 or \u0027\u20AC\u0027, to emojis. Manyanalyzers, including the default standard analyzer, will exclude special characters duringindexing, which means they won\u0027t be represented in your index. If you need special character representation, you can assign an analyzer that preservesthem:The \u0022whitespace\u0022 analyzer considers any character sequence separated by whitespaces as tokens (so the \u0027\u2764\u0027 emoji would be considered a token).A language analyzer, such as the Microsoft English analyzer (\u0022en.microsoft\u0022), wouldtake the \u0027$\u0027 or \u0027\u20AC\u0027 string as a token.For confirmation, you can test an analyzer to see what tokens are generated for a givenstring. As you might expect, you might not get full tokenization from a single analyzer.\n"
}