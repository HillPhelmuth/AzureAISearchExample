{
  "Id": "110",
  "Title": "\u0022Setting Up and Connecting to Azure AI Search Service\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfReplace the admin API key (YOUR-ADMIN-API-KEY) with a key that is valid for yoursearch service. You only have to set this header once for the duration of thesession, but you will add it to every request.PowerShell2. Create a $url object that specifies the service\u0027s indexes collection.\r\nReplace theservice name (YOUR-SEARCH-SERVICE-NAME) with a valid search service.PowerShellConnect to Azure AI Search$headers = @{\u0027api-key\u0027 = \u0027\u003CYOUR-ADMIN-API-KEY\u003E\u0027\u0027Content-Type\u0027 = \u0027application/json\u0027 \u0027Accept\u0027 = \u0027application/json\u0027 }$url = \u0022https://\u003CYOUR-SEARCH-SERVICE-NAME\u003E.search.windows.net/indexes?api-version=2020-06-30\u0026\u0060$select=name\u00223.\r\nRun Invoke-RestMethod to send a GET request to the service and verify theconnection. Add ConvertTo-Json so that you can view the responses sent backfrom the service.PowerShellIf the service is empty and has no indexes, results are similar to the followingexample. Otherwise, you\u0027ll see a JSON representation of index definitions.\r\nUnless you are using the portal, an index must exist on the service before you can loaddata. This step defines the index and pushes it to the service. The Create Index REST APIis used for this step.Required elements of an index include a name and a fields collection. The fieldscollection defines the structure of a document. Each field has a name, type, andattributes that determine how it\u0027s used (for example, whether it is full-text searchable,filterable, or retrievable in search results). Within an index, one of the fields of typeEdm.String must be designated as the key for document identity.This index is named \u0022hotels-quickstart\u0022 and has the field definitions you see below.\n"
}