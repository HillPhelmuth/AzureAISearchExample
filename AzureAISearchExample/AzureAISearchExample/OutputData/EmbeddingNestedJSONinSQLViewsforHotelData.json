{
  "Id": "746",
  "Title": "\u0022Embedding Nested JSON in SQL Views for Hotel Data\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfThe solution is to capture the room detail as nested JSON, and then insert the JSONstructure into a field in a view, as shown in the second step.1. Assume you\u0027ve two joined tables, Hotels$ and Rooms$, that contain details for 50hotels and 750 rooms and are joined on the HotelID field. Individually, these tablescontain 50 hotels and 750 related rooms.\r\nSQLON Rooms$.HotelID = Hotels$.HotelIDDefine a query that returns embedded JSONCREATE TABLE [dbo].[Hotels$](  [HotelID] [nchar](10) NOT NULL,  [HotelName] [nvarchar](255) NULL,  [Description] [nvarchar](max) NULL,  [Description_fr] [nvarchar](max) NULL,  [Category] [nvarchar](255) NULL,2. Create a view composed of all fields in the parent table (SELECT * fromdbo.\r\nHotels$), with the addition of a new Rooms field that contains the output of anested query. A FOR JSON AUTO clause on SELECT * from dbo.Rooms$ structuresthe output as JSON.SQLThe following screenshot shows the resulting view, with the Rooms nvarchar fieldat the bottom. The Rooms field exists only in the HotelRooms view.\r\n[Tags] [nvarchar](255) NULL,  [ParkingIncluded] [float] NULL,  [SmokingAllowed] [float] NULL,  [LastRenovationDate] [smalldatetime] NULL,  [Rating] [float] NULL,  [StreetAddress] [nvarchar](255) NULL, [City] [nvarchar](255) NULL,  [State] [nvarchar](255) NULL,  [ZipCode] [nvarchar](255) NULL,  [GeoCoordinates] [nvarchar](255) NULL) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]GOCREATE TABLE [dbo].\n"
}