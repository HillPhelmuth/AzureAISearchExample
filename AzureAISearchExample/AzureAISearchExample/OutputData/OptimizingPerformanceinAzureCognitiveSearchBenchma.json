{
  "Id": "1323",
  "Title": "\u0022Optimizing Performance in Azure Cognitive Search: Benchmarks and Best Practices\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfPercentage of max QPSAverage latency25%75%90%95%99%20%43 ms29 ms53 ms74 ms86 ms111 ms50%65 ms37 ms85 ms111 ms128 ms164 ms80%126 ms83 ms162 ms205 ms233 ms281 msThrough these benchmarks, you can get an idea of the performance Azure CognitiveSearch offers. You can also see difference between services at different tiers.\r\nSome key take ways from these benchmarks are:An S2 can typically handle at least four times the query volume as an S1An S2 will typically have lower latency than an S1 at comparable query volumesAs you add replicas, the QPS a service can handle typically scales linearly (forexample, if one replica can handle 10 QPS then five replicas can usually handle 50QPS)The higher the load on the service, the higher the average latency will beQuery latencyTakeawaysYou can also see that performance can vary drastically between scenarios.\r\nIf you\u0027re notgetting the performance you expect, check out the tips for better performance.Now that you\u0027ve seen the performance benchmarks, you can learn more about how toanalyze Cognitive Search\u0027s performance and key factors that influence performance. Next stepsAnalyze performanceTips for better performanceTips for better performance in AzureCognitive SearchArticle\u202204/21/2023This article is a collection of tips and best practices that are often recommended forboosting performance.\r\nKnowing which factors are most likely to impact searchperformance can help you avoid inefficiencies and get the most out of your searchservice. Some key factors include:Index composition (schema and size)Query designService capacity (tier, and the number of replicas and partitions)Queries run faster on smaller indexes. This is partly a function of having fewer fields toscan, but it\u0027s also due to how the system caches content for future queries. After the firstquery, some content remains in memory where it\u0027s searched more efficiently. Becauseindex size tends to grow over time, one best practice is to periodically revisit indexcomposition, both schema and documents, to look for content reduction opportunities.\n"
}