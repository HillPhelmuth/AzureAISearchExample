{
  "Id": "988",
  "Title": "\u0022Efficient Change Tracking with Azure Search High Water Mark\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfThe value of this column increases with each insert or update.Queries with the following WHERE and ORDER BY clauses can be executedefficiently: WHERE [High Water Mark Column] \u003E [Current High Water Mark Value]ORDER BY [High Water Mark Column]Change detection policies are added to data source definitions. To use this policy, createor update your data source like this:HTTP\uFF17 NoteWe strongly recommend using the rowversion data type for the high water markcolumn. If any other data type is used, change tracking isn\u0027t guaranteed to captureall changes in the presence of transactions executing concurrently with an indexerquery.\r\nWhen using rowversion in a configuration with read-only replicas, you mustpoint the indexer at the primary replica. Only a primary replica can be used for datasync scenarios.POST https://myservice.search.windows.\r\nnet/datasources?api-version=2020-06-30Content-Type: application/jsonapi-key: admin-key    {        \u0022name\u0022 : \u0022myazuresqldatasource\u0022,        \u0022type\u0022 : \u0022azuresql\u0022,        \u0022credentials\u0022 : { \u0022connectionString\u0022 : \u0022connection string\u0022 },        \u0022container\u0022 : { \u0022name\u0022 : \u0022table or view name\u0022 },        \u0022dataChangeDetectionPolicy\u0022 : {            \u0022@odata.type\u0022 : \u0022#Microsoft.Azure.Search.\r\nHighWaterMarkChangeDetectionPolicy\u0022,            \u0022highWaterMarkColumnName\u0022 : \u0022[a rowversion or last_updated column name]\u0022        }    }\uFF17 NoteIf you\u0027re using a rowversion data type for the high water mark column, consider settingthe convertHighWaterMarkToRowVersion property in indexer configuration. Setting thisproperty to true results in the following behaviors:Uses the rowversion data type for the high water mark column in the indexer SQLquery. Using the correct data type improves indexer query performance.Subtracts one from the rowversion value before the indexer query runs. Views withone-to-many joins may have rows with duplicate rowversion values. Subtractingone ensures the indexer query doesn\u0027t miss these rows.\n"
}