{
  "Id": "969",
  "Title": "\u0022Mapping Graph Data to Fields in Azure Cosmos DB Indexer\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfcom;AccountKey=[cosmos-account-key];Database=[cosmos-database-name];ApiKind=Gremlin\u0022    },    \u0022container\u0022: { \u0022name\u0022: \u0022[my-cosmos-collection]\u0022 },    \u0022dataChangeDetectionPolicy\u0022: {        \u0022@odata.type\u0022: Even if you enable deletion detection policy, deleting complex (Edm.ComplexType) fieldsfrom the index is not supported. This policy requires that the \u0027active\u0027 column in theGremlin database to be of type integer, string or boolean.\r\nThe Azure Cosmos DB for Apache Gremlin indexer will automatically map a couplepieces of graph data:1. The indexer will map _rid to an rid field in the index if it exists, and Base64encode it.2. The indexer will map _id to an id field in the index if it exists.3. When querying your Azure Cosmos DB database using the Azure Cosmos DB forApache Gremlin you may notice that the JSON output for each property has an idand a value.\r\nAzure AI Search Azure Cosmos DB indexer will automatically map theproperties value into a field in your search index that has the same name as theproperty if it exists. In the following example, 450 would be mapped to a pagesfield in the search index.HTTP\u0022#Microsoft.Azure.Search.\r\nHighWaterMarkChangeDetectionPolicy\u0022,        \u0022highWaterMarkColumnName\u0022: \u0022\u0060_ts\u0060\u0022    },    \u0022dataDeletionDetectionPolicy\u0022: {        \u0022@odata.type\u0022: \u0022#Microsoft.Azure.Search.\r\nSoftDeleteColumnDeletionDetectionPolicy\u0022,        \u0022softDeleteColumnName\u0022: \u0022isDeleted\u0022,        \u0022softDeleteMarkerValue\u0022: \u0022true\u0022    }}Mapping graph data to fields in a search index    {        \u0022id\u0022: \u0022Cookbook\u0022,        \u0022label\u0022: \u0022book\u0022,        \u0022type\u0022: \u0022vertex\u0022,        \u0022properties\u0022: {          \u0022pages\u0022: [            {              \u0022id\u0022: \u002248cf6285-a145-42c8-a0aa-d39079277b71\u0022,              \u0022value\u0022: \u0022450\u0022            }          ]You may find that you need to use Output Field Mappings in order to map your queryoutput to the fields in your index.\n"
}