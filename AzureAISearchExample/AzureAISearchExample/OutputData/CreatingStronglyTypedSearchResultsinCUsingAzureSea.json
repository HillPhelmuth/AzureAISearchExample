{
  "Id": "1502",
  "Title": "\u0022Creating Strongly-Typed Search Results in C# Using Azure Search\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfLet\u0027s explorethem with a search for a \u0022luxury\u0022 hotel.We can decorate our own C# types with attributes from System.Text.Json:C#Queryingusing Azure.Search.Documents;using Azure.Search.Documents.Indexes;using Azure.Core.GeoJson;// Get the service endpoint and API key from the environmentUri endpoint = new Uri(Environment.GetEnvironmentVariable(\u0022SEARCH_ENDPOINT\u0022));string key = Environment.\r\nGetEnvironmentVariable(\u0022SEARCH_API_KEY\u0022);string indexName = \u0022hotels\u0022;// Create a clientAzureKeyCredential credential = new AzureKeyCredential(key);SearchClient client = new SearchClient(endpoint, indexName, credential);Use C# types for search resultspublic class Hotel{    [JsonPropertyName(\u0022HotelId\u0022)]    [SimpleField(IsKey = true, IsFilterable = true, IsSortable = true)]    public string Id { get; set;\r\n}    [JsonPropertyName(\u0022HotelName\u0022)]    [SearchableField(IsFilterable = true, IsSortable = true)]    public string Name { get; set; }    [SimpleField(IsFilterable = true, IsSortable = true)]    public GeoPoint GeoLocation { get; set; }Then we use them as the type parameter when querying to return strongly-typed searchresults:C#If you\u0027re working with a search index and know the schema, creating C# types isrecommended.\r\nIf you don\u0027t have your own type for search results, SearchDocument can be used instead.\r\nHere we perform the search, enumerate over the results, and extract data usingSearchDocument\u0027s dictionary indexer.C#    // Complex fields are included automatically in an index if not ignored. public HotelAddress Address { get; set; }}public class HotelAddress{    public string StreetAddress { get; set; }    [SimpleField(IsFilterable = true, IsSortable = true, IsFacetable = true)]    public string City { get; set; }    [SimpleField(IsFilterable = true, IsSortable = true, IsFacetable = true)]    public string StateProvince { get;\n"
}