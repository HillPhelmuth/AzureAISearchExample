{
  "Id": "1506",
  "Title": "\u0022Advanced Azure.Search.Documents Operations and Troubleshooting Guide\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfCreateIndex(index);Adding documents to your indexIndexDocumentsBatch\u003CHotel\u003E batch = IndexDocumentsBatch.Create(    IndexDocumentsAction.Upload(new Hotel { Id = \u0022783\u0022, Name = \u0022Upload Inn\u0022 }),    IndexDocumentsAction.Merge(new Hotel { Id = \u002212\u0022, Name = \u0022Renovated Ranch\u0022 }));IndexDocumentsOptions options = new IndexDocumentsOptions { ThrowOnAnyError = true };client.\r\nIndexDocuments(batch, options);Retrieving a specific document from your indexHotel doc = client.GetDocument\u003CHotel\u003E(\u00221\u0022);Console.WriteLine($\u0022{doc.Id}: {doc.Name}\u0022);Async APIsTo authenticate in a National Cloud, you will need to make the following additions toyour client configuration:Set the AuthorityHost in the credential options or via the AZURE_AUTHORITY_HOSTenvironment variableSet the Audience in SearchClientOptionsC#Any Azure.Search.Documents operation that fails will throw a RequestFailedExceptionwith helpful Status codes. Many of these errors are recoverable.C#SearchResults\u003CHotel\u003E searchResponse = await client.\r\nSearchAsync\u003CHotel\u003E(\u0022luxury\u0022);await foreach (SearchResult\u003CHotel\u003E result in searchResponse.GetResultsAsync()){    Hotel doc = result.Document;    Console.WriteLine($\u0022{doc.Id}: {doc.Name}\u0022);}Authenticate in a National Cloud// Create a SearchClient that will authenticate through AAD in the China national cloudstring indexName = \u0022nycjobs\u0022;Uri endpoint = new Uri(Environment.\r\nGetEnvironmentVariable(\u0022SEARCH_ENDPOINT\u0022));SearchClient client = new SearchClient(endpoint, indexName,    new DefaultAzureCredential(        new DefaultAzureCredentialOptions()        {            AuthorityHost = AzureAuthorityHosts.AzureChina        }),    new SearchClientOptions()    {        Audience = SearchAudience. AzureChina    });Troubleshootingtry{    return client.GetDocument\u003CHotel\u003E(\u002212345\u0022);You can also easily enable console logging if you want to dig deeper into the requestsyou\u0027re making against the service.See our troubleshooting guide for details on how to diagnose various failurescenarios.Go further with Azure.Search.Documents and our samplesWatch a demo or deep dive videoRead more about the Azure Cognitive Search serviceSee our Search CONTRIBUTING.md for details on building, testing, and contributingto this library.This project welcomes contributions and suggestions.\n"
}