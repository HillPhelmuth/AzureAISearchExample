{
  "Id": "216",
  "Title": "\u0022Implementing Azure Search in React with Python and JavaScript\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfPython                    \u003Cinput                         autoComplete=\u0022off\u0022 // setting for browsers; not the app                        type=\u0022text\u0022                         id=\u0022search-box\u0022                         className=\u0022form-control rounded-0\u0022                         placeholder=\u0022What are you looking for?\u0022                         onChange={onChangeHandler}                         defaultValue={props.\r\nq}                        onBlur={() =\u003E setShowSuggestions(false)}                        onClick={() =\u003E setShowSuggestions(true)}\u003E                    \u003C/input\u003E                    {suggestionDiv}                \u003C/div\u003E                \u003Cdiv className=\u0022input-group-btn\u0022\u003E                    \u003Cbutton className=\u0022btn btn-primary rounded-0\u0022 type=\u0022submit\u0022 onClick={onSearchHandler}\u003E                        Search                    \u003C/button\u003E                \u003C/div\u003E            \u003C/div\u003E        \u003C/div\u003E    );};Azure Function: Get specific documentimport loggingimport azure.functions as funcfrom azure.core.credentials import AzureKeyCredentialfrom azure.search.\r\ndocuments import SearchClientfrom shared_code import azure_configimport jsonenvironment_vars = azure_config()# Set Azure Search endpoint and keyendpoint = f\u0027https://{environment_vars[\u0022search_service_name\u0022]}.search.windows.\r\nnet\u0027key = environment_vars[\u0022search_api_key\u0022]# Your index nameindex_name = \u0022good-books\u0022# Create Azure SDK clientsearch_client = SearchClient(endpoint, index_name, AzureKeyCredential(key))This function API is called in the React app at client\\src\\pages\\Details\\Detail.js aspart of component initialization:JavaScriptbp = func.Blueprint()@bp.function_name(\u0022lookup\u0022)@bp.route(route=\u0022lookup\u0022, methods=[func.HttpMethod.GET, func.HttpMethod.POST])def main(req: func. HttpRequest) -\u003E func.HttpResponse:    # http://localhost:7071/api/Lookup?id=100    docid = req.params.get(\u0022id\u0022)    if docid:        logging.info(f\u0022/Lookup id = {docid}\u0022)        returnedDocument = search_client.get_document(key=docid)        full_response = {}        full_response[\u0022document\u0022] = returnedDocument        return func.HttpResponse(            body=json.\n"
}