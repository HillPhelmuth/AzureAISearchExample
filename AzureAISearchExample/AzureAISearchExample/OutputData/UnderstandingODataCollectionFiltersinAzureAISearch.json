{
  "Id": "1235",
  "Title": "\u0022Understanding OData Collection Filters in Azure AI Search\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfUnderstanding OData collection filters in Azure AI SearchFilters in Azure AI SearchOData expression language overview for Azure AI SearchOData expression syntax reference for Azure AI SearchSearch Documents (Azure AI Search REST API)Next stepsText normalization for case-insensitivefiltering, faceting and sortingArticle\u202210/21/2022In Azure Cognitive Search, a normalizer is a component that pre-processes text forkeyword matching over fields marked as \u0022filterable\u0022, \u0022facetable\u0022, or \u0022sortable\u0022.\r\nIncontrast with full text \u0022searchable\u0022 fields that are paired with text analyzers, contentthat\u0027s created for filter-facet-sort operations doesn\u0027t undergo analysis or tokenization.\r\nOmission of text analysis can produce unexpected results when casing and characterdifferences show up.By applying a normalizer, you can achieve light text transformations that improveresults:Consistent casing (such as all lowercase or uppercase)Normalize accents and diacritics like \u00F6 or \u00EA to ASCII equivalent characters \u0022o\u0022 and\u0022e\u0022Map characters like - and whitespace into a user-specified characterSearching and retrieving documents from a search index requires matching the queryinput to the contents of the document.\r\nMatching is either over tokenized content, as isthe case when you invoke \u0022search\u0022, or over non-tokenized content if the request is afilter, facet, or orderby operation.\r\nBecause non-tokenized content is also not analyzed, small differences in the content areevaluated as distinctly different values. Consider the following examples:$filter=City eq \u0027Las Vegas\u0027 will only return documents that contain the exacttext \u0022Las Vegas\u0022 and exclude documents with \u0022LAS VEGAS\u0022 and \u0022las vegas\u0022, whichis inadequate when the use-case requires all documents regardless of the casing. search=*\u0026facet=City,count:5 will return \u0022Las Vegas\u0022, \u0022LAS VEGAS\u0022 and \u0022las vegas\u0022as distinct values despite being the same city.\uFF09 ImportantThis feature is in public preview under Supplemental Terms of Use. The previewREST API supports this feature.\n"
}