{
  "Id": "497",
  "Title": "\u0022Managing Document Processing in Azure Search: Cache and Incremental Enrichment\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfThe following example illustrates a reset document request:HTTPRe-cache specific documentsPOST https://[search service name].search.windows.net/indexers/[indexer name]/resetdocs?api-version=2020-06-30-Preview     { Once you enable a cache, the indexer evaluates changes in your pipeline composition todetermine which content can be reused and which needs reprocessing. This sectionenumerates changes that invalidate the cache outright, followed by changes that triggerincremental processing.An invalidating change is one where the entire cache is no longer valid. An example ofan invalidating change is one where your data source is updated.\r\nHere is the completelist of changes to any part of the indexer pipeline that would invalidate your cache:Changing the data source typeChanging data source containerChanging data source credentialsChanging data source change detection policyChanging data source delete detection policyChanging indexer field mappingsChanging indexer parameters:Parsing ModeExcluded File Name ExtensionsIndexed File Name ExtensionsIndex storage metadata only for oversized documentsDelimited text headersDelimited text delimiterDocument RootImage Action (Changes to how images are extracted)Incremental processing evaluates your skillset definition and determines which skills torerun, selectively updating the affected portions of the document tree.\r\nHere is thecomplete list of changes resulting in incremental enrichment:Changing the skill type (the OData type of the skill is updated)        \u0022documentKeys\u0022 :\r\n[             \u0022key1\u0022,             \u0022key2\u0022,             \u0022key3\u0022         ]     } Changes that invalidate the cacheChanges that trigger incremental processingSkill-specific parameters are updated, for example a URL, defaults, or otherparametersSkill output changes, the skill returns additional or different outputsSkill input changes resulting in different ancestry, skill chaining has changedAny upstream skill invalidation, if a skill that provides an input to this skill isupdatedUpdates to the knowledge store projection location, results in re-projectingdocumentsChanges to the knowledge store projections, results in re-projecting documentsOutput field mappings changed on an indexer results in re-projecting documentsto the indexREST API version 2020-06-30-Preview or later provides incremental enrichment throughadditional properties on indexers.\n"
}