{
  "Id": "1198",
  "Title": "\u0022Optimizing Filter Expressions in Azure AI Search: Best Practices\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfFilters are OData expressions, articulated in the filter syntax supported by Azure AISearch.You can specify one filter for each search operation, but the filter itself can includemultiple fields, multiple criteria, and if you use an ismatch function, multiple full-textsearch expressions.\r\nIn a multi-part filter expression, you can specify predicates in anyorder (subject to the rules of operator precedence). There\u0027s no appreciable gain inperformance if you try to rearrange predicates in a particular sequence.One of the limits on a filter expression is the maximum size limit of the request. Theentire request, inclusive of the filter, can be a maximum of 16 MB for POST, or 8 KB forGET.\r\nThere\u0027s also a limit on the number of clauses in your filter expression. A good ruleof thumb is that if you have hundreds of clauses, you are at risk of running into the limit.We recommend designing your application in such a way that it doesn\u0027t generate filtersof unbounded size.The following examples represent prototypical filter definitions in several APIs.HTTPC#Defining filtersPOST https://[service name].search.windows.net/indexes/hotels/docs/search?api-version=2020-06-30{    \u0022search\u0022: \u0022*\u0022,    \u0022filter\u0022: \u0022Rooms/any(room: room/BaseRate lt 150.\r\n0)\u0022,    \u0022select\u0022: \u0022HotelId, HotelName, Rooms/Description, Rooms/BaseRate\u0022}    parameters =        new SearchParameters()        {            Filter = \u0022Rooms/any(room: room/BaseRate lt 150.0)\u0022,            Select = new[] { \u0022HotelId\u0022, \u0022HotelName\u0022, \u0022Rooms/Description\u0022 The following examples illustrate several usage patterns for filter scenarios. For moreideas, see OData expression syntax \u003E Examples.Standalone $filter, without a query string, useful when the filter expression is ableto fully qualify documents of interest. Without a query string, there\u0027s no lexical orlinguistic analysis, no scoring, and no ranking. Notice the search string is just anasterisk, which means \u0022match all documents\u0022.\n"
}