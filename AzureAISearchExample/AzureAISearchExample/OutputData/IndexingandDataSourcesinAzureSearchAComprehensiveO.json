{
  "Id": "482",
  "Title": "\u0022Indexing and Data Sources in Azure Search: A Comprehensive Overview\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfAs thefollowing graphic illustrates, one data source provides input to one indexer, which thenpopulates a single index:Although you can only use one indexer at a time, resources can be used in differentcombinations. The main takeaway of the next illustration is to notice is that a datasource can be paired with more than one indexer, and multiple indexers can write tosame index.Indexers crawl data stores on Azure and outside of Azure.\r\nAzure Blob StorageAzure Cosmos DBAzure Data Lake Storage Gen2Supported data sourcesAzure SQL DatabaseAzure Table StorageAzure SQL Managed InstanceSQL Server on Azure Virtual MachinesAzure Files (in preview)Azure MySQL (in preview)SharePoint in Microsoft 365 (in preview)Azure Cosmos DB for MongoDB (in preview)Azure Cosmos DB for Apache Gremlin (in preview)Azure Cosmos DB for Cassandra is not supported.\r\nIndexers accept flattened row sets, such as a table or view, or items in a container orfolder. In most cases, it creates one search document per row, record, or item.Indexer connections to remote data sources can be made using standard Internetconnections (public) or encrypted private connections when you use Azure virtualnetworks for client apps. You can also set up connections to authenticate using amanaged identity. For more information about secure connections, see Indexer accessto content protected by Azure network security features and Connect to a data sourceusing a managed identity.\r\nOn an initial run, when the index is empty, an indexer will read in all of the dataprovided in the table or container. On subsequent runs, the indexer can usually detectand retrieve just the data that has changed. For blob data, change detection isautomatic. For other data sources like Azure SQL or Azure Cosmos DB, change detectionmust be enabled. For each document it receives, an indexer implements or coordinates multiple steps,from document retrieval to a final search engine \u0022handoff\u0022 for indexing. Optionally, anindexer also drives skillset execution and outputs, assuming a skillset is defined.Stages of indexingStage 1: Document crackingDocument cracking is the process of opening files and extracting content.\nText-basedcontent can be extracted from files on a service, rows in a table, or items in container orcollection. If you add a skillset and image skills, document cracking can also extractimages and queue them for image processing.\n"
}