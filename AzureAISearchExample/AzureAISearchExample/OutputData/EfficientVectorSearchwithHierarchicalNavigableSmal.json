{
  "Id": "432",
  "Title": "\u0022Efficient Vector Search with Hierarchical Navigable Small World Graph\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfAdding to the graph: Different hierarchical levels represent different granularitiesof the graph, with higher levels being more global, and lower levels being moregranular. Each node in the graph represents a vector point.Each node is connected to up to m neighbors that are nearby. This is the mparameter.The number of data points that considered as candidate connections isgoverned by the efConstruction parameter. This dynamic list forms the set ofclosest points in the existing graph for the algorithm to consider. HigherefConstruction values result in more nodes being considered, which oftenleads to denser local neighborhoods for each vector.\r\nThese connections use the configured similarity metric to determinedistance. Some connections are \u0022long-distance\u0022 connections that connectacross different hierarchical levels, creating shortcuts in the graph thatenhance search efficiency.4. Graph pruning and optimization: This can happen after indexing all vectors, and itimproves navigability and efficiency of the HNSW graph.In the HNSW algorithm, a vector query search operation is executed by navigatingthrough this hierarchical graph structure. The following summarize the steps in theprocess:1. Initialization: The algorithm initiates the search at the top-level of the hierarchicalgraph.\r\nThis entry point contains the set of vectors that serve as starting points forsearch.2. Traversal: Next, it traverses the graph level by level, navigating from the top-levelto lower levels, selecting candidate nodes that are closer to the query vector basedon the configured distance metric, such as cosine similarity.3. Pruning: To improve efficiency, the algorithm prunes the search space by onlyconsidering nodes that are likely to contain nearest neighbors. This is achieved bymaintaining a priority queue of potential candidates and updating it as the searchprogresses. The length of this queue is configured by the parameter efSearch.4. Refinement: As the algorithm moves to lower, more granular levels, HNSWconsiders more neighbors near the query, which allows the candidate set ofvectors to be refined, improving accuracy.Retrieving vectors with the HNSW algorithm5. Completion: The search completes when the desired number of nearest neighborshave been identified, or when other stopping criteria are met. This desired numberof nearest neighbors is governed by the query-time parameter k.The algorithm finds candidate vectors to evaluate similarity. To perform this task, asimilarity metric calculation compares the candidate vector to the query vector andmeasures the similarity.\n"
}