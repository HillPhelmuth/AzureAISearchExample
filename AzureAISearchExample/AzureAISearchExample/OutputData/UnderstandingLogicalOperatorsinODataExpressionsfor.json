{
  "Id": "1632",
  "Title": "\u0022Understanding Logical Operators in OData Expressions for Azure AI Search\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfnot: A unary operator that evaluates to true if its sub-expression evaluates tofalse, and vice-versa.These, together with the collection operators any and all, allow you to construct filtersthat can express very complex search criteria.The following EBNF (Extended Backus-Naur Form) defines the grammar of an ODataexpression that uses the logical operators.\r\nAn interactive syntax diagram is also available:Syntaxlogical_expression ::=    boolean_expression (\u0027and\u0027 | \u0027or\u0027) boolean_expression    | \u0027not\u0027 boolean_expressionOData syntax diagram for Azure AI Search\uFF17 NoteSee OData expression syntax reference for Azure AI Search for the completeEBNF.\r\nThere are two forms of logical expressions: binary (and/or), where there are two sub-expressions, and unary (not), where there is only one. The sub-expressions can beBoolean expressions of any kind:Fields or range variables of type Edm.BooleanFunctions that return values of type Edm.Boolean, such as geo.intersects orsearch.\r\nismatchComparison expressions, such as rating gt 4Collection expressions, such as Rooms/any(room: room/Type eq \u0027Deluxe Room\u0027)The Boolean literals true or false.Other logical expressions constructed using and, or, and not.Most Boolean expressions such as functions and comparisons cannot produce nullvalues, and the logical operators cannot be applied to the null literal directly (forexample, x and null is not allowed). However, Boolean fields can be null, so you needto be aware of how the and, or, and not operators behave in the presence of null. Thisis summarized in the following table, where b is a field of type Edm.Boolean:ExpressionResult when b is nullbfalsenot btrueb eq truefalseb eq falsefalseb eq nulltrueb ne truetrueb ne falsetrueb ne nullfalse\uFF09 ImportantThere are some situations where not all kinds of sub-expression can be used withand/or, particularly inside lambda expressions. See OData collection operators inAzure AI Search for details.\n"
}