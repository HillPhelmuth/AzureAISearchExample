{
  "Id": "1122",
  "Title": "\u0022Projection Techniques for Enriched Content in Azure Search\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfIf enriched content has unrelated or independent components, for examplethe keywords extracted from a document might be unrelated from the entitiesrecognized in the same document, you can split those fields out into adjacent tables.When you\u0027re projecting to multiple tables, the complete shape is projected into eachtable, unless a child node is the source of another table within the same group.\r\nAddinga projection with a source path that is a child of an existing projection results in thechild node being sliced out of the parent node and projected into the new yet relatedtable. This technique allows you to define a single node in a Shaper skill that can be thesource for all of your projections.\r\nThe pattern for multiple tables consists of:One table as the parent or main tableAdditional tables to contain slices of the enriched contentFor example, assume a Shaper skill outputs an \u0022EnrichedShape\u0022 that contains hotelinformation, plus enriched content like key phrases, locations, and organizations.\r\nThemain table would include fields that describe the hotel (ID, name, description, address,        \u0022source\u0022: \u0022/document/HotelName\u0022     },     {         \u0022name\u0022: \u0022Category\u0022,         \u0022source\u0022: \u0022/document/Category\u0022     },     {         \u0022name\u0022: \u0022Description\u0022,         \u0022source\u0022: \u0022/document/Description\u0022     },     ],     \u0022outputs\u0022: [     {         \u0022name\u0022: \u0022output\u0022,         \u0022targetName\u0022: \u0022tableprojection\u0022     }     ] } Multiple table (slicing) examplecategory). Key phrases would get the key phrase column. Entities would get the entitycolumns.JSONThe generatedKeyName and referenceKeyName properties are used to relate data acrosstables or even across projection types. Each row in the child table has a propertypointing back to the parent. The name of the column or property in the child is thereferenceKeyName from the parent.\n"
}