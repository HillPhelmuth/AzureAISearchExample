{
  "Id": "429",
  "Title": "\u0022Relevance and Ranking in Vector Search: Algorithms and Metrics\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdf0,            \u0022similarityScore\u0022: 0.29541412,            \u0022termFrequency\u0022 : 2        },        \u0022title\u0022: {            \u0022uniqueTokenMatches\u0022: 3.0,            \u0022similarityScore\u0022: 1.75451557,            \u0022termFrequency\u0022 : 6        }    } }]Number of ranked results in a full text queryresponseSee alsoScoring ProfilesREST API ReferenceSearch Documents APIAzure Cognitive Search .\r\nNET SDKRelevance and ranking in vector searchArticle\u202210/24/2023In vector query execution, the search engine looks for similar vectors to find the bestcandidates to return in search results. Depending on how you indexed the vectorcontent, the search for relevant matches is either exhaustive, or constrained to nearneighbors for faster processing.\r\nOnce candidates are found, similarity metrics are usedto score each result based on the strength of the match. This article explains thealgorithms used to determine relevance and the similarity metrics used for scoring.The algorithms used in vector search are used to navigate the vector database and findmatching vectors. Supported algorithms include exhaustive k-nearest neighbors (KNN)and Hierarchical Navigable Small World (HNSW).Exhaustive KNN performs a brute-force search that enables users to search the entirevector space for matches that are most similar to the query.\r\nIt does this by calculatingthe distances between all pairs of data points and finding the exact k nearest neighborsfor a query point.HNSW is an algorithm used for efficient approximate nearest neighbor (ANN) search inhigh-dimensional spaces. It organizes data points into a hierarchical graph structure thatenables fast neighbor queries by navigating through the graph while maintaining abalance between search accuracy and computational efficiency. Only fields marked as searchable in the index, or as searchFields in the query, are usedfor searching and scoring. Only fields marked as retrievable, or fields specified inselect in the query, are returned in search results, along with their search score.\nThis algorithm is intended for scenarios where high recall is of utmost importance, andusers are willing to accept the trade-offs in search performance. Because it\u0027scomputationally intensive, use exhaustive KNN for small to medium datasets, or whenprecision requirements outweigh query performance considerations.\n"
}