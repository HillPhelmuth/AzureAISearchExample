{
  "Id": "511",
  "Title": "\u0022Enhancing Azure AI Search with Integrated Vectorization and More\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfAn indexer also specifies aschedule, field mappings, and properties for change detection.This checklist focuses on integrated vectorization, but your solution isn\u0027t limited to thislist. You can add more skills for AI enrichment, create a knowledge store, add semanticranking, add relevance tuning, and other query features.Integrated vectorization availability is based on the embedding model. If you\u0027re usingAzure OpenAI, check regional availability.If you\u0027re using a custom skill and an Azure hosting mechanism (such as an Azurefunction app, Azure Web App, and Azure Kubernetes), check the product by region\uF80AAvailability and pricingpage for feature availability.\r\nData chunking (Text Split skill) is free and available on all Azure AI services in all regions.Subdivide large documents into chunks, useful for vector and non-vectorscenarios. For vectors, chunks help you meet the input constraints of embeddingmodels. For non-vector scenarios, you might have a chat-style search app whereGPT is assembling responses from indexed chunks.\r\nYou can use vectorized or non-vectorized chunks for chat-style search.Build a vector store where all of the fields are vector fields, and the document ID(required for a search index) is the only string field. Query the vector index toretrieve document IDs, and then send the document\u0027s vector fields to anothermodel.\r\nCombine vector and text fields for hybrid search, with or without semantic ranking.Integrated vectorization simplifies all of the scenarios supported by vector search.We recommend using the built-in vectorization support of Azure AI Studio. If thisapproach doesn\u0027t meet your needs, you can create indexers and skillsets that invokeintegrated vectorization using the programmatic interfaces of Azure AI Search. For query-only vectorization:1. Add a vectorizer to an index. It should be the same embedding model used togenerate vectors in the index.\uFF17 NoteSome older search services created before January 1, 2019 are deployed oninfrastructure that doesn\u0027t support vector workloads.\n"
}