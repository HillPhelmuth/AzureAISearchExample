{
  "Id": "1286",
  "Title": "\u0022Managing Azure AI Search Indexing Parameters and Downtime\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfIf the index is live, append the allowIndexDowntime=true URI parameter on therequest, shown on the previous example.Because Azure AI Search doesn\u0027t allow updates to a live index, you need to takethe index offline so that the parameters can be added. Indexing and queryrequests fail while the index is offline. The duration of the outage is the amount oftime it takes to update the index, usually no more than several seconds.\r\nWhen theupdate is complete, the index comes back automatically.3. Set \u0022b\u0022 and \u0022k1\u0022 to custom values, and then send the request.PropertyTypeDescriptionk1numberControls the scaling function between the term frequency of eachmatching terms to the final relevance score of a document-querypair. Values are usually 0.\r\n0 to 3.0, with 1.2 as the default.A value of 0.0 represents a \u0022binary model\u0022, where the contribution ofa single matching term is the same for all matching documents,regardless of how many times that term appears in the text. Larger k1values allow the score to continue to increase as more instances ofthe same term is found in the document.\r\nUsing a larger k1 value is important in cases where multiple terms areincluded in a search query. In those cases, you might want to favordocuments matching more query terms, over documents that onlymatch a single term, multiple times. For example, when querying forthe terms \u0022Apollo Spaceflight\u0022, you might want to lower the score ofan article about Greek Mythology that contains the term \u0022Apollo\u0022 aSet BM25 parametersPUT [service-name]. search.windows.net/indexes/[index-name]?api-version=2020-06-30\u0026allowIndexDowntime=true{    \u0022similarity\u0022: {        \u0022@odata.type\u0022: \u0022#Microsoft.Azure.Search.BM25Similarity\u0022,        \u0022b\u0022 : 0.75,        \u0022k1\u0022 : 1.\n"
}