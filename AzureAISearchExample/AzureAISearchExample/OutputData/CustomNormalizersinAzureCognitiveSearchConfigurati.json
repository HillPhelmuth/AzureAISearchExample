{
  "Id": "1237",
  "Title": "\u0022Custom Normalizers in Azure Cognitive Search: Configuration and Usage\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfJSON2. Custom normalizers are defined in the \u0022normalizers\u0022 section of the index first, andthen assigned to the field definition as shown in the previous step. For moreinformation, see Create Index and also Add custom normalizers.How to specify a normalizer\u0022fields\u0022: [  {    \u0022name\u0022: \u0022Description\u0022,    \u0022type\u0022: \u0022Edm.\r\nString\u0022,    \u0022retrievable\u0022: true,   \u0022searchable\u0022: true,    \u0022filterable\u0022: true,    \u0022analyzer\u0022: \u0022en.microsoft\u0022,    \u0022normalizer\u0022: \u0022lowercase\u0022    ...  } ] JSONA good workaround for production indexes, where rebuilding indexes is costly, is tocreate a new field identical to the old one but with the new normalizer, and use it inplace of the old one.\r\nUse Update Index to incorporate the new field andmergeOrUpload to populate it. Later, as part of planned index servicing, you can cleanup the index to remove obsolete fields.Azure Cognitive Search provides built-in normalizers for common use-cases along withthe capability to customize as required.CategoryDescriptionPredefinednormalizersProvided out-of-the-box and can be used without any configuration.Customnormalizers For advanced scenarios. Requires user-defined configuration of a combination ofexisting elements, consisting of char and token filters. Custom normalizers don\u0027t specify tokenizers since normalizers always produce asingle token.\r\n\u0022fields\u0022: [  {    \u0022name\u0022: \u0022Description\u0022,    \u0022type\u0022: \u0022Edm.String\u0022,    \u0022retrievable\u0022: true,   \u0022searchable\u0022: true,    \u0022analyzer\u0022: null,    \u0022normalizer\u0022: \u0022my_custom_normalizer\u0022  }, \uFF17 NoteTo change the normalizer of an existing field, you\u0027ll have to rebuild the indexentirely (you cannot rebuild individual fields). Predefined and custom normalizers1(1)Normalizers referencePredefined normalizersNameDescription and OptionsNameDescription and OptionsstandardLowercases the text followed by asciifolding.lowercaseTransforms characters to lowercase.uppercaseTransforms characters to uppercase.asciifoldingTransforms characters that aren\u0027t in the Basic Latin Unicode block to their ASCIIequivalent, if one exists.\n"
}