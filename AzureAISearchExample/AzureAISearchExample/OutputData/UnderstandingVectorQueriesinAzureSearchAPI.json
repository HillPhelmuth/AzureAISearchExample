{
  "Id": "1153",
  "Title": "\u0022Understanding Vector Queries in Azure Search API\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfThis APIsupports:vectorQueries is the construct for vector search.kind set to vector specifies the query string is a vector.{    \u0022object\u0022: \u0022list\u0022,    \u0022data\u0022: [        {            \u0022object\u0022: \u0022embedding\u0022,            \u0022index\u0022: 0,            \u0022embedding\u0022: [                -0.009171937,                0.018715322,                .\r\n..                -0.0016804502            ]        }    ],    \u0022model\u0022: \u0022ada\u0022,    \u0022usage\u0022: {        \u0022prompt_tokens\u0022: 7,        \u0022total_tokens\u0022: 7    }}Vector query request2023-11-01vector is the query string.exhaustive (optional) invokes exhaustive KNN at query time, even if the fieldis indexed for HNSW.\r\nIn the following example, the vector is a representation of this query string: \u0022whatAzure services support full text search\u0022. The query targets the \u0022contentVector\u0022 field.The query returns k results. The actual vector has 1536 embeddings, so it\u0027strimmed in this example for readability.HTTPHere\u0027s a modified example so that you can see the basic structure of a response from apure vector query.\r\nThe previous query examples selected title, content, category as abest practice. This example shows a contentVector field in the response to illustrate thatretrievable vector fields can be included.JSONPOST https://{{search-service-name}}.search.windows. net/indexes/{{index-name}}/docs/search?api-version=2023-11-01Content-Type: application/jsonapi-key: {{admin-api-key}}{    \u0022count\u0022: true,    \u0022select\u0022: \u0022title, content, category\u0022,    \u0022vectorQueries\u0022: [        {            \u0022kind\u0022: \u0022vector\u0022            \u0022vector\u0022: [                -0.009154141,                0.018708462,                . . .                 -0.02178128,                -0.\n"
}