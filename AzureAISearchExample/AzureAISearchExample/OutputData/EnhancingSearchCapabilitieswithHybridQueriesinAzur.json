{
  "Id": "402",
  "Title": "\u0022Enhancing Search Capabilities with Hybrid Queries in Azure AI\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfHybrid queriescan take advantage of existing functionality like filtering, faceting, sorting, scoringprofiles, and semantic ranking in a single search request.Hybrid search combines results from both full text and vector queries, which usedifferent ranking functions such as BM25 and HNSW. A Reciprocal Rank Fusion (RRF)algorithm is used to merge results. The query response provides just one result set,using RRF to determine which matches are included.\r\nHybrid search is predicated on having a search index that contains fields of various datatypes, including plain text and numbers, geo coordinates for geospatial search, andvectors for a mathematical representation of a chunk of text or image, audio, and video.You can use almost all query capabilities in Azure AI Search with a vector query, exceptfor client-side interactions such as autocomplete and suggestions.\r\nA representative hybrid query might be as follows (notice the vector is trimmed forbrevity):How does hybrid search work?Structure of a hybrid queryHTTPKey points include:search specifies a full text search query.vectors for vector queries, which can be multiple, targeting multiple vector fields.\r\nIf the embedding space includes multi-lingual content, vector queries can find thematch with no language analyzers or translation required.select specifies which fields to return in results, which can be text fields that arehuman readable.filters can specify geospatial search or other include and exclude criteria, such aswhether parking is included.\r\nThe geospatial query in this example finds hotelswithin a 300-kilometer radius of Washington D.C.facets can be used to compute facet buckets over results that are returned fromhybrid queries.queryType=semantic invokes semantic ranking, applying machine readingcomprehension to surface more relevant search results.POST https://{{searchServiceName}}. search.windows.net/indexes/hotels-vector-quickstart/docs/search?api-version=2023-11-01  content-type: application/JSON{    \u0022count\u0022: true,    \u0022search\u0022: \u0022historic hotel walk to restaurants and shopping\u0022,    \u0022select\u0022: \u0022HotelId, HotelName, Category, Description, Address/City, Address/StateProvince\u0022,    \u0022filter\u0022: \u0022geo.distance(Location, geography\u0027POINT(-77.03241 38.\n"
}