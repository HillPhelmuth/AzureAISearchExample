{
  "Id": "1102",
  "Title": "\u0022Setting Up Azure AI Search for Hotel Data Integration\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfItincludes fields mapped directly to the CSV (name of the hotel, review date, and so forth)and fields created by the skillset (sentiment, key phrases, language, and translated text).Select Send to issue the PUT request.You should see the status 201 - Created. If you see a different status, in the Body pane,look for a JSON response that contains an error message.\r\nIf you\u0027re using a free searchservice, make sure you have room for the new objects (the free service has a maximumof three).At this point, the index is created but not loaded. Importing documents occurs laterwhen you run the indexer.Next, connect Azure AI Search to the hotel data you stored in Blob storage.\r\nTo createthe data source, send a Create Data Source POST request to https://{{search-service-name}}.search.windows.net/datasources?api-version={{api-version}}.In Postman, go to the Create Datasource request, and then to the Body pane. Youshould see the following code:JSONSelect Send to issue the POST request.\r\nfalse, \u0022facetable\u0022: true },        { \u0022name\u0022: \u0022keyphrases\u0022, \u0022type\u0022: \u0022Collection(Edm.String)\u0022, \u0022filterable\u0022: true, \u0022sortable\u0022: false, \u0022facetable\u0022: true }    ]}Create a data source{  \u0022name\u0022 : \u0022{{datasource-name}}\u0022,  \u0022description\u0022 : \u0022Demo files to demonstrate knowledge store capabilities. \u0022,  \u0022type\u0022 : \u0022azureblob\u0022,  \u0022credentials\u0022 : { \u0022connectionString\u0022 : \u0022{{storage-connection-string}}\u0022 },  \u0022container\u0022 : { \u0022name\u0022 : \u0022{{storage-container-name}}\u0022 }}Create a skillsetThe next step creates the skillset, which specifies both the enhancements to be appliedand the knowledge store where the results will be stored. This request sends a CreateSkillset PUT request to https://{{search-service-name}}.\n"
}