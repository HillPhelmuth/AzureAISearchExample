{
  "Id": "817",
  "Title": "\u0022Data Transformation Functions for Azure Cognitive Search Indexing\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfThis function uses the following parameters:delimiter: a string to use as the separator when splitting the input string.position: an integer zero-based position of the token to pick after the input stringis split.For example, if the input is Jane Doe, the delimiter is \u0022 \u0022(space) and the position is 0,the result is Jane; if the position is 1, the result is Doe. If the position refers to a tokenthat doesn\u0027t exist, an error is returned.Your data source contains a PersonName field, and you want to index it as two separateFirstName and LastName fields.\r\nYou can use this function to split the input using thespace character as the delimiter.JSONextractTokenAtPosition functionExample - extract a name\u0022fieldMappings\u0022 : [   {     \u0022sourceFieldName\u0022 : \u0022PersonName\u0022,     \u0022targetFieldName\u0022 : \u0022FirstName\u0022,     \u0022mappingFunction\u0022 : { \u0022name\u0022 : \u0022extractTokenAtPosition\u0022, \u0022parameters\u0022 : { \u0022delimiter\u0022 : \u0022 \u0022, \u0022position\u0022 : 0 } }   }, Transforms a string formatted as a JSON array of strings into a string array that can beused to populate a Collection(Edm.\r\nString) field in the index.For example, if the input string is [\u0022red\u0022, \u0022white\u0022, \u0022blue\u0022], then the target field of typeCollection(Edm.String) will be populated with the three values red, white, and blue.\r\nFor input values that can\u0027t be parsed as JSON string arrays, an error is returned.Azure SQL Database doesn\u0027t have a built-in data type that naturally maps toCollection(Edm.String) fields in Azure Cognitive Search. To populate string collectionfields, you can pre-process your source data as a JSON string array and then use thejsonArrayToStringCollection mapping function. JSONThis function can be used to encode a string so that it is \u0022URL safe\u0022. When used with astring that contains characters that aren\u0027t allowed in a URL, this function will convertthose \u0022unsafe\u0022 characters into character-entity equivalents. This function uses the UTF-8encoding format.\nurlEncode function can be used as an alternative to the base64Encode function, if onlyURL unsafe characters are to be converted, while keeping other characters as-is.\n"
}