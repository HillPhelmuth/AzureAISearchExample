{
  "Id": "1199",
  "Title": "\u0022Advanced Filtering and Querying Techniques in Azure Search\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfFor moreideas, see OData expression syntax \u003E Examples.Standalone $filter, without a query string, useful when the filter expression is ableto fully qualify documents of interest. Without a query string, there\u0027s no lexical orlinguistic analysis, no scoring, and no ranking. Notice the search string is just anasterisk, which means \u0022match all documents\u0022.\r\nJSONCombination of query string and $filter, where the filter creates the subset, and thequery string provides the term inputs for full text search over the filtered subset.The addition of terms (walking distance theaters) introduces search scores in theresults, where documents that best match the terms are ranked higher.\r\nUsing afilter with a query string is the most common usage pattern.JSONCompound queries, separated by \u0022or\u0022, each with its own filter criteria (for example,\u0027beagles\u0027 in \u0027dog\u0027 or \u0027siamese\u0027 in \u0027cat\u0027). Expressions combined with or are evaluatedindividually, with the union of documents matching each expression sent back inthe response. This usage pattern is achieved through the search.\r\nismatchscoringfunction. You can also use the nonscoring version, search.ismatch.,\u0022Rooms/BaseRate\u0022}        };    var results = searchIndexClient.Documents.\r\nSearch(\u0022*\u0022, parameters);Filter patterns{  \u0022search\u0022: \u0022*\u0022,  \u0022filter\u0022: \u0022Rooms/any(room: room/BaseRate ge 60 and room/BaseRate lt 300) and Address/City eq \u0027Honolulu\u0022}{  \u0022search\u0022: \u0022walking distance theaters\u0022,  \u0022filter\u0022: \u0022Rooms/any(room: room/BaseRate ge 60 and room/BaseRate lt 300) and Address/City eq \u0027Seattle\u0027\u0022}HTTPIt\u0027s also possible to combine full-text search via search. ismatchscoring with filtersusing and instead of or, but this is functionally equivalent to using the search and$filter parameters in a search request.\nFor example, the following two queriesproduce the same result:HTTPIn the REST API, filterable is on by default for simple fields. Filterable fields increaseindex size; be sure to set \u0022filterable\u0022: false for fields that you don\u0027t plan to actuallyuse in a filter. For more information about settings for field definitions, see Create Index.\n"
}