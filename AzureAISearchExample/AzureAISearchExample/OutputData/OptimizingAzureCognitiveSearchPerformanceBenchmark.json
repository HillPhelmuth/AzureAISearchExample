{
  "Id": "1317",
  "Title": "\u0022Optimizing Azure Cognitive Search Performance: Benchmarks and Best Practices\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfPerformance tipsChoose a service tierlet intervalsize = 1m; let _startTime = datetime(\u00272021-02-23 17:40\u0027);let _endTime = datetime(\u00272021-02-23 18:00\u0027);AzureDiagnostics| where TimeGenerated between([\u0027_startTime\u0027] .. [\u0027_endTime\u0027]) // Time range filtering| summarize IndexingOperationsPerSecond=bin(countif(OperationName == \u0022Indexing.Index\u0022)/ (intervalsize/1m), 0.\r\n01)  by bin(TimeGenerated, intervalsize)| render timechart Background service processingNext stepsManage capacityCase Study: Use Cognitive Search to Support Complex AI ScenariosAzure Cognitive Search performancebenchmarksArticle\u202201/31/2023Azure Cognitive Search\u0027s performance depends on a variety of factors including the sizeof your search service and the types of queries you\u0027re sending.\r\nTo help estimate the sizeof search service needed for your workload, we\u0027ve run several benchmarks to documentthe performance for different search services and configurations. These benchmarks inno way guarantee a certain level of performance from your service but can give you anidea of the performance you can expect.To cover a range of different use cases, we ran benchmarks for two main scenarios:E-commerce search - This benchmark emulates a real e-commerce scenario and isbased on the Nordic e-commerce company CDON.Document search - This scenario is comprised of keyword search over full textdocuments from Semantic Scholar.\r\nThis emulates a typical document searchsolution.While these scenarios reflect different use cases, every scenario is different so we alwaysrecommend performance testing your individual workload. We\u0027ve published aperformance testing solution using JMeter so you can run similar tests against yourown service. To benchmark Azure Cognitive Search\u0027s performance, we ran tests for two differentscenarios at different tiers and replica/partition combinations.To create these benchmarks, the following methodology was used:1. The test begins at X queries per second (QPS) for 180 seconds. This was usually 5or 10 QPS.2. QPS then increased by X and ran for another 180 seconds3.\n"
}