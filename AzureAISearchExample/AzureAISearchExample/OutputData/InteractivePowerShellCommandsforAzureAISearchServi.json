{
  "Id": "109",
  "Title": "\u0022Interactive PowerShell Commands for Azure AI Search Service Setup\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfThis article explains how to runPowerShell commands interactively. Alternatively, you can download and run aPowerShell script that performs the same operations.If you don\u0027t have an Azure subscription, create a free account before you begin.The following services and tools are required for this quickstart.PowerShell 5.1 or later, using Invoke-RestMethod for sequential and interactivesteps.Create an Azure AI Search service or find an existing service under your currentsubscription. You can use a free service for this quickstart.REST calls require the service URL and an access key on every request.\r\nA search service iscreated with both, so if you added Azure AI Search to your subscription, follow thesesteps to get the necessary information:1. Sign in to the Azure portal, and in your search service Overview page, get theURL. An example endpoint might look like https://mydemo.search.windows.net.2. In Settings \u003E Keys, get an admin key for full rights on the service. There are twointerchangeable admin keys, provided for business continuity in case you need toroll one over. You can use either the primary or secondary key on requests foradding, modifying, and deleting objects.\r\nPrerequisitesCopy a key and URLAll requests require an api-key on every request sent to your service. Having a valid keyestablishes trust, on a per request basis, between the application sending the requestand the service that handles it.1. In PowerShell, create a $headers object to store the content-type and API key. Replace the admin API key (YOUR-ADMIN-API-KEY) with a key that is valid for yoursearch service. You only have to set this header once for the duration of thesession, but you will add it to every request.PowerShell2. Create a $url object that specifies the service\u0027s indexes collection.\n"
}