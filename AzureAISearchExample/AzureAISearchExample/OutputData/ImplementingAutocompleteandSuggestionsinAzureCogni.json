{
  "Id": "1177",
  "Title": "\u0022Implementing Autocomplete and Suggestions in Azure Cognitive Search\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfHighlightPostTag = \u0022\u003C/b\u003E\u0022;    }    // Only one suggester can be specified per index.    // The suggester for the Hotels index enables autocomplete/suggestions on the HotelName field only.    // During indexing, HotelNames are indexed in patterns that support autocomplete and suggested results.    var suggestResult = await _searchClient.\r\nSuggestAsync\u003CHotel\u003E(term, \u0022sg\u0022, options).ConfigureAwait(false);    // Convert the suggest query results to a list that can be displayed in the client.    List\u003Cstring\u003E suggestions = suggestResult.Value.Results.Select(x =\u003E x.Text).ToList();    // Return the list of suggestions.    return new JsonResult(suggestions);}Autocompleterequest for Azure Cognitive Search autocomplete.\r\nAs with the suggestions, in a C#application, code that supports user interaction goes in index.cshtml.JavaScriptAutocomplete is based on the AutocompleteAsync method. As with suggestions, thiscode block would go in the HomeController.cs file.C#$(function () {    // using modified jQuery Autocomplete plugin v1.2.8 https://xdsoft.net/jqplugins/autocomplete/    // $.autocomplete -\u003E $.autocompleteInline    $(\u0022#searchbox1\u0022).autocompleteInline({        appendMethod: \u0022replace\u0022,        source: [            function (text, add) {                if (!text) {                    return;                }                $.\r\ngetJSON(\u0022/home/autocomplete?term=\u0022 \u002B text, function (data) {                    if (data \u0026\u0026 data.length \u003E 0) {                        currentSuggestion2 = data[0];                        add(data);                    }                });            }        ]    });    // complete on TAB and clear on ESC    $(\u0022#searchbox1\u0022). keydown(function (evt) {        if (evt.keyCode === 9 /* TAB */ \u0026\u0026 currentSuggestion2) {            $(\u0022#searchbox1\u0022).val(currentSuggestion2);            return false;        } else if (evt.keyCode === 27 /* ESC */) {            currentSuggestion2 = \u0022\u0022;            $(\u0022#searchbox1\u0022).\n"
}