{
  "Id": "539",
  "Title": "\u0022Authorization and Access Control in Azure AI Search Service\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfKeys arerequired on every request. Submission of a valid key is considered proof therequest originates from a trusted entity.You can use both authentication methods, or disable an approach that you don\u0027t wantavailable on your search service.Azure AI Search provides authorization models for service management and contentmanagement.Resource management is authorized through Azure role-based access control (AzureRBAC). Azure RBAC is the authorization system for Azure Resource Manager.In Azure AI Search, Resource Manager is used to create or delete the service, manageAPI keys, scale the service, and configure security.\r\nAs such, Azure role assignments willdetermine who can perform those tasks, regardless of whether they\u0027re using the portal,PowerShell, or the Management REST APIs.Three basic roles (Owner, Contributor, Reader) apply to search service administration.Role assignments can be made using any supported methodology (portal, PowerShell,and so forth) and are honored service-wide.Content management refers to the objects created and hosted on a search service.AuthorizationAuthorize service management\uFF17 NoteUsing Azure-wide mechanisms, you can lock a subscription or resource to preventaccidental or unauthorized deletion of your search service by users with adminrights.\r\nFor more information, see Lock resources to prevent unexpected deletion.Authorize access to contentFor role-based authorization, use Azure role assignments to establish read-writeaccess to operations.For key-based authorization, an API key and a qualified endpoint determine access.\r\nAn endpoint might be the service itself, the indexes collection, a specific index, adocuments collection, or a specific document. When chained together, theendpoint, the operation (for example, a create or update request) and the type ofkey (admin or query) authorize access to content and operations.Using Azure roles, you can set permissions on individual indexes as long as it\u0027s doneprogrammatically. Using keys, anyone with an admin key to your service can read, modify, or delete anyindex in the same service. For protection against accidental or malicious deletion ofindexes, your in-house source control for code assets is the solution for reversing anunwanted index deletion or modification. Azure AI Search has failover within the clusterto ensure availability, but it doesn\u0027t store or execute your proprietary code used tocreate or load indexes.For multitenancy solutions requiring security boundaries at the index level, it\u0027s commonto handle index isolation in the middle tier in your application code.\n"
}