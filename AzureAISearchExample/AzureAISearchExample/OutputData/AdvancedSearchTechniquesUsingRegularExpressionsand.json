{
  "Id": "1267",
  "Title": "\u0022Advanced Search Techniques Using Regular Expressions and Wildcards\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfVarious shops and art entertainment are on the boardwalk, just steps away.\u0022     }, Example 5: RegexA regular expression search finds a match based on the contents between forwardslashes \u0022/\u0022, as documented in the RegExp class.\r\nHTTPResponse for this query should look similar to the following example:JSONPOST /indexes/hotel-samples-index/docs/search?api-version=2020-06-30 {     \u0022search\u0022: \u0022HotelName:/(Mo|Ho)tel/\u0022,     \u0022queryType\u0022: \u0022full\u0022,     \u0022select\u0022: \u0022HotelName\u0022,     \u0022count\u0022: true }     \u0022@odata.count\u0022: 22,    \u0022value\u0022: [         {             \u0022@search.score\u0022: 1.0,             \u0022HotelName\u0022: \u0022Days Hotel\u0022         },         {             \u0022@search.score\u0022: 1.\r\n0,             \u0022HotelName\u0022: \u0022Triple Landscape Hotel\u0022         },         {             \u0022@search.score\u0022: 1.0,             \u0022HotelName\u0022: \u0022Smile Hotel\u0022         },         {             \u0022@search.score\u0022: 1.0,             \u0022HotelName\u0022: \u0022Pelham Hotel\u0022         },         {             \u0022@search.score\u0022: 1.0,             \u0022HotelName\u0022: \u0022Sublime Cliff Hotel\u0022         },         {             \u0022@search.\r\nscore\u0022: 1.0,             \u0022HotelName\u0022: \u0022Twin Dome Motel\u0022         },         {             \u0022@search.score\u0022: 1.0,             \u0022HotelName\u0022: \u0022Nova Hotel \u0026 Spa\u0022         },         {             \u0022@search.score\u0022: 1.0,             \u0022HotelName\u0022: \u0022Scarlet Harbor Hotel\u0022         }, You can use generally recognized syntax for multiple (*) or single (?) character wildcardsearches. Note the Lucene query parser supports the use of these symbols with a singleterm, and not a phrase.In this query, search for hotel names that contain the prefix \u0027sc\u0027. You can\u0027t use a * or ?symbol as the first character of a search.HTTPResponse for this query should look similar to the following example:JSON\uFF17 NoteRegex queries are not analyzed.\n"
}