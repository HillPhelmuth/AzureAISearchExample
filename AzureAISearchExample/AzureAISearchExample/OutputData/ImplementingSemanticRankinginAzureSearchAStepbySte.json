{
  "Id": "43",
  "Title": "\u0022Implementing Semantic Ranking in Azure Search: A Step-by-Step Guide\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfIf you have an existing index, you can make these changeswithout having to reindex your content because there\u0027s no impact on the structure ofyour searchable content.A semantic configuration establishes a priority order for fields that contribute atitle, keywords, and content used in semantic reranking. Field prioritization allowsfor faster processing.Queries that invoke semantic ranking include parameters for query type, querylanguage, and whether captions and answers are returned. You can add theseparameters to your existing query logic. There\u0027s no conflict with other parameters.In this section, we assume the same small hotels index (four documents only) created inthe full text search quickstart.\r\nA small index with minimal content is suboptimal forsemantic ranking, but the quickstarts include query logic for a broad range of clients,which is useful when the objective is to learn syntax.Build a console application using the Azure.Search.Documents client library to addsemantic ranking to an existing search index.\r\nAlternatively, you can download the source code to start with a finished projector follow these steps to create your own.Add semantic ranking.NET1. Start Visual Studio and create a new project for a console app.2. In Tools \u003E NuGet Package Manager, select Manage NuGet Packages forSolution....3. Select Browse.4. Search for Azure.Search.\r\nDocuments package and select the latest stableversion.5. Select Install to add the assembly to your project and solution.1. In Program.cs, add the following using directives.C#2. Create two clients: SearchIndexClient creates the index, and SearchClient loadsand queries an existing index. Both need the service endpoint and an adminAPI key for authentication with create/delete rights. Because the code builds out the URI for you, specify just the search servicename in the \u0022serviceName\u0022 property.C#Set up your environmentCreate a search clientusing Azure;using Azure.Search.Documents;using Azure.Search.Documents.Indexes;using Azure.Search.Documents.Indexes.Models;using Azure.Search.Documents.\n"
}