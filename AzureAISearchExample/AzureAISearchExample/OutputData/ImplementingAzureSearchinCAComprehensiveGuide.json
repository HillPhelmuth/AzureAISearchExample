{
  "Id": "1503",
  "Title": "\u0022Implementing Azure Search in C#: A Comprehensive Guide\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfpublic HotelAddress Address { get; set; }}public class HotelAddress{    public string StreetAddress { get; set; }    [SimpleField(IsFilterable = true, IsSortable = true, IsFacetable = true)]    public string City { get; set; }    [SimpleField(IsFilterable = true, IsSortable = true, IsFacetable = true)]    public string StateProvince { get;\r\nset; }    [SimpleField(IsFilterable = true, IsSortable = true, IsFacetable = true)]    public string Country { get; set; }    [SimpleField(IsFilterable = true, IsSortable = true, IsFacetable = true)]    public string PostalCode { get; set; }}SearchResults\u003CHotel\u003E response = client.\r\nSearch\u003CHotel\u003E(\u0022luxury\u0022);foreach (SearchResult\u003CHotel\u003E result in response.GetResults()){    Hotel doc = result.Document;    Console.WriteLine($\u0022{doc.Id}: {doc.Name}\u0022);}Use SearchDocument like a dictionary for search resultsThe SearchOptions provide powerful control over the behavior of our queries. Let\u0027ssearch for the top 5 luxury hotels with a good rating.C#You can use the SearchIndexClient to create a search index. Fields can be defined froma model class using FieldBuilder. Indexes can also define suggesters, lexical analyzers,and more.\r\nUsing the Hotel sample above, which defines both simple and complex fields:C#SearchResults\u003CSearchDocument\u003E response = client.Search\u003CSearchDocument\u003E(\u0022luxury\u0022);foreach (SearchResult\u003CSearchDocument\u003E result in response.GetResults()){    SearchDocument doc = result.Document;    string id = (string)doc[\u0022HotelId\u0022];    string name = (string)doc[\u0022HotelName\u0022];    Console. WriteLine($\u0022{id}: {name}\u0022);}SearchOptionsint stars = 4;SearchOptions options = new SearchOptions{    // Filter to only Rating greater than or equal our preference    Filter = SearchFilter.Create($\u0022Rating ge {stars}\u0022),    Size = 5, // Take only 5 results    OrderBy = { \u0022Rating desc\u0022 } // Sort by Rating from high to low};SearchResults\u003CHotel\u003E response = client.\n"
}