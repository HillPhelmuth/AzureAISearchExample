{
  "Id": "1713",
  "Title": "\u0022Text Merger: Merging Image Text into Document Content Field\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfA common use case for Text Merger is merging the textual representation of images(text from an OCR skill, or the caption of an image) into the content field of a document.This is for scenarios where the source document is a PDF or Word document thatcombines text with embedded images.\r\nThe following example skillset creates a merged_text field. This field contains the textualcontent of your document and the OCRed text from each of the images embedded inthat document.JSON\u0022y\u0022:30},{\u0022x\u0022:110, \u0022y\u0022:30}],        \u0022text\u0022:\u0022Hello\u0022      },      {        \u0022boundingBox\u0022: [ {\u0022x\u0022:110, \u0022y\u0022:10}, {\u0022x\u0022:150, \u0022y\u0022:10}, {\u0022x\u0022:150, \u0022y\u0022:30},{\u0022x\u0022:110, \u0022y\u0022:30}],        \u0022text\u0022:\u0022World.\r\n\u0022      },      {        \u0022boundingBox\u0022: [ {\u0022x\u0022:110, \u0022y\u0022:10}, {\u0022x\u0022:150, \u0022y\u0022:10}, {\u0022x\u0022:150, \u0022y\u0022:30},{\u0022x\u0022:110, \u0022y\u0022:30}],        \u0022text\u0022:\u0022-John\u0022      }    ]  }}Sample: Merging text extracted fromembedded images with the content of thedocumentRequest Body Syntax{  \u0022description\u0022: \u0022Extract text from images and merge with content text to produce merged_text\u0022,  \u0022skills\u0022:  [    {      \u0022description\u0022: \u0022Extract text (plain and structured) from image.\r\n\u0022,      \u0022@odata.type\u0022: \u0022#Microsoft.Skills.Vision.OcrSkill\u0022,      \u0022context\u0022: \u0022/document/normalized_images/*\u0022,      \u0022defaultLanguageCode\u0022: \u0022en\u0022,      \u0022detectOrientation\u0022: true,The above skillset example assumes that a normalized-images field exists. To generatethis field, set the imageAction configuration in your indexer definition togenerateNormalizedImages as shown below:JSON      \u0022inputs\u0022: [        {          \u0022name\u0022: \u0022image\u0022,          \u0022source\u0022: \u0022/document/normalized_images/*\u0022        }      ],      \u0022outputs\u0022: [        {          \u0022name\u0022: \u0022text\u0022        }      ]    },    {      \u0022@odata.\n"
}