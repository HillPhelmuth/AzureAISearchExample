{
  "Id": "620",
  "Title": "\u0022Multi-Regional Search Solution Deployment and Load Balancing Strategies\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfHere\u0027s a high-level visual of what that architecture would look like.\uEA80 TipFor help in deploying multiple search services across multiple regions, see thisBicep sample on GitHub that deploys a fully configured, multi-regional searchsolution. The sample gives you two options for index synchronization, and requestredirection using Traffic Manager.Synchronize data across multiple servicesOption 1: Use indexers for updating content on multiple servicesIf you\u0027re using the Azure AI Search REST API to push content to your search index, youcan keep your various search services in sync by pushing changes to all search serviceswhenever an update is required.\r\nIn your code, make sure to handle cases where anupdate to one search service fails but succeeds for other search services.If you need redundancy at the request level, Azure provides several load balancingoptions:Azure Traffic Manager, used to route requests to multiple geo-located websitesthat are then backed by multiple search services.Application Gateway, used to load balance between servers in a region at theapplication layer.Azure Front Door, used to optimize global routing of web traffic and provideglobal failover.Some points to keep in mind when evaluating load balancing options:Search is a backend service that accepts query and indexing requests from a client.\r\nRequests from the client to a search service must be authenticated. For access tosearch operations, the caller must have role-based permissions or provide an APIkey on the request.Service endpoints are reached through a public internet connection by default. Ifyou set up a private endpoint for client connections that originate from within avirtual network, use Application Gateway.Azure AI Search accepts requests addressed to the \u003Cyour-search-service-name\u003E.search.windows.net endpoint. If you reach the same endpoint using adifferent DNS name in the host header, such as a CNAME, the request is rejected. Azure AI Search provides a multi-region deployment sample that uses Azure TrafficManager for request redirection if the primary endpoint fails. This solution is usefulwhen you route to a search-enabled client that only calls a search service in the sameregion.Azure Traffic Manager is primarily used for routing network traffic across differentendpoints based on specific routing methods (such as priority, performance, orgeographic location). It acts at the DNS level to direct incoming requests to theOption 2: Use REST APIs for pushing content updates on multipleservicesFail over or redirect query requestsappropriate endpoint.\n"
}