{
  "Id": "786",
  "Title": "\u0022Implementing Synonyms and Search Queries in Azure Search Application\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdf\\n\u0022);   CleanupResources(indexClient);   Console.WriteLine(\u0022Creating index...\\n\u0022);   CreateHotelsIndex(indexClient);   SearchClient searchClient = indexClient.GetSearchClient(\u0022hotels\u0022);   Console.WriteLine(\u0022Uploading documents...\r\n\\n\u0022);   UploadDocuments(searchClient);   SearchClient searchClientForQueries = CreateSearchClientForQueries();   RunQueriesWithNonExistentTermsInIndex(searchClientForQueries);   Console.WriteLine(\u0022Adding synonyms...\\n\u0022);   UploadSynonyms(indexClient);   Console.WriteLine(\u0022Enabling synonyms in the test index...\\n\u0022);   EnableSynonymsInHotelsIndexSafely(indexClient);   Thread.\r\nSleep(10000); // Wait for the changes to propagate   RunQueriesWithNonExistentTermsInIndex(searchClientForQueries);   Console.WriteLine(\u0022Complete.  Press any key to end application...\\n\u0022);In RunQueriesWithNonExistentTermsInIndex, issue search queries with \u0022five star\u0022,\u0022internet\u0022, and \u0022economy AND hotel\u0022.\r\nPhrase queries, such as \u0022five star\u0022, must be enclosed in quotation marks, and might alsoneed escape characters depending on your client.BashNeither of the two indexed documents contain the terms, so we get the followingoutput from the first RunQueriesWithNonExistentTermsInIndex: no document matched.After the \u0022before\u0022 queries are run, the sample code enables synonyms. Enablingsynonyms is a two-step process. First, define and upload synonym rules. Second,configure fields to use them. The process is outlined in UploadSynonyms andEnableSynonymsInHotelsIndex.1. Add a synonym map to your search service. In UploadSynonyms, we define fourrules in our synonym map \u0027desc-synonymmap\u0027 and upload to the service.C#   Console.ReadKey();}\u0022Before\u0022 queriesConsole.\n"
}