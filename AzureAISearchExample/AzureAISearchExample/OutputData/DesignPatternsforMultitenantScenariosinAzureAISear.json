{
  "Id": "632",
  "Title": "\u0022Design Patterns for Multitenant Scenarios in Azure AI Search\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfThe above design patterns to model multitenant scenarios in Azure AI Search assume auniform scope where each tenant is a whole instance of an application. However,applications can sometimes handle many smaller scopes.If service-per-tenant and index-per-tenant models aren\u0027t sufficiently small scopes, it\u0027spossible to model an index to achieve an even finer degree of granularity.\r\nTo have a single index behave differently for different client endpoints, a field can beadded to an index, which designates a certain value for each possible client. Each time aclient calls Azure AI Search to query or modify an index, the code from the clientapplication specifies the appropriate value for that field using Azure AI Search\u0027s filtercapability at query time.\r\nThis method can be used to achieve functionality of separate user accounts, separatepermission levels, and even completely separate applications.Model 3: HybridAchieving even finer granularity\uFF17 NoteAzure AI Search is a compelling choice for many applications. When evaluating thevarious design patterns for multitenant applications, consider the various pricing tiersand the respective service limits to best tailor Azure AI Search to fit applicationworkloads and architectures of all sizes.Using the approach described above to configure a single index to serve multipletenants affects the relevance of search results.\r\nSearch relevance scores arecomputed at an index-level scope, not a tenant-level scope, so all tenants\u0027 data isincorporated in the relevance scores\u0027 underlying statistics such as term frequency.Next stepsAPI versions in Azure AI SearchArticle\u202211/15/2023Azure AI Search rolls out feature updates regularly. Sometimes, but not always, theseupdates require a new version of the API to preserve backward compatibility. Publishinga new version allows you to control when and how you integrate search service updatesin your code.As a rule, the REST APIs and libraries are versioned only when necessary, since it caninvolve some effort to upgrade your code to use a new API version.\n"
}