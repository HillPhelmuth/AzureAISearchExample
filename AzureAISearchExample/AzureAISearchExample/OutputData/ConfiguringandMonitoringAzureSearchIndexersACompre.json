{
  "Id": "948",
  "Title": "\u0022Configuring and Monitoring Azure Search Indexers: A Comprehensive Guide\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfGeographyPointOther JSON objectsN/AOnce the index and data source have been created, you\u0027re ready to create the indexer.Indexer configuration specifies the inputs, parameters, and properties controlling runtime behaviors.1. Create or update an indexer by giving it a name and referencing the data sourceand target index:  ]}Mapping data typesConfigure and run the Azure Cosmos DBindexerHTTP2. Specify field mappings if there are differences in field name or type, or if you needmultiple versions of a source field in the search index.3. See Create an indexer for more information about other properties.An indexer runs automatically when it\u0027s created.\r\nYou can prevent this by setting\u0022disabled\u0022 to true. To control indexer execution, run an indexer on demand or put it on aschedule.To monitor the indexer status and execution history, send a Get Indexer Status request:HTTPThe response includes status and the number of items processed. It should look similarto the following example:JSONPOST https://[service name].search.windows.\r\nnet/indexers?\r\napi-version=2020-06-30Content-Type: application/jsonapi-key: [search service admin key]{    \u0022name\u0022 : \u0022[my-cosmosdb-indexer]\u0022,    \u0022dataSourceName\u0022 : \u0022[my-cosmosdb-ds]\u0022,    \u0022targetIndexName\u0022 : \u0022[my-search-index]\u0022,    \u0022disabled\u0022: null,    \u0022schedule\u0022: null,    \u0022parameters\u0022:\r\n{        \u0022batchSize\u0022: null,        \u0022maxFailedItems\u0022: 0,        \u0022maxFailedItemsPerBatch\u0022: 0,        \u0022base64EncodeKeys\u0022: false,        \u0022configuration\u0022: {}        },    \u0022fieldMappings\u0022: [],    \u0022encryptionKey\u0022: null}Check indexer statusGET https://myservice. search.windows.net/indexers/myindexer/status?api-version=2020-06-30  Content-Type: application/json    api-key: [admin key]Execution history contains up to 50 of the most recently completed executions, whichare sorted in the reverse chronological order so that the latest execution comes first.Once an indexer has fully populated a search index, you might want subsequent indexerruns to incrementally index just the new and changed documents in your database.\n"
}