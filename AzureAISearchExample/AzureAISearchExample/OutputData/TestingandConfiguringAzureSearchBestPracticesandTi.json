{
  "Id": "1457",
  "Title": "\u0022Testing and Configuring Azure Search: Best Practices and Tips\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfIf you ran the indexer in the previous step and successfully indexed content from yourmanaged instance, then the test was successful. However, if the indexer fails or there\u0027sno content in the index, you can modify your objects and repeat testing by choosingany client that can invoke an outbound request from an indexer.An easy choice is running an indexer in Azure portal, but you can also try Postman andREST APIs for more precision.\r\nAssuming that your search service isn\u0027t also configured fora private connection, the REST client connection to Search can be over the publicinternet.Here are some reminders for testing:If you use Postman or another web testing tool, use the Management REST APIand the 2021-04-01-Preview API version to create the shared private link.\r\nUse theSearch REST API and a stable API version to create and invoke indexers and datasources.You can use the Import data wizard to create an indexer, data source, and index.However, the generated indexer won\u0027t have the correct execution environmentsetting.You can edit data source and indexer JSON in Azure portal to change properties,including the execution environment and the connection string.You can reset and rerun the indexer in Azure portal. Reset is important for thisscenario because it forces a full reprocessing of all documents.You can use Search explorer to check the contents of the index.\r\nMake outbound connections through a private endpointIndexer connections to Azure SQL Managed Instance through a public endpointIndex data from Azure SQLManagement REST APISearch REST API7 - Test the shared private linkSee alsoQuickstart: Get started with RESTConfigure customer-managed keys fordata encryption in Azure CognitiveSearchArticle\u202203/10/2023Azure Cognitive Search automatically encrypts data at rest with service-managed keys. Ifmore protection is needed, you can supplement default encryption with anotherencryption layer using keys that you create and manage in Azure Key Vault.This article walks you through the steps of setting up customer-managed key (CMK) or\u0022bring-your-own-key\u0022 (BYOK) encryption.\nHere are some points to keep in mind:CMK encryption is enacted on individual objects. If you require CMK across yoursearch service, set an enforcement policy.CMK encryption depends on Azure Key Vault. You can create your own encryptionkeys and store them in a key vault, or you can use Azure Key Vault APIs to generateencryption keys.\n"
}