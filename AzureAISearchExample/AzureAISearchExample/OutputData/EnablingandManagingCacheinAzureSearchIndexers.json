{
  "Id": "1068",
  "Title": "\u0022Enabling and Managing Cache in Azure Search Indexers\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfExisting processed output is preserved and reused whereverpossible.Cached content is placed in Azure Storage using account information that you provide.The container, named ms-az-search-indexercache-\u003Calpha-numerc-string\u003E, is createdwhen you run the indexer. It should be considered an internal component managed byyour search service and must not be modified.If you\u0027re not familiar with setting up indexers, start with indexer overview and thencontinue on to skillsets to learn about enrichment pipelines. For more background onkey concepts, see incremental enrichment.Azure Storage is used to store cached enrichments. The storage account must begeneral purpose v2.\r\nPreview APIs or beta Azure SDKs are required for enabling cache on an indexer. Theportal does not currently provide an option for caching enrichment.\uFF09 ImportantThis feature is in public preview under supplemental terms of use. The previewREST API supports this featurePrerequisites\uFF35 CautionIf you\u0027re using the SharePoint Online indexer (Preview), you should avoidincremental enrichment.\r\nUnder certain circumstances, the cache becomes invalid,requiring an indexer reset and run, should you choose to reload it.On new indexers, add the \u0022cache\u0022 property in the indexer definition payload whencalling Create or Update Indexer (2021-04-30-Preview).\r\nYou can also use the previouspreview API version, 2020-06-30-Preview.httpsFor existing indexers that already have a skillset, use the following steps to add caching.As a one-time operation, reset and rerun the indexer in full to load the cache.Start with a valid, work indexer that has these components: data source, skillset, index. Using an API client, send a GET Indexer request to retrieve the indexer. When you usethe preview API version to the GET the indexer, a \u0022cache\u0022 property set to null is added tothe definition automatically.HTTPEnable on new indexersPOST https://[service name].search.windows.\nnet/indexers?\n"
}