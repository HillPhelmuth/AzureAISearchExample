{
  "Id": "139",
  "Title": "\u0022Implementing Azure Search for Bulk Insert and Index Creation\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfDocuments;using Azure.Search.Documents.Indexes;using Azure.Search.Documents.Indexes.Models;using AzureSearch.BulkInsert;using ServiceStack;const string BOOKS_URL = \u0022https://raw.githubusercontent.com/Azure-Samples/azure-search-sample-data/main/good-books/books.csv\u0022;const string SEARCH_ENDPOINT = \u0022https://YOUR-SEARCH-RESOURCE-NAME.search.windows.\r\nnet\u0022;const string SEARCH_KEY = \u0022YOUR-SEARCH-ADMIN-KEY\u0022;const string SEARCH_INDEX_NAME = \u0022good-books\u0022;Uri searchEndpointUri = new(SEARCH_ENDPOINT);SearchClient client = new(    searchEndpointUri,    SEARCH_INDEX_NAME,    new AzureKeyCredential(SEARCH_KEY));SearchIndexClient clientIndex = new(    searchEndpointUri,    new AzureKeyCredential(SEARCH_KEY));await CreateIndexAsync(clientIndex);await BulkInsertAsync(client);static async Task CreateIndexAsync(SearchIndexClient clientIndex){    Console.\r\nWriteLine(\u0022Creating (or updating) search index\u0022);    SearchIndex index = new BookSearchIndex(SEARCH_INDEX_NAME);    var result = await clientIndex.CreateOrUpdateIndexAsync(index);    Console.WriteLine(result);}2. Open an integrated terminal in Visual Studio Code for the project directory\u0027ssubdirectory, search-website-functions-v4/bulk-insert, then run the followingcommand to install the dependencies.Bash1. Continue using the integrated terminal in Visual Studio for the project directory\u0027ssubdirectory, search-website-functions-v4/bulk-insert, to run the following bashcommand to run the Program. cs script:Bash2. As the code runs, the console displays progress.3. When the upload is complete, the last statement printed to the console is\u0022Finished bulk inserting book data\u0022.Once the upload completes, the search index is ready to use. Review your new index inAzure portal.static async Task BulkInsertAsync(SearchClient client){    Console.WriteLine(\u0022Download data file\u0022);    using HttpClient httpClient = new();    var csv = await httpClient.GetStringAsync(BOOKS_URL);    Console.WriteLine(\u0022Reading and parsing raw CSV data\u0022);    var books =        csv.ReplaceFirst(\u0022book_id\u0022, \u0022id\u0022).\n"
}