{
  "Id": "394",
  "Title": "\u0022Vector Search Workflows in Azure AI Search: A Comprehensive Guide\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfThe following diagram shows the indexing and query workflows for vector search.Generate vector embeddings before you start, or try out integrated vectorization(preview).\uFF02Add vector fields to an index.\uFF02Load vector data into an index using push or pull methodologies.\uFF02Query vector data using the Azure portal, REST APIs, or Azure SDK packages.\r\n\uFF02What\u0027s vector search in Azure AI Search?\uF80AOn the indexing side, Azure AI Search takes vector embeddings and uses a nearestneighbors algorithm to co-locate similar vectors together in the search index (vectorsabout popular movies are closer than vectors about popular dog breeds).\r\nHow you get embeddings from your source content depends on your approach andwhether you can use preview features. You can vectorize or generate embeddings usingmodels from OpenAI, Azure OpenAI, and any number of providers, over a wide range ofsource content including text, images, videos, and audio. You can then push pre-vectorized content to vector fields in a search index.\r\nThat\u0027s the generally availableapproach. If you can use preview features, Azure AI Search provides integrated datachunking and vectorization in an indexer pipeline. You still provide the resources(endpoints and connection information), but Azure AI Search makes all of the calls andhandles the transitions.On the query side, in your client application, collect the query input from a user. You canthen add a step that converts the input into a vector, and then send the vector query toyour index on Azure AI Search for a similarity search. As with indexing, you can deploythe integrated vectorization (preview) to convert text inputs to a vector. For eitherapproach, Azure AI Search returns documents with the requested k nearest neighbors(kNN) in the results.Azure AI Search supports hybrid scenarios. You can index vector data as fields indocuments alongside alphanumeric content. Vector queries can be issued singly or incombination with filters and other query types, including term queries and semanticranking in the same search request.\n"
}