{
  "Id": "352",
  "Title": "\u0022Understanding and Testing Analyzers for Full-Text Search in Azure\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfDifferent analyzers manipulate text in differentways depending on the scenario. For this scenario, we need to build an analyzer tailoredto phone numbers.Analyzers consist of three components:Character filters that remove or replace individual characters from the input text.A Tokenizer that breaks the input text into tokens, which become keys in thesearch index.\r\nToken filters that manipulate the tokens produced by the tokenizer.In the diagram below, you can see how these three components work together totokenize a sentence:These tokens are then stored in an inverted index, which allows for fast, full-textsearches. An inverted index enables full-text search by mapping all unique termsextracted during lexical analysis to the documents in which they occur.\r\nYou can see anexample in the diagram below:    ]}4 - Debug search resultsHow analyzers workAll of search comes down to searching for the terms stored in the inverted index. Whena user issues a query:1. The query is parsed and the query terms are analyzed.2.\r\nThe inverted index is then scanned for documents with matching terms.3. Finally, the retrieved documents are ranked by the scoring algorithm.If the query terms don\u0027t match the terms in your inverted index, results won\u0027t bereturned. To learn more about how queries work, see this article on full text search.Azure AI Search provides an Analyze Text API that allows you to test analyzers tounderstand how they process text.\uFF17 NotePartial term queries are an important exception to this rule. These queries (prefixquery, wildcard query, regex query) bypass the lexical analysis process unlikeregular term queries. Partial terms are only lowercased before being matchedagainst terms in the index. If an analyzer isn\u0027t configured to support these types ofqueries, you\u0027ll often receive unexpected results because matching terms don\u0027t existin the index.Test analyzer using the Analyze Text APIThe Analyze Text API is called using the following request:HTTPThe API then returns a list of the tokens extracted from the text.\n"
}