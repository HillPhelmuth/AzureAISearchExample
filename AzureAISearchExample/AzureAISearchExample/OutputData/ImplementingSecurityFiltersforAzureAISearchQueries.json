{
  "Id": "1479",
  "Title": "\u0022Implementing Security Filters for Azure AI Search Queries\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdf\u0022,            \u0022group_ids\u0022: [\u0022group_id5\u0022, \u0022group_id6\u0022]        }    ]}{    \u0022value\u0022: [        {            \u0022@search.action\u0022: \u0022mergeOrUpload\u0022,            \u0022file_id\u0022: \u00223\u0022,            \u0022group_ids\u0022: [\u0022group_id7\u0022, \u0022group_id8\u0022, \u0022group_id9\u0022]        }    ]}Apply the security filter in the query\u0027group_id1, group_id2,...\r\n\u0027 are the groups to which the search request issuer belongs.This filter matches all documents for which the group_ids field contains one of the givenidentifiers. For full details on searching documents using Azure AI Search, you can readSearch Documents.This sample shows how to set up query using a POST request.\r\nIssue the HTTP POST request:HTTPSpecify the filter in the request body:JSONYou should get the documents back where group_ids contains either \u0022group_id1\u0022 or\u0022group_id2\u0022. In other words, you get the documents to which the request issuer hasread access.JSONPOST https://[service name].search.windows.\r\nnet/indexes/securedfiles/docs/search?api-version=2020-06-30Content-Type: application/json  api-key: [admin or query key]{   \u0022filter\u0022:\u0022group_ids/any(g:search.in(g, \u0027group_id1, group_id2\u0027))\u0022  }{ [   {    \u0022@search.score\u0022:1.0,     \u0022file_id\u0022:\u00221\u0022,     \u0022file_name\u0022:\u0022secured_file_a\u0022,   },   {     \u0022@search.score\u0022:1. 0,     \u0022file_id\u0022:\u00222\u0022,     \u0022file_name\u0022:\u0022secured_file_b\u0022   } ]}This article described a pattern for filtering results based on user identity and thesearch.in() function. You can use this function to pass in principal identifiers for therequesting user to match against principal identifiers associated with each targetdocument.\n"
}