{
  "Id": "298",
  "Title": "\u0022Defining Index Schema and Creating Search Skills for Azure\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfMessage);        ExitProgram(\u0022Cannot continue without a skillset\u0022);    }    return skillset;}// Create the skillsConsole.WriteLine(\u0022Creating the skills...\u0022);OcrSkill ocrSkill = CreateOcrSkill();MergeSkill mergeSkill = CreateMergeSkill();EntityRecognitionSkill entityRecognitionSkill = In this section, you define the index schema by specifying which fields to include in thesearchable index, and the search attributes for each field.\r\nFields have a type and cantake attributes that determine how the field is used (searchable, sortable, and so forth).Field names in an index are not required to identically match the field names in thesource. In a later step, you add field mappings in an indexer to connect source-destination fields. For this step, define the index using field naming conventionspertinent to your search application.This exercise uses the following fields and field types:Field namesField typesidEdm.StringcontentEdm.StringlanguageCodeEdm.StringkeyPhrasesList\u003CEdm.String\u003EorganizationsList\u003CEdm.\r\nString\u003ECreateEntityRecognitionSkill();LanguageDetectionSkill languageDetectionSkill = CreateLanguageDetectionSkill();SplitSkill splitSkill = CreateSplitSkill();KeyPhraseExtractionSkill keyPhraseExtractionSkill = CreateKeyPhraseExtractionSkill();// Create the skillsetConsole.WriteLine(\u0022Creating or updating the skillset...\u0022);List\u003CSearchIndexerSkill\u003E skills = new List\u003CSearchIndexerSkill\u003E();skills. Add(ocrSkill);skills.Add(mergeSkill);skills.Add(languageDetectionSkill);skills.Add(splitSkill);skills.Add(entityRecognitionSkill);skills.Add(keyPhraseExtractionSkill);SearchIndexerSkillset skillset = CreateOrUpdateDemoSkillSet(indexerClient, skills, azureAiServicesKey);Step 3: Create an indexCreate DemoIndex ClassThe fields for this index are defined using a model class.\n"
}