{
  "Id": "1400",
  "Title": "\u0022Role-Based Access Control in Azure AI Search Service\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfContributorControl\u0026 DataSame level of control plane access as Owner, minus the ability to assignroles or change authentication options.\uFF17 NoteIn Azure AI Search, \u0022control plane\u0022 refers to operations supported in theManagement REST API or equivalent client libraries.\r\nThe \u0022data plane\u0022 refers tooperations against the search service endpoint, such as indexing or queries, or anyother operation specified in the Search REST API or equivalent client libraries.Built-in roles used in SearchRolePlaneDescriptionOn the data plane, this role has the same access as the Search ServiceContributor role. It includes access to all data plane actions except theability to query or index documents.\r\nReaderControl\u0026 DataRead access across the entire service, including search metrics, contentmetrics (storage consumed, number of objects), and the objectdefinitions of data plane resources (indexes, indexers, and so on).However, it can\u0027t read API keys or read content within indexes.\r\nSearchServiceContributorControl\u0026 DataRead-write access to object definitions (indexes, synonym maps,indexers, data sources, and skillsets). SeeMicrosoft.Search/searchServices/* for the permissions list. This rolecan\u0027t access content in an index, so no querying or indexing, but it cancreate, delete, and list indexes, return index definitions and statistics,and test analyzers.\r\nThis role is for search service administrators whoneed to manage the search service and its objects, but without contentaccess.Search IndexDataContributorDataRead-write access to content in all indexes on the search service. Thisrole is for developers or index owners who need to import, refresh, orquery the documents collection of an index. Search IndexData ReaderDataRead-only access to all search indexes on the search service. This role isfor apps and users who run queries.Adoption of role-based access control might increase the latency of somerequests. Each unique combination of service resource (index, indexer, etc.) andservice principal used on a request triggers an authorization check.\n"
}