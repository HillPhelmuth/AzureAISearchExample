{
  "Id": "293",
  "Title": "\u0022Implementing Azure Search Skillset for Document Processing and Analysis\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfAs such, set the input as\u0022/document/content\u0022 to use this text. Image content is placed into a generatednormalized_images field, specified in a skillset as /document/normalized_images/*.Outputs can be mapped to an index, used as input to a downstream skill, or both as isthe case with language code. In the index, a language code is useful for filtering. As aninput, language code is used by text analysis skills to inform the linguistic rules aroundword breaking.For more information about skillset fundamentals, see How to define a skillset.The OcrSkill extracts text from images.\r\nThis skill assumes that a normalized_images fieldexists. To generate this field, later in the tutorial we\u0027ll set the \u0022imageAction\u0022configuration in the indexer definition to \u0022generateNormalizedImages\u0022.C#OCR skillprivate static OcrSkill CreateOcrSkill(){    List\u003CInputFieldMappingEntry\u003E inputMappings = new List\u003CInputFieldMappingEntry\u003E();    inputMappings.Add(new InputFieldMappingEntry(\u0022image\u0022)    {        Source = \u0022/document/normalized_images/*\u0022    });    List\u003COutputFieldMappingEntry\u003E outputMappings = new List\u003COutputFieldMappingEntry\u003E();    outputMappings.\r\nAdd(new OutputFieldMappingEntry(\u0022text\u0022)    {        TargetName = \u0022text\u0022    });    OcrSkill ocrSkill = new OcrSkill(inputMappings, outputMappings)    {        Description = \u0022Extract text (plain and structured) from image\u0022,In this section, you\u0027ll create a MergeSkill that merges the document content field withthe text that was produced by the OCR skill. C#        Context = \u0022/document/normalized_images/*\u0022,        DefaultLanguageCode = OcrSkillLanguage.En,        ShouldDetectOrientation = true    };    return ocrSkill;}Merge skillprivate static MergeSkill CreateMergeSkill(){    List\u003CInputFieldMappingEntry\u003E inputMappings = new List\u003CInputFieldMappingEntry\u003E();    inputMappings.\n"
}