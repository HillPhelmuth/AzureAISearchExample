{
  "Id": "359",
  "Title": "\u0022Building and Testing Custom Phone Analyzer in Azure Search\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfString\u0022,      \u0022sortable\u0022: false,      \u0022searchable\u0022: true,      \u0022filterable\u0022: false,      \u0022facetable\u0022: false,      \u0022indexAnalyzer\u0022: \u0022phone_analyzer\u0022,      \u0022searchAnalyzer\u0022: \u0022phone_analyzer_search\u0022    }Alternate approaches\u0022analyzers\u0022: [  {You can see in the example below that the phone number is split into the chunks youwould normally expect a user to be searching for.\r\nInputOutput(321) 555-0199[321, 555, 0199, 321555, 5550199, 3215550199]Depending on your requirements, this may be a more efficient approach to the problem.For simplicity, this tutorial had you create three new indexes. However, it\u0027s common todelete and recreate indexes during the early stages of development.\r\nYou can delete anindex in the Azure portal or using the following API call:HTTP    \u0022@odata.type\u0022: \u0022#Microsoft.Azure.Search.CustomAnalyzer\u0022,    \u0022name\u0022: \u0022phone_analyzer_shingles\u0022,    \u0022tokenizer\u0022: \u0022custom_tokenizer_phone\u0022,    \u0022tokenFilters\u0022: [      \u0022custom_shingle_filter\u0022    ]  }],\u0022tokenizers\u0022: [  {    \u0022@odata.type\u0022: \u0022#Microsoft.Azure.Search.\r\nStandardTokenizerV2\u0022,    \u0022name\u0022: \u0022custom_tokenizer_phone\u0022,    \u0022maxTokenLength\u0022: 4  }],\u0022tokenFilters\u0022: [  {    \u0022@odata.type\u0022: \u0022#Microsoft.Azure.Search.ShingleTokenFilter\u0022,    \u0022name\u0022: \u0022custom_shingle_filter\u0022,    \u0022minShingleSize\u0022: 2,    \u0022maxShingleSize\u0022: 6,    \u0022tokenSeparator\u0022: \u0022\u0022  }]\uFF89Expand tableReset and rerunDELETE https://\u003CYOUR-SEARCH-SERVICE-NAME\u003E. search.windows.net/indexes/tutorial-basic-index?api-version=2019-05-06  api-key: \u003CYOUR-ADMIN-API-KEY\u003EThis tutorial demonstrated the process for building and testing a custom analyzer. Youcreated an index, indexed data, and then queried against the index to see what searchresults were returned.\nFrom there, you used the Analyze Text API to see the lexicalanalysis process in action.While the analyzer defined in this tutorial offers an easy solution for searching againstphone numbers, this same process can be used to build a custom phone analyzer forany scenario you may have.\n"
}