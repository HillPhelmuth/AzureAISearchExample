{
  "Id": "1103",
  "Title": "\u0022Creating and Configuring Azure Search Skillset for Data Enrichment\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdf\u0022,  \u0022type\u0022 : \u0022azureblob\u0022,  \u0022credentials\u0022 : { \u0022connectionString\u0022 : \u0022{{storage-connection-string}}\u0022 },  \u0022container\u0022 : { \u0022name\u0022 : \u0022{{storage-container-name}}\u0022 }}Create a skillsetThe next step creates the skillset, which specifies both the enhancements to be appliedand the knowledge store where the results will be stored. This request sends a CreateSkillset PUT request to https://{{search-service-name}}.\r\nsearch.windows.net/skillsets/{{skillset-name}}?api-version={{api-version}}.There are two large top-level objects: skills and knowledgeStore:\u0022skills\u0022 is the skillset. Each object inside the skills object is an enrichment service.Each enrichment service has inputs and outputs. The LanguageDetectionSkill hasan output targetName of Language.\r\nThe value of this node is used by most of theother skills as an input. The source is document/Language. The capability of usingthe output of one node as the input to another is even more evident inShaperSkill, which specifies how the data flows into the tables of the knowledgestore.\u0022knowledgeStore\u0022 includes the connection string to the storage account and aseries of projections.\r\nEach projection item in the projections array results in a tablein Azure Storage. Columns in the table include generated columns used for cross-linking and content fields. They\u0027ll also include content fields created duringenrichment.Projections accept data shapes as input. You can provide the shapes through aShaper skill, mapping the skill output to a projection, or you can define inlineshapes in each projection item.To generate the skillset, select the Send button in Postman to PUT the request:JSON{    \u0022name\u0022: \u0022{{skillset-name}}\u0022,    \u0022description\u0022: \u0022Skillset to detect language, translate text, extract key phrases, and score sentiment\u0022,    \u0022skills\u0022: [         {            \u0022@odata.\n"
}