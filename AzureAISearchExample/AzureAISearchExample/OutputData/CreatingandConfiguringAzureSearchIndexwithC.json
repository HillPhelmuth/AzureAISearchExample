{
  "Id": "1504",
  "Title": "\u0022Creating and Configuring Azure Search Index with C#\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfWriteLine($\u0022{id}: {name}\u0022);}SearchOptionsint stars = 4;SearchOptions options = new SearchOptions{    // Filter to only Rating greater than or equal our preference    Filter = SearchFilter.Create($\u0022Rating ge {stars}\u0022),    Size = 5, // Take only 5 results    OrderBy = { \u0022Rating desc\u0022 } // Sort by Rating from high to low};SearchResults\u003CHotel\u003E response = client.\r\nSearch\u003CHotel\u003E(\u0022luxury\u0022, options);// ...Creating an indexUri endpoint = new Uri(Environment.GetEnvironmentVariable(\u0022SEARCH_ENDPOINT\u0022));string key = Environment.GetEnvironmentVariable(\u0022SEARCH_API_KEY\u0022);// Create a service clientAzureKeyCredential credential = new AzureKeyCredential(key);SearchIndexClient client = new SearchIndexClient(endpoint, credential);// Create the index using FieldBuilder.In scenarios when the model is not known or cannot be modified, you can also createfields explicitly using convenient SimpleField, SearchableField, or ComplexField classes:C#SearchIndex index = new SearchIndex(\u0022hotels\u0022){    Fields = new FieldBuilder().\r\nBuild(typeof(Hotel)),    Suggesters =    {        // Suggest query terms from the HotelName field.        new SearchSuggester(\u0022sg\u0022, \u0022HotelName\u0022)    }};client.CreateIndex(index);// Create the index using field definitions.SearchIndex index = new SearchIndex(\u0022hotels\u0022){    Fields =    {        new SimpleField(\u0022HotelId\u0022, SearchFieldDataType.\r\nString) { IsKey = true, IsFilterable = true, IsSortable = true },        new SearchableField(\u0022HotelName\u0022) { IsFilterable = true, IsSortable = true },        new SearchableField(\u0022Description\u0022) { AnalyzerName = LexicalAnalyzerName.\r\nEnLucene },        new SearchableField(\u0022Tags\u0022, collection: true) { IsFilterable = true, IsFacetable = true },        new ComplexField(\u0022Address\u0022)        {            Fields =            {                new SearchableField(\u0022StreetAddress\u0022),                new SearchableField(\u0022City\u0022) { IsFilterable = true, IsSortable = true, IsFacetable = true },                new SearchableField(\u0022StateProvince\u0022) { IsFilterable = true,\n"
}