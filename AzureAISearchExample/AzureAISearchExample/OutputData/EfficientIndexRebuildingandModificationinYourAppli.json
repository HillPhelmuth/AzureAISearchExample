{
  "Id": "725",
  "Title": "\u0022Efficient Index Rebuilding and Modification in Your Application Code\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfYour application code providesredirection to the new index.Modifications with no rebuild requirementHow to rebuild an index1. Determine whether a rebuild is required. If you\u0027re just adding fields, or changingsome part of the index that is unrelated to fields, you might be able to simplyupdate the definition without deleting, recreating, and fully reloading it.2.\r\nGet an index definition in case you need it for future reference.3. Drop the existing index, assuming you aren\u0027t running new and old indexes side byside.Any queries targeting that index are immediately dropped. Remember thatdeleting an index is irreversible, destroying physical storage for the fields collectionand other constructs.\r\nPause to think about the implications before dropping it.4. Create a revised index, where the body of the request includes changed ormodified field definitions.5. Load the index with documents from an external source.When you create the index, physical storage is allocated for each field in the indexschema, with an inverted index created for each searchable field.\r\nFields that aren\u0027tsearchable can be used in filters or expressions, but don\u0027t have inverted indexes andaren\u0027t full-text or fuzzy searchable. On an index rebuild, these inverted indexes aredeleted and recreated based on the index schema you provide.When you load the index, each field\u0027s inverted index is populated with all of the unique,tokenized words from each document, with a map to corresponding document IDs.\r\nForexample, when indexing a hotels data set, an inverted index created for a City fieldmight contain terms for Seattle, Portland, and so forth. Documents that include Seattleor Portland in the City field would have their document ID listed alongside the term. Onany Add, Update or Delete operation, the terms and document ID list are updatedaccordingly.Indexing doesn\u0027t run in the background, but the search service will balance any indexingjobs against ongoing queries. During indexing, you can monitor query requests in theportal to ensure queries are completing in a timely manner.If indexing workloads introduce unacceptable levels of query latency, conductperformance analysis and review these performance tips for potential mitigation.Balancing workloadsCheck for updatesYou can begin querying an index as soon as the first document is loaded. If you know adocument\u0027s ID, the Lookup Document REST API returns the specific document.\n"
}