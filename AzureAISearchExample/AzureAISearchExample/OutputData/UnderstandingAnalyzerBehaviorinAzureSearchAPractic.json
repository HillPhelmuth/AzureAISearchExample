{
  "Id": "353",
  "Title": "\u0022Understanding Analyzer Behavior in Azure Search: A Practical Guide\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfPartial terms are only lowercased before being matchedagainst terms in the index. If an analyzer isn\u0027t configured to support these types ofqueries, you\u0027ll often receive unexpected results because matching terms don\u0027t existin the index.Test analyzer using the Analyze Text APIThe Analyze Text API is called using the following request:HTTPThe API then returns a list of the tokens extracted from the text.\r\nYou can see that thestandard Lucene analyzer splits the phone number into three separate tokens:JSONConversely, the phone number 4255550100 formatted without any punctuation istokenized into a single token.JSONPOST https://\u003CYOUR-SEARCH-SERVICE-NAME\u003E.search.windows.\r\nnet/indexes/tutorial-basic-index/analyze?api-version=2019-05-06  Content-Type: application/json  api-key: \u003CYOUR-ADMIN-API-KEY\u003E  {    \u0022text\u0022: \u0022(425) 555-0100\u0022,    \u0022analyzer\u0022: \u0022standard.\r\nlucene\u0022  }{    \u0022tokens\u0022: [        {            \u0022token\u0022: \u0022425\u0022,            \u0022startOffset\u0022: 1,            \u0022endOffset\u0022: 4,            \u0022position\u0022: 0        },        {            \u0022token\u0022: \u0022555\u0022,            \u0022startOffset\u0022: 6,            \u0022endOffset\u0022: 9,            \u0022position\u0022:\r\n1        },        {            \u0022token\u0022: \u00220100\u0022,            \u0022startOffset\u0022: 10,            \u0022endOffset\u0022: 14,            \u0022position\u0022: 2        }    ]}{  \u0022text\u0022: \u00224255550100\u0022,JSONKeep in mind that both query terms and the indexed documents are analyzed. Thinkingback to the search results from the previous step, we can start to see why those resultswere returned.In the first query, the incorrect phone numbers were returned because one of theirterms, 555, matched one of the terms we searched. In the second query, only the onenumber was returned because it was the only record that had a term matching4255550100.\n"
}