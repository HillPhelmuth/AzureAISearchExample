{
  "Id": "734",
  "Title": "\u0022Implementing Multi-Language Content Search with Azure AI Services\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfNon-string fields and non-searchable string fields don\u0027t undergo lexical analysis andaren\u0027t tokenized. Instead, they are stored and returned verbatim.Define a string field for each language variant.\uFF02Set a language analyzer on each field.\uFF02On the query request, set the searchFields parameter to specific fields, and thenuse select to return just those fields that have compatible content.\uFF02PrerequisitesAdd text translationThis article assumes you have translated strings in place. If that\u0027s not the case, you canattach Azure AI services to an enrichment pipeline, invoking text translation during dataingestion.\r\nText translation takes a dependency on the indexer feature and Azure AIservices, but all setup is done within Azure AI Search.To add text translation, follow these steps:1. Verify your content is in a supported data source.2. Create a data source that points to your content.3. Create a skillset that includes the Text Translation skill.The Text Translation skill takes a single string as input. If you have multiple fields,can create a skillset that calls Text Translation multiple times, once for each field.Alternatively, you can use the Text Merger skill to consolidate the content ofmultiple fields into one long string.\r\n4. Create an index that includes fields for translated strings. Most of this article coversindex design and field definitions for indexing and querying multi-languagecontent.5. Attach a multi-region Azure AI services resource to your skillset.6. Create and run the indexer, and then apply the guidance in this article to query justthe fields of interest.In Azure AI Search, queries target a single index. Developers who want to providelanguage-specific strings in a single search experience typically define dedicated fieldsto store the values: one field for English strings, one for French, and so on. The \u0022analyzer\u0022 property on a field definition is used to set the language analyzer. It willbe used for both indexing and query execution.JSON\uEA80 TipText translation is built into the Import data wizard. If you have a supported datasource with text you\u0027d like to translate, you can step through the wizard to try outthe language detection and translation functionality before writing any code.Define fields for content in different languagesAn intermediate step is building and populating the index before formulating a query.We mention this step here for completeness. One way to determine index availability isby checking the indexes list in the portal.\n"
}