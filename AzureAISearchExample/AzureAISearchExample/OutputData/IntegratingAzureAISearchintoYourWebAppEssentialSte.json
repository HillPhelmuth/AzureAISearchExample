{
  "Id": "147",
  "Title": "\u0022Integrating Azure AI Search into Your Web App: Essential Steps\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfThis lesson highlights theessential steps that establish integration. If you\u0027re looking for a cheat sheet on how tointegrate search into your web app, this article explains what you need to know.The application is available:SampleDemo website - aka.ms/azs-good-booksThe Function app uses the Azure SDK for Azure AI Search:NuGet: Azure.Search.DocumentsReference Documentation: Client LibraryThe Function app authenticates through the SDK to the cloud-based Azure AI SearchAPI using your resource name, resource key, and index name. The secrets are stored inthe Static Web App settings and pulled in to the Function as environment variables.\r\nJSONAzure SDK Azure.Search.DocumentsConfigure secrets in a local.settings.json file{  \u0022IsEncrypted\u0022: false,  \u0022Values\u0022: {    \u0022AzureWebJobsStorage\u0022: \u0022\u0022,    \u0022FUNCTIONS_WORKER_RUNTIME\u0022: \u0022dotnet-isolated\u0022,    \u0022SearchApiKey\u0022: \u0022\u0022,    \u0022SearchServiceName\u0022: \u0022\u0022,    \u0022SearchIndexName\u0022: \u0022good-books\u0022  },  \u0022Host\u0022: {    \u0022CORS\u0022: \u0022*\u0022  }}Azure Function: Search the catalogThe Search API takes a search term and searches across the documents in the SearchIndex, returning a list of matches.\r\nThe Azure Function pulls in the Search configuration information, and fulfills the query.C#using Azure;using Azure.Core.Serialization;using Azure.Search.Documents;using Azure.Search.Documents. Models;using Microsoft.Azure.Functions.Worker;using Microsoft.Azure.Functions.Worker.Http;using Microsoft.Extensions.Logging;using System.Net;using System.Text.Json;using System.Text.Json.Serialization;using WebSearch.Models;using SearchFilter = WebSearch.Models.SearchFilter;namespace WebSearch.Function{    public class Search    {        private static string searchApiKey = Environment.GetEnvironmentVariable(\u0022SearchApiKey\u0022, EnvironmentVariableTarget.Process);        private static string searchServiceName = Environment.GetEnvironmentVariable(\u0022SearchServiceName\u0022, EnvironmentVariableTarget.Process);        private static string searchIndexName = Environment.\n"
}