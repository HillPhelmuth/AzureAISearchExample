{
  "Id": "650",
  "Title": "\u0022Managing Azure Search Indexes: Creation, Deletion, and Configuration\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdf\\n\u0022);DeleteIndexIfExists(indexName, indexClient);private static void DeleteIndexIfExists(string indexName, SearchIndexClient indexClient){    try    {        if (indexClient.GetIndex(indexName) != null)        {            indexClient.DeleteIndex(indexName);        }    }    catch (RequestFailedException e) when (e.Status == 404)    {        // Throw an exception if the index name isn\u0027t found        Console.\r\nWriteLine(\u0022The index doesn\u0027t exist. No deletion occurred.\u0022);\uFF17 NoteThe example code in this article uses the synchronous methods for simplicity, butyou should use the asynchronous methods in your own applications to keep themscalable and responsive. For example, in the method above you could useDeleteIndexAsync instead of DeleteIndex.\r\nYou can use SearchIndexClient to create an index.The method below creates a new SearchIndex object with a list of SearchField objectsthat define the schema of the new index. Each field has a name, data type, and severalattributes that define its search behavior.Fields can be defined from a model class using FieldBuilder.\r\nThe FieldBuilder class usesreflection to create a list of SearchField objects for the index by examining the publicproperties and attributes of the given Hotel model class. We\u0027ll take a closer look at theHotel class later on.C#Besides fields, you could also add scoring profiles, suggesters, or CORS options to theindex (these parameters are omitted from the sample for brevity). You can find moreinformation about the SearchIndex object and its constituent parts in the SearchIndexproperties list, as well as in the REST API reference.Main creates a new \u0022hotels\u0022 index by calling the above method:C#Create an indexprivate static void CreateIndex(string indexName, SearchIndexClient indexClient){    FieldBuilder fieldBuilder = new FieldBuilder();    var searchFields = fieldBuilder.\n"
}