{
  "Id": "659",
  "Title": "\u0022Executing Queries with Azure SearchClient in C#\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfThe next step is query execution. Running the search is done using theSearchClient.Search method. For each query, pass the search text to use as a string (or\u0022*\u0022 if there\u0027s no search text), plus the search options created earlier. We also specifyHotel as the type parameter for SearchClient.Search, which tells the SDK to deserializedocuments in the search results into objects of type Hotel.C#SearchClient searchClient = indexClient.GetSearchClient(indexName);Console.WriteLine(\u0022{0}\u0022, \u0022Uploading documents...\r\n\\n\u0022);UploadDocuments(searchClient);Run queriesprivate static SearchClient CreateSearchClientForQueries(string indexName, IConfigurationRoot configuration){    string searchServiceEndPoint = configuration[\u0022SearchServiceEndPoint\u0022];    string queryApiKey = configuration[\u0022SearchServiceQueryApiKey\u0022];    SearchClient searchClient = new SearchClient(new Uri(searchServiceEndPoint), indexName, new AzureKeyCredential(queryApiKey));    return searchClient;}private static void RunQueries(SearchClient searchClient){    SearchOptions options;    SearchResults\u003CHotel\u003E results;    Console.\r\nWriteLine(\u0022Query 1: Search for \u0027motel\u0027. Return only the HotelName in results:\\n\u0022);    options = new SearchOptions();    options.Select.Add(\u0022HotelName\u0022);    results = searchClient.Search\u003CHotel\u003E(\u0022motel\u0022, options);    WriteDocuments(results);    Console.\r\nWrite(\u0022Query 2: Apply a filter to find hotels with rooms cheaper than $100 per night, \u0022);    Console.WriteLine(\u0022returning the HotelId and Description:\\n\u0022);    options = new SearchOptions()    {        Filter = \u0022Rooms/any(r: r/BaseRate lt 100)\u0022    };    options.Select.Add(\u0022HotelId\u0022);    options.Select.Add(\u0022Description\u0022);    results = searchClient.Search\u003CHotel\u003E(\u0022*\u0022, options);    WriteDocuments(results);    Console. Write(\u0022Query 3: Search the entire index, order by a specific field (lastRenovationDate) \u0022);    Console.Write(\u0022in descending order, take the top two results, and show only hotelName and \u0022);    Console.WriteLine(\u0022lastRenovationDate:\\n\u0022);    options =        new SearchOptions()        {            Size = 2        };    options.OrderBy.Add(\u0022LastRenovationDate desc\u0022);    options.Select.\n"
}