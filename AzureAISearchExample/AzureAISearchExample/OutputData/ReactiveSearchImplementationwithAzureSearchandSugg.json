{
  "Id": "215",
  "Title": "\u0022Reactive Search Implementation with Azure Search and Suggestions\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfpostSearchHandler(s);        }    const onEnterButton = (event) =\u003E {        if (event.keyCode === 13) {            onSearchHandler();        }    }    const onChangeHandler = () =\u003E {        var searchTerm = document.getElementById(\u0022search-box\u0022).value;        setShowSuggestions(true);        setQ(searchTerm);        // use this prop if you want to make the search more reactive        if (props.\r\nsearchChangeHandler) {            props.searchChangeHandler(searchTerm);        }    }    useEffect(_ =\u003E{        const timer = setTimeout(() =\u003E {            const body = {                q: q,                top: 5,                suggester: \u0027sg\u0027            };            if (q === \u0027\u0027) {                setSuggestions([]);            } else {                axios.\r\npost( \u0027/api/suggest\u0027, body)                .then(response =\u003E {                    console.log(JSON.stringify(response.data))                    setSuggestions(response.data.suggestions);                } )                .catch(error =\u003E {                    console.\r\nlog(error);                    setSuggestions([]);                });            }        }, 300);        return () =\u003E clearTimeout(timer);    }, [q, props]);    var suggestionDiv;    if (showSuggestions) {        suggestionDiv = (\u003CSuggestions suggestions={suggestions} suggestionClickHandler={(s) =\u003E suggestionClickHandler(s)}\u003E\u003C/Suggestions\u003E);\r\n} else {        suggestionDiv = (\u003Cdiv\u003E\u003C/div\u003E);    }    return (        \u003Cdiv \u003E            \u003Cdiv className=\u0022input-group\u0022 onKeyDown={e =\u003E onEnterButton(e)}\u003E                \u003Cdiv className=\u0022suggestions\u0022 \u003EThe Lookup API takes an ID and returns the document object from the Search Index. Python                    \u003Cinput                         autoComplete=\u0022off\u0022 // setting for browsers; not the app                        type=\u0022text\u0022                         id=\u0022search-box\u0022                         className=\u0022form-control rounded-0\u0022                         placeholder=\u0022What are you looking for?\u0022                         onChange={onChangeHandler}                         defaultValue={props.\n"
}