{
  "Id": "29",
  "Title": "\u0022Creating and Querying Documents with Azure Search in C#\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfsearch.windows.net/\u0022);     AzureKeyCredential credential = new AzureKeyCredential(apiKey);     SearchIndexClient adminClient = new SearchIndexClient(serviceEndpoint, credential);     // Create a SearchClient to load and query documents     SearchClient srchclient = new SearchClient(serviceEndpoint, indexName, credential);     .\r\n. .  }Create an indexIn this example, synchronous methods of the Azure.Search.Documents library areused for simplicity and readability. However, for production scenarios, you shoulduse asynchronous methods to keep your app scalable and responsive. For example,you would use CreateIndexAsync instead of CreateIndex.1. Add an empty class definition to your project: Hotel.cs2. Copy the following code into Hotel.cs to define the structure of a hoteldocument. Attributes on the field determine how it\u0027s used in an application.For example, the IsFilterable attribute must be assigned to every field thatsupports a filter expression.\r\nC#using System;using System.Text.Json.Serialization;using Azure.Search.Documents.Indexes;using Azure.Search.Documents.Indexes.Models;namespace AzureSearch.\r\nQuickstart{    public partial class Hotel    {        [SimpleField(IsKey = true, IsFilterable = true)]        public string HotelId { get; set; }        [SearchableField(IsSortable = true)]        public string HotelName { get; set; }        [SearchableField(AnalyzerName = LexicalAnalyzerName.Values.EnLucene)]        public string Description { get; set; }        [SearchableField(AnalyzerName = LexicalAnalyzerName.Values. FrLucene)]        [JsonPropertyName(\u0022Description_fr\u0022)]        public string DescriptionFr { get; set; }        [SearchableField(IsFilterable = true, IsSortable = true, IsFacetable = true)]        public string Category { get; set; }        [SearchableField(IsFilterable = true, IsFacetable = true)]        public string[] Tags { get; set; }        [SimpleField(IsFilterable = true, IsSortable = true, IsFacetable = true)]        public bool?\n"
}