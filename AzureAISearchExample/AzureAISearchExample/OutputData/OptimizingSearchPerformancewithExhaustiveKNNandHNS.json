{
  "Id": "430",
  "Title": "\u0022Optimizing Search Performance with Exhaustive KNN and HNSW\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfOnly fields marked as searchable in the index, or as searchFields in the query, are usedfor searching and scoring. Only fields marked as retrievable, or fields specified inselect in the query, are returned in search results, along with their search score.\r\nThis algorithm is intended for scenarios where high recall is of utmost importance, andusers are willing to accept the trade-offs in search performance. Because it\u0027scomputationally intensive, use exhaustive KNN for small to medium datasets, or whenprecision requirements outweigh query performance considerations.\r\nAnother use is to build a dataset to evaluate approximate nearest neighbor algorithmrecall. Exhaustive KNN can be used to build the ground truth set of nearest neighbors.Determine relevance in vector searchWhen to use exhaustive KNNExhaustive KNN support is available through 2023-11-01 REST API, 2023-10-01-PreviewREST API, and in Azure SDK client libraries that target either REST API version.\r\nHNSW is recommended for most scenarios due to its efficiency when searching overlarger data sets. Internally, HNSW creates extra data structures for faster search.However, you aren\u0027t locked into using them on every search. HNSW has severalconfiguration parameters that can be tuned to achieve the throughput, latency, andrecall objectives for your search application. For example, at query time, you can specifyoptions for exhaustive search, even if the vector field is indexed for HNSW.Vector queries execute against an embedding space consisting of vectors generatedfrom the same embedding model. Generally, the input value within a query request isfed into the same machine learning model that generated embeddings in the vectorindex. The output is a vector in the same embedding space. Since similar vectors areclustered close together, finding matches is equivalent to finding the vectors that areclosest to the query vector, and returning the associated documents as the search result.\n"
}