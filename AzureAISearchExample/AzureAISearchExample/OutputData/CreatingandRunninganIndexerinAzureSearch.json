{
  "Id": "332",
  "Title": "\u0022Creating and Running an Indexer in Azure Search\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfThe \u0022targetFieldName\u0022 is a field in an index.        {            \u0022name\u0022: \u0022languageCode\u0022,            \u0022type\u0022: \u0022Edm.String\u0022,            \u0022searchable\u0022: \u0022true\u0022,            \u0022filterable\u0022: \u0022false\u0022,            \u0022facetable\u0022: \u0022false\u0022        },        {            \u0022name\u0022: \u0022keyPhrases\u0022,            \u0022type\u0022: \u0022Collection(Edm.\r\nString)\u0022,            \u0022searchable\u0022: \u0022true\u0022,            \u0022filterable\u0022: \u0022false\u0022,            \u0022facetable\u0022: \u0022false\u0022        },        {            \u0022name\u0022: \u0022organizations\u0022,            \u0022type\u0022: \u0022Collection(Edm.String)\u0022,            \u0022searchable\u0022: \u0022true\u0022,            \u0022sortable\u0022: \u0022false\u0022,            \u0022filterable\u0022: \u0022false\u0022,            \u0022facetable\u0022: \u0022false\u0022        }    ]}r = requests.\r\nput(endpoint \u002B \u0022/indexes/\u0022 \u002B index_name,                 data=json.dumps(index_payload), headers=headers, params=params)print(r.status_code)Step 4: Create and run an indexerBesides hooking up inputs to outputs, you can also use field mappings to flatten datastructures.\r\nFor more information, see How to map enriched fields to a searchable index.Run this script to create an indexer named cogsrch-py-indexer. Python# Create an indexerindexer_payload = {    \u0022name\u0022: indexer_name,    \u0022dataSourceName\u0022: datasource_name,    \u0022targetIndexName\u0022: index_name,    \u0022skillsetName\u0022: skillset_name,    \u0022fieldMappings\u0022: [        {            \u0022sourceFieldName\u0022: \u0022metadata_storage_path\u0022,            \u0022targetFieldName\u0022: \u0022id\u0022,            \u0022mappingFunction\u0022:            {\u0022name\u0022: \u0022base64Encode\u0022}        },        {            \u0022sourceFieldName\u0022: \u0022content\u0022,            \u0022targetFieldName\u0022: \u0022content\u0022        }    ],    \u0022outputFieldMappings\u0022:    [        {            \u0022sourceFieldName\u0022:\n"
}