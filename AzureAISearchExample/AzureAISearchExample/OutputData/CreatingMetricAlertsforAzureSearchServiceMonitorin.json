{
  "Id": "1345",
  "Title": "\u0022Creating Metric Alerts for Azure Search Service Monitoring\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfFor a search service, it\u0027s common to create a metric alert for search latency and throttledqueries. If you know when queries are dropped, you can look for remedies that reduceload or increase capacity. For example, if throttled queries increase during indexing, youcould postpone it until query activity subsides.\r\nWhen pushing the limits of a particular replica-partition configuration, setting up alertsfor query volume thresholds (QPS) is also helpful.1. Under the Monitoring section, select Alerts and then click \u002B New alert rule. Makesure your search service is selected as the resource.2. Under Condition, click Add.3. Configure signal logic.\r\nFor signal type, choose metrics and then select the signal.4. After selecting the signal, you can use a chart to visualize historical data for aninformed decision on how to proceed with setting up conditions.5. Next, scroll down to Alert logic. For proof-of-concept, you could specify anartificially low value for testing purposes.\r\nCreate a metric alert6. Next, specify or create an Action Group. This is the response to invoke when thethreshold is met. It might be a push notification or an automated response.7. Last, specify Alert details. Name and describe the alert, assign a severity value, andspecify whether to create the rule in an enabled or disabled state.\r\nIf you specified an email notification, you will receive an email from \u0022Microsoft Azure\u0022with a subject line of \u0022Azure: Activated Severity: 3 \u003Cyour rule name\u003E\u0022.If you haven\u0027t done so already, review the fundamentals of search service monitoring tolearn about the full range of oversight capabilities. Next stepsMonitor operations and activity in Azure Cognitive SearchMonitor indexer status and results inAzure Cognitive SearchArticle\u202209/15/2022You can monitor indexer processing in the Azure portal, or programmatically throughREST calls or an Azure SDK. In addition to status about the indexer itself, you can reviewstart and end times, and detailed errors and warnings from a particular run.\n"
}