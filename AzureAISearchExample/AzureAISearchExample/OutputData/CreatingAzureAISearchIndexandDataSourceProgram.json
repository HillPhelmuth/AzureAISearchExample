{
  "Id": "272",
  "Title": "\u0022Creating Azure AI Search Index and Data Source Program\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfcs contains the schema that defines the index\uFF17 NoteIn most cases, auto-generated document keys, such as those created by default bysome indexers, do not make good document keys for combined indexes. In generalyou will want to use a meaningful, unique key value that already exists in, or can beeasily added to, your data sources.4 - Explore the codeProgram.\r\ncs contains functions that create the Azure AI Search index, data sources,and indexers, and load the combined results into the index.This sample program uses CreateIndexAsync to define and create an Azure AI Searchindex. It takes advantage of the FieldBuilder class to generate an index structure from aC# data model class.The data model is defined by the Hotel class, which also contains references to theAddress and Room classes. The FieldBuilder drills down through multiple classdefinitions to generate a complex data structure for the index. Metadata tags are usedto define the attributes of each field, such as whether it\u0027s searchable or sortable.\r\nThe program will delete any existing index of the same name before creating the newone, in case you want to run this example more than once.The following snippets from the Hotel.cs file show single fields, followed by a referenceto another data model class, Room[], which in turn is defined in Room.cs file (notshown).C#In the Program.\r\ncs file, a SearchIndex is defined with a name and a field collectiongenerated by the FieldBuilder.Build method, and then created as follows:C#Create an index. . .[SimpleField(IsFilterable = true, IsKey = true)]public string HotelId { get; set; }[SearchableField(IsFilterable = true, IsSortable = true)]public string HotelName { get; set; }. . .public Room[] Rooms { get; set; }. . .private static async Task CreateIndexAsync(string indexName, SearchIndexClient indexClient){    // Create a new search index structure that matches the properties of the Hotel class.    // The Address and Room classes are referenced from the Hotel class. The FieldBuilder    // will enumerate these to create a complex data structure for the index.Next the main program includes logic to create the Azure Cosmos DB data source forthe hotels data.First it concatenates the Azure Cosmos DB database name to the connection string.Then it defines a SearchIndexerDataSourceConnection object.\n"
}