{
  "Id": "487",
  "Title": "\u0022Enhancing Search with Azure AI Enrichment: A Comprehensive Guide\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfBecause Azure AI Search is a full text search solution, the purpose of AI enrichment is toimprove the utility of your content in search-related scenarios:Apply translation and language detection for multi-lingual searchApply entity recognition to extract people names, places, and other entities fromlarge chunks of textApply key phrase extraction to identify and output important termsApply Optical Character Recognition (OCR) to recognize printed and handwrittentext in binary filesApply image analysis to describe image content, and output the descriptions assearchable text fieldsAI enrichment is an extension of an indexer pipeline that connects to Azure datasources.\r\nAn enrichment pipeline has all of the components of an indexer pipeline(indexer, data source, index), plus a skillset that specifies atomic enrichment steps.The following diagram shows the progression of AI enrichment:Import is the first step. Here, the indexer connects to a data source and pulls content(documents) into the search service. Azure Blob Storage is the most common resourceused in AI enrichment scenarios, but any supported data source can provide content.\r\nEnrich \u0026 Index covers most of the AI enrichment pipeline:Enrichment starts when the indexer \u0022cracks documents\u0022 and extracts images andtext. The kind of processing that occurs next depends on your data and which skillsyou\u0027ve added to a skillset. If you have images, they can be forwarded to skills thatperform image processing. Text content is queued for text and natural languageprocessing. Internally, skills create an \u0022enriched document\u0022 that collects thetransformations as they occur.Enriched content is generated during skillset execution, and is temporary unlessyou save it. You can enable an enrichment cache to persist cracked documents andskill outputs for subsequent reuse during future skillset executions.To get content into a search index, the indexer must have mapping information forsending enriched content to target field. Field mappings (explicit or implicit) setthe data path from source data to a search index. Output field mappings set thedata path from enriched documents to an index.Indexing is the process wherein raw and enriched content is ingested into thephysical data structures of a search index (its files and folders). Lexical analysis andtokenization occur in this step.Exploration is the last step.\n"
}