{
  "Id": "1285",
  "Title": "\u0022Customizing Relevance Scoring in Azure AI Search: BM25 Algorithm Explained\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfMatching documents are ranked by their search score, with the top resultsreturned in the query response. It\u0027s possible to get some score variation in results, evenfrom the same query executing over the same search index, but usually these variationsare small and don\u0027t change the overall ranking of results.BM25 has defaults for weighting term frequency and document length.\r\nYou cancustomize these properties if the defaults aren\u0027t suited to your content. Configurationchanges are scoped to individual indexes, which means you can adjust relevance scoringbased on the characteristics of each index.Depending on the age of your search service, Azure AI Search supports two scoringalgorithms for a full text search query:Okapi BM25 algorithm (after July 15, 2020)Classic similarity algorithm (before July 15, 2020)BM25 ranking is the default because it tends to produce search rankings that alignbetter with user expectations. It includes parameters for tuning results based on factorssuch as document size.\r\nFor search services created after July 2020, BM25 is the onlyscoring algorithm. If you try to set \u0022similarity\u0022 to ClassicSimilarity on a new service, anHTTP 400 error is returned because that algorithm isn\u0027t supported by the service.For older services, classic similarity remains the default algorithm.\r\nOlder services canupgrade to BM25 on a per-index basis. When switching from classic to BM25, you canexpect to see some differences how search results are ordered.Default scoring algorithmBM25 ranking provides two parameters for tuning the relevance score calculation.1. Use a Create or Update Index request to set BM25 parameters:HTTP2. If the index is live, append the allowIndexDowntime=true URI parameter on therequest, shown on the previous example.Because Azure AI Search doesn\u0027t allow updates to a live index, you need to takethe index offline so that the parameters can be added. Indexing and queryrequests fail while the index is offline. The duration of the outage is the amount oftime it takes to update the index, usually no more than several seconds.\n"
}