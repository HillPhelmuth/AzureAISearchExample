{
  "Id": "305",
  "Title": "\u0022Building and Managing Enriched Indexing Pipelines in Azure Cognitive Search\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfYou can first run an empty query thatreturns all documents, or a more targeted search that returns new field content createdby the pipeline.1. In Azure portal, in the search Overview page, select Indexes.2. Find demoindex in the list. It should have 14 documents. If the document count iszero, the indexer is either still running or the page hasn\u0027t been refreshed yet.3. Select demoindex. Search explorer is the first tab.4.\r\nContent is searchable as soon as the first document is loaded. To verify contentexists, run an unspecified query by clicking Search. This query returns all currentlyindexed documents, giving you an idea of what the index contains.5. Next, paste in the following string for more manageable results:search=*\u0026$select=id, languageCode, organizationsIn the early experimental stages of development, the most practical approach for designiteration is to delete the objects from Azure Cognitive Search and allow your code torebuild them. Resource names are unique. Deleting an object lets you recreate it usingthe same name.\r\nThe sample code for this tutorial checks for existing objects and deletes them so thatyou can rerun your code. You can also use the portal to delete indexes, indexers, datasources, and skillsets.This tutorial demonstrated the basic steps for building an enriched indexing pipelinethrough the creation of component parts: a data source, skillset, index, and indexer.\r\nBuilt-in skills were introduced, along with skillset definition and the mechanics ofchaining skills together through inputs and outputs. You also learned that5 - SearchReset and rerunTakeawaysoutputFieldMappings in the indexer definition is required for routing enriched valuesfrom the pipeline into a searchable index on an Azure Cognitive Search service. Finally, you learned how to test results and reset the system for further iterations. Youlearned that issuing queries against the index returns the output created by the enrichedindexing pipeline. You also learned how to check indexer status, and which objects todelete before rerunning a pipeline.\n"
}