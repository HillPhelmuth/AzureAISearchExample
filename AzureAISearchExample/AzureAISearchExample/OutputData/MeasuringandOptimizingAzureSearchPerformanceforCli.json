{
  "Id": "1313",
  "Title": "\u0022Measuring and Optimizing Azure Search Performance for Client Requests\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfTo do this, it\u0027s important to be able to see how long the search service takes to completethe work, as well as how long it takes to make the round-trip request from the client andback to the client. The diagnostics logs could be used to look up individual operations,but it might be easier to do this all from a client tool, such as Postman.\r\nIn the example below, a REST-based search query was executed. Cognitive Searchincludes in every response the number of milliseconds it takes to complete the query,visible in the Headers tab, in \u0022elapsed-time\u0022. Next to Status at the top of the response,you\u0027ll find the round-trip duration, in this case, 418 milliseconds (ms). In the resultssection, the \u201CHeaders\u201D tab was chosen. Using these two values, highlighted with a redbox in the image below, we see the search service took 21 ms to complete the searchquery and the entire client round-trip request took 125 ms.\r\nBy subtracting these twonumbers we can determine that it took 104-ms additional time to transmit the searchquery to the search service and to transfer the search results back to the client.| where resultSignature_d != 403 and resultSignature_d != 404 and OperationName in (\u0022Query.Search\u0022, \u0022Query.Suggest\u0022, \u0022Query.Lookup\u0022, \u0022Query.\r\nAutocomplete\u0022)| summarize   ThrottledQueriesPerMinute=bin(countif(OperationName in (\u0022Query.Search\u0022, \u0022Query.Suggest\u0022, \u0022Query.Lookup\u0022, \u0022Query.Autocomplete\u0022) and resultSignature_d == 503)/(intervalsize/1m), 0.01)  by bin(TimeGenerated, intervalsize)| render timechart   Measure individual queriesThis technique helps you isolate network latencies from other factors impacting queryperformance. One potential reason for your search service to throttle requests is due to the sheernumber of queries being performed where volume is captured as queries per second(QPS) or queries per minute (QPM). As your search service receives more QPS, it willtypically take longer and longer to respond to those queries until it can no longer keepup, as which it will send back a throttling 503 HTTP response.\n"
}