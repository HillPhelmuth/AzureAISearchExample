{
  "Id": "400",
  "Title": "\u0022Efficient Hierarchical Graph Structures for Scalable Similarity Search Algorithms\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfIt organizes high-dimensional data points intoa hierarchical graph structure that enables fast and scalable similarity search whileallowing a tunable a trade-off between search accuracy and computational cost.Because the algorithm requires all data points to reside in memory for fast randomaccess, this algorithm consumes vector index size quota.Exhaustive K-nearest neighbors (KNN): Calculates the distances between the queryvector and all data points. It\u0027s computationally intensive, so it works best forsmaller datasets. Because the algorithm doesn\u0027t require fast random access of datapoints, this algorithm doesn\u0027t consume vector index size quota.\r\nHowever, thisalgorithm will provide the global set of nearest neighbors.Within an index definition, you can specify one or more algorithms, and then for eachvector field specify which algorithm to use:Create a vector index to specify an algorithm in the index and on fields.\r\nFor exhaustive KNN, use 2023-11-01, 2023-10-01-Preview, or Azure SDK betalibraries that target either REST API version.Algorithm parameters that are used to initialize the index during index creation areimmutable and can\u0027t be changed after the index is built. However, parameters that affectthe query-time characteristics (efSearch) can be modified.\r\nIn addition, fields that specify HNSW algorithm also support exhaustive KNN searchusing the query request parameter \u0022exhaustive\u0022: true. The opposite isn\u0027t true however.Nearest neighbors searchIf a field is indexed for exhaustiveKnn, you can\u0027t use HNSW in the query because theadditional data structures that enable efficient search don\u2019t exist.Approximate Nearest Neighbor search (ANN) is a class of algorithms for findingmatches in vector space. This class of algorithms employs different data structures ordata partitioning methods to significantly reduce the search space to accelerate queryprocessing.ANN algorithms sacrifice some accuracy, but offer scalable and faster retrieval ofapproximate nearest neighbors, which makes them ideal for balancing accuracy againstefficiency in modern information retrieval applications.\n"
}