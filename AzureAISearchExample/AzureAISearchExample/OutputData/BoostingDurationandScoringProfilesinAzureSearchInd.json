{
  "Id": "1300",
  "Title": "\u0022Boosting Duration and Scoring Profiles in Azure Search Index\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfboostingDuration must be formatted as an XSD \u0022dayTimeDuration\u0022 value (a restrictedsubset of an ISO 8601 duration value). The pattern for this is: \u0022P[nD][T[nH][nM][nS]]\u0022.The following table provides several examples.\r\nDurationboostingDuration1 day\u0022P1D\u0022Set boostingDurationDurationboostingDuration2 days and 12 hours\u0022P2DT12H\u002215 minutes\u0022PT15M\u002230 days, 5 hours, 10 minutes, and 6.334 seconds\u0022P30DT5H10M6.334S\u0022For more examples, see XML Schema: Datatypes (W3.org web site).The following example shows the schema of an index with two scoring profiles(boostGenre, newAndHighlyRated).\r\nAny query against this index that includes eitherprofile as a query parameter will use the profile to score the result set.The boostGenre profile uses weighted text fields, boosting matches found in albumTitle,genre, and artistName fields. The fields are boosted 1.5, 5, and 2 respectively.\r\nWhy isgenre boosted so much higher than the others? If search is conducted over data that issomewhat homogenous (as is the case with \u0027genre\u0027 in the musicstoreindex), you mightneed a larger variance in the relative weights. For example, in the musicstoreindex, \u0027rock\u0027appears as both a genre and in identically phrased genre descriptions. If you want genreto outweigh genre description, the genre field will need a much higher relative weight.JSONExtended example{    \u0022name\u0022: \u0022musicstoreindex\u0022,    \u0022fields\u0022: [      { \u0022name\u0022: \u0022key\u0022, \u0022type\u0022: \u0022Edm.String\u0022, \u0022key\u0022: true },      { \u0022name\u0022: \u0022albumTitle\u0022, \u0022type\u0022: \u0022Edm.\n"
}