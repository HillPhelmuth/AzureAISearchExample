{
  "Id": "1621",
  "Title": "\u0022Handling Numeric Comparisons and Special Cases in Azure AI Search\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfInt32Constant is converted to Edm.Int64 before comparisonEdm.Int32Edm.DoubleComparisons to NaN, -INF, or INF are not allowedEdm.Int32Edm.Int64n/aEdm.Int32Edm.Int32n/aFor comparisons that are not allowed, such as comparing a field of type Edm.Int64 toNaN, the Azure AI Search REST API will return an \u0022HTTP 400: Bad Request\u0022 error.When using comparison operators, it\u0027s important to remember that all non-collectionfields in Azure AI Search can potentially be null.\r\nThe following table shows all thepossible outcomes for a comparison expression where either side can be null:OperatorResult when only thefield or variable is nullResult when onlythe constant is nullResult when both the field orvariable and the constant arenullgtfalseHTTP 400: BadRequest errorHTTP 400: Bad Request errorltfalseHTTP 400: BadRequest errorHTTP 400:\r\nBad Request errorgefalseHTTP 400: BadRequest errorHTTP 400: Bad Request errorlefalseHTTP 400: BadRequest errorHTTP 400: Bad Request error\uFF09 ImportantEven though numeric type comparisons are flexible, we highly recommend writingcomparisons in filters so that the constant value is of the same data type as thevariable or function to which it is being compared.\r\nThis is especially importantwhen mixing floating-point and integer values, where implicit conversions that loseprecision are possible. Special cases for null and NaNOperatorResult when only thefield or variable is nullResult when onlythe constant is nullResult when both the field orvariable and the constant arenulleqfalsefalsetruenetruetruefalseIn summary, null is equal only to itself, and is not less or greater than any other value.If your index has fields of type Edm.Double and you upload NaN values to those fields,you will need to account for that when writing filters. Azure AI Search implements theIEEE 754 standard for handling NaN values, and comparisons with such values producenon-obvious results, as shown in the following table.\n"
}