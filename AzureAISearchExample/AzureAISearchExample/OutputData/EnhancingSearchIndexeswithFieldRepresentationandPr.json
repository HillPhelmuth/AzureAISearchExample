{
  "Id": "409",
  "Title": "\u0022Enhancing Search Indexes with Field Representation and Processing\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfAn index includes fields that duplicate or representyour source content. An index field might be simple transference (a title or description ina source document becomes a title or description in a search index), or a field mightcontain the output of an external process, such as vectorization or skill processing thatgenerates a representation or text description of an image.\r\nSince you probably know what kind of content you want to search over, consider theindexing features that are applicable to each content type:ContenttypeIndexed asFeaturestexttokens,unalteredtextIndexers can pull plain text from other Azure resources like AzureStorage and Cosmos DB. You can also push any JSON content to anindex.\r\nTo modify text in flight, use analyzers and normalizers to addlexical processing during indexing. Synonym maps are useful if sourcedocuments are missing terminology that might be used in a query.textvectors Text can be chunked and vectorized externally and then indexed asvector fields in your index.\r\nimagetokens,unalteredtext Skills for OCR and Image Analysis can process images for textrecognition or image characteristics. Image information is converted tosearchable text and added to the index. Skills have an indexerrequirement.imagevectors Images can be vectorized externally for a mathematical representationof image content and then indexed as vector fields in your index. Searchable content in Azure AI Search121ContenttypeIndexed asFeaturesvideovectors Video files can be vectorized externally for a mathematicalrepresentation of video content and then indexed as vector fields inyour index.audiovectors Audio files can be vectorized externally for a mathematicalrepresentation of audio content and then indexed as vector fields inyour index. The generally available functionality of vector support requires that you call otherlibraries or models for data chunking and vectorization. However, integratedvectorization (preview) embeds these steps. For code samples showing bothapproaches, see azure-search-vectors repo.\n"
}