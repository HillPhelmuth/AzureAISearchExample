{
  "Id": "1269",
  "Title": "\u0022Advanced Lucene Query Syntax and Partial Term Search Examples\u0022",
  "Text": "C:\\Users\\adamh\\Downloads\\azure-search.pdfLucene syntax query examples for building advanced queriesHow full text search works in Azure Cognitive SearchSimple query syntaxFull Lucene query syntaxFilter syntaxNext stepsPartial term search and patterns withspecial characters (hyphens, wildcard,regex, patterns)Article\u202203/23/2023A partial term search refers to queries consisting of term fragments, where instead of awhole term, you might have just the beginning, middle, or end of term (sometimesreferred to as prefix, infix, or suffix queries).\r\nA partial term search might include acombination of fragments, often with special characters such as hyphens, dashes, orslashes that are part of the query string.\r\nCommon use-cases include parts of a phonenumber, URL, codes, or hyphenated compound words.Partial terms and special characters can be problematic if the index doesn\u0027t have a tokenthat represents the text fragment you want to search for. During the lexical analysisphase of indexing (assuming the default standard analyzer), special characters arediscarded, compound words are split up, and whitespace is deleted.\r\nIf you\u0027re searchingfor a text fragment that was modified during lexical analysis, the query fails because nomatch is found. Consider this example: a phone number like \u002B1 (425) 703-6214(tokenized as \u00221\u0022, \u0022425\u0022, \u0022703\u0022, \u00226214\u0022) won\u0027t show up in a \u00223-62\u0022 query because thatcontent doesn\u0027t actually exist in the index. The solution is to invoke an analyzer during indexing that preserves a complete string,including spaces and special characters if necessary, so that you can include the spacesand characters in your query string. Having a whole, un-tokenized string enables patternmatching for \u0022starts with\u0022 or \u0022ends with\u0022 queries, where the pattern you provide can beevaluated against a term that isn\u0027t transformed by lexical analysis.If you need to support search scenarios that call for analyzed and non-analyzed content,consider creating two fields in your index, one for each scenario. One field undergoeslexical analysis.\n"
}